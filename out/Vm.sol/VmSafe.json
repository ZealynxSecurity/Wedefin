{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","addr(uint256)":"ffa18649","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","closeFile(string)":"48c3241f","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptUint(string)":"652fd489","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resumeGasMetering()":"2bcd50e0","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","sleep(uint256)":"fa9d8713","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopMappingRecording()":"0d4aae9b","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","unixTime()":"625387dc","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may result in Script simulations differing from on-chain execution. It is recommended to only use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"VmSafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/@aave/\",\":@openzeppelin/=lib/@openzeppelin/\",\":@uniswap/=lib/@uniswap/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x882b5ae1b429dda7696bc57c913808f0942423d024fad8cedf0ba08d34040649\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://31b63dcea38a411471679c9cc78b3f6d5ae830b9e0560091a6d6b1f0049aa166\",\"dweb:/ipfs/QmW61wSQ3yj5j4yapXVCxmwdXFEr8ASnxjXiDev8QHVgHT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@aave/=lib/@aave/","@openzeppelin/=lib/@openzeppelin/","@uniswap/=lib/@uniswap/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"VmSafe"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x882b5ae1b429dda7696bc57c913808f0942423d024fad8cedf0ba08d34040649","urls":["bzz-raw://31b63dcea38a411471679c9cc78b3f6d5ae830b9e0560091a6d6b1f0049aa166","dweb:/ipfs/QmW61wSQ3yj5j4yapXVCxmwdXFEr8ASnxjXiDev8QHVgHT"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":27636,"exportedSymbols":{"Vm":[27635],"VmSafe":[27034]},"nodeType":"SourceUnit","src":"117:90555:50","nodes":[{"id":23832,"nodeType":"PragmaDirective","src":"117:31:50","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":23833,"nodeType":"PragmaDirective","src":"149:33:50","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":27034,"nodeType":"ContractDefinition","src":"409:75703:50","nodes":[{"id":23841,"nodeType":"EnumDefinition","src":"529:533:50","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":23835,"nodeType":"StructuredDocumentation","src":"432:92:50","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":23836,"name":"None","nameLocation":"610:4:50","nodeType":"EnumValue","src":"610:4:50"},{"id":23837,"name":"Broadcast","nameLocation":"714:9:50","nodeType":"EnumValue","src":"714:9:50"},{"id":23838,"name":"RecurrentBroadcast","nameLocation":"829:18:50","nodeType":"EnumValue","src":"829:18:50"},{"id":23839,"name":"Prank","nameLocation":"939:5:50","nodeType":"EnumValue","src":"939:5:50"},{"id":23840,"name":"RecurrentPrank","nameLocation":"1042:14:50","nodeType":"EnumValue","src":"1042:14:50"}],"name":"CallerMode","nameLocation":"534:10:50"},{"id":23854,"nodeType":"EnumDefinition","src":"1118:791:50","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":23842,"nodeType":"StructuredDocumentation","src":"1068:45:50","text":"The kind of account access that occurred."},"members":[{"id":23843,"name":"Call","nameLocation":"1186:4:50","nodeType":"EnumValue","src":"1186:4:50"},{"id":23844,"name":"DelegateCall","nameLocation":"1252:12:50","nodeType":"EnumValue","src":"1252:12:50"},{"id":23845,"name":"CallCode","nameLocation":"1322:8:50","nodeType":"EnumValue","src":"1322:8:50"},{"id":23846,"name":"StaticCall","nameLocation":"1390:10:50","nodeType":"EnumValue","src":"1390:10:50"},{"id":23847,"name":"Create","nameLocation":"1446:6:50","nodeType":"EnumValue","src":"1446:6:50"},{"id":23848,"name":"SelfDestruct","nameLocation":"1505:12:50","nodeType":"EnumValue","src":"1505:12:50"},{"id":23849,"name":"Resume","nameLocation":"1644:6:50","nodeType":"EnumValue","src":"1644:6:50"},{"id":23850,"name":"Balance","nameLocation":"1703:7:50","nodeType":"EnumValue","src":"1703:7:50"},{"id":23851,"name":"Extcodesize","nameLocation":"1764:11:50","nodeType":"EnumValue","src":"1764:11:50"},{"id":23852,"name":"Extcodehash","nameLocation":"1829:11:50","nodeType":"EnumValue","src":"1829:11:50"},{"id":23853,"name":"Extcodecopy","nameLocation":"1892:11:50","nodeType":"EnumValue","src":"1892:11:50"}],"name":"AccountAccessKind","nameLocation":"1123:17:50"},{"id":23865,"nodeType":"EnumDefinition","src":"1949:683:50","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":23855,"nodeType":"StructuredDocumentation","src":"1915:29:50","text":"Forge execution contexts."},"members":[{"id":23856,"name":"TestGroup","nameLocation":"2047:9:50","nodeType":"EnumValue","src":"2047:9:50"},{"id":23857,"name":"Test","nameLocation":"2109:4:50","nodeType":"EnumValue","src":"2109:4:50"},{"id":23858,"name":"Coverage","nameLocation":"2170:8:50","nodeType":"EnumValue","src":"2170:8:50"},{"id":23859,"name":"Snapshot","nameLocation":"2235:8:50","nodeType":"EnumValue","src":"2235:8:50"},{"id":23860,"name":"ScriptGroup","nameLocation":"2327:11:50","nodeType":"EnumValue","src":"2327:11:50"},{"id":23861,"name":"ScriptDryRun","nameLocation":"2393:12:50","nodeType":"EnumValue","src":"2393:12:50"},{"id":23862,"name":"ScriptBroadcast","nameLocation":"2472:15:50","nodeType":"EnumValue","src":"2472:15:50"},{"id":23863,"name":"ScriptResume","nameLocation":"2551:12:50","nodeType":"EnumValue","src":"2551:12:50"},{"id":23864,"name":"Unknown","nameLocation":"2619:7:50","nodeType":"EnumValue","src":"2619:7:50"}],"name":"ForgeContext","nameLocation":"1954:12:50"},{"id":23874,"nodeType":"StructDefinition","src":"2694:237:50","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":23866,"nodeType":"StructuredDocumentation","src":"2638:51:50","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":23869,"mutability":"mutable","name":"topics","nameLocation":"2792:6:50","nodeType":"VariableDeclaration","scope":23874,"src":"2782:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":23867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":23868,"nodeType":"ArrayTypeName","src":"2782:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":23871,"mutability":"mutable","name":"data","nameLocation":"2850:4:50","nodeType":"VariableDeclaration","scope":23874,"src":"2844:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":23870,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":23873,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:50","nodeType":"VariableDeclaration","scope":23874,"src":"2909:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23872,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:50","scope":27034,"visibility":"public"},{"id":23880,"nodeType":"StructDefinition","src":"3000:119:50","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":23875,"nodeType":"StructuredDocumentation","src":"2937:58:50","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":23877,"mutability":"mutable","name":"key","nameLocation":"3065:3:50","nodeType":"VariableDeclaration","scope":23880,"src":"3058:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":23876,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":23879,"mutability":"mutable","name":"url","nameLocation":"3109:3:50","nodeType":"VariableDeclaration","scope":23880,"src":"3102:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":23878,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:50","scope":27034,"visibility":"public"},{"id":23901,"nodeType":"StructDefinition","src":"3179:615:50","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":23881,"nodeType":"StructuredDocumentation","src":"3125:49:50","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":23883,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:50","nodeType":"VariableDeclaration","scope":23901,"src":"3252:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23882,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23886,"mutability":"mutable","name":"topics","nameLocation":"3354:6:50","nodeType":"VariableDeclaration","scope":23901,"src":"3344:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":23884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":23885,"nodeType":"ArrayTypeName","src":"3344:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":23888,"mutability":"mutable","name":"data","nameLocation":"3412:4:50","nodeType":"VariableDeclaration","scope":23901,"src":"3406:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":23887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":23890,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:50","nodeType":"VariableDeclaration","scope":23901,"src":"3453:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":23892,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:50","nodeType":"VariableDeclaration","scope":23901,"src":"3509:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":23891,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":23894,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:50","nodeType":"VariableDeclaration","scope":23901,"src":"3570:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":23896,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:50","nodeType":"VariableDeclaration","scope":23901,"src":"3650:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":23895,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":23898,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:50","nodeType":"VariableDeclaration","scope":23901,"src":"3709:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23900,"mutability":"mutable","name":"removed","nameLocation":"3780:7:50","nodeType":"VariableDeclaration","scope":23901,"src":"3775:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23899,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:50","scope":27034,"visibility":"public"},{"id":23913,"nodeType":"StructDefinition","src":"3870:334:50","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":23902,"nodeType":"StructuredDocumentation","src":"3800:65:50","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":23904,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:50","nodeType":"VariableDeclaration","scope":23913,"src":"3934:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":23903,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":23906,"mutability":"mutable","name":"path","nameLocation":"4004:4:50","nodeType":"VariableDeclaration","scope":23913,"src":"3997:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":23905,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":23908,"mutability":"mutable","name":"depth","nameLocation":"4060:5:50","nodeType":"VariableDeclaration","scope":23913,"src":"4053:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":23907,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":23910,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:50","nodeType":"VariableDeclaration","scope":23913,"src":"4120:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23909,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23912,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:50","nodeType":"VariableDeclaration","scope":23913,"src":"4183:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23911,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:50","scope":27034,"visibility":"public"},{"id":23929,"nodeType":"StructDefinition","src":"4434:599:50","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":23914,"nodeType":"StructuredDocumentation","src":"4210:219:50","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":23916,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:50","nodeType":"VariableDeclaration","scope":23929,"src":"4515:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23915,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23918,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:50","nodeType":"VariableDeclaration","scope":23929,"src":"4586:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23917,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23920,"mutability":"mutable","name":"length","nameLocation":"4683:6:50","nodeType":"VariableDeclaration","scope":23929,"src":"4675:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23922,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:50","nodeType":"VariableDeclaration","scope":23929,"src":"4769:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23921,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23924,"mutability":"mutable","name":"modified","nameLocation":"4863:8:50","nodeType":"VariableDeclaration","scope":23929,"src":"4855:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23923,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23926,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:50","nodeType":"VariableDeclaration","scope":23929,"src":"4931:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23925,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23928,"mutability":"mutable","name":"created","nameLocation":"5019:7:50","nodeType":"VariableDeclaration","scope":23929,"src":"5011:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23927,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:50","scope":27034,"visibility":"public"},{"id":23939,"nodeType":"StructDefinition","src":"5087:277:50","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":23930,"nodeType":"StructuredDocumentation","src":"5039:43:50","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":23932,"mutability":"mutable","name":"addr","nameLocation":"5152:4:50","nodeType":"VariableDeclaration","scope":23939,"src":"5144:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23931,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23934,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:50","nodeType":"VariableDeclaration","scope":23939,"src":"5206:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23933,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23936,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:50","nodeType":"VariableDeclaration","scope":23939,"src":"5274:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23935,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23938,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:50","nodeType":"VariableDeclaration","scope":23939,"src":"5339:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:50","scope":27034,"visibility":"public"},{"id":23947,"nodeType":"StructDefinition","src":"5409:213:50","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":23940,"nodeType":"StructuredDocumentation","src":"5370:34:50","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":23942,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:50","nodeType":"VariableDeclaration","scope":23947,"src":"5474:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":23941,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:50","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":23944,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:50","nodeType":"VariableDeclaration","scope":23947,"src":"5551:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":23943,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":23946,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:50","nodeType":"VariableDeclaration","scope":23947,"src":"5603:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":23945,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:50","scope":27034,"visibility":"public"},{"id":23953,"nodeType":"StructDefinition","src":"5671:184:50","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":23948,"nodeType":"StructuredDocumentation","src":"5628:38:50","text":"Information on the chain and fork."},"members":[{"constant":false,"id":23950,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:50","nodeType":"VariableDeclaration","scope":23953,"src":"5764:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23949,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23952,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:50","nodeType":"VariableDeclaration","scope":23953,"src":"5833:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23951,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:50","scope":27034,"visibility":"public"},{"id":23985,"nodeType":"StructDefinition","src":"5916:1837:50","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":23954,"nodeType":"StructuredDocumentation","src":"5861:50:50","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":23957,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:50","nodeType":"VariableDeclaration","scope":23985,"src":"5998:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$23953_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":23956,"nodeType":"UserDefinedTypeName","pathNode":{"id":23955,"name":"ChainInfo","nameLocations":["5998:9:50"],"nodeType":"IdentifierPath","referencedDeclaration":23953,"src":"5998:9:50"},"referencedDeclaration":23953,"src":"5998:9:50","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$23953_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":23960,"mutability":"mutable","name":"kind","nameLocation":"6471:4:50","nodeType":"VariableDeclaration","scope":23985,"src":"6453:22:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$23854","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":23959,"nodeType":"UserDefinedTypeName","pathNode":{"id":23958,"name":"AccountAccessKind","nameLocations":["6453:17:50"],"nodeType":"IdentifierPath","referencedDeclaration":23854,"src":"6453:17:50"},"referencedDeclaration":23854,"src":"6453:17:50","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$23854","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":23962,"mutability":"mutable","name":"account","nameLocation":"6648:7:50","nodeType":"VariableDeclaration","scope":23985,"src":"6640:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23961,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23964,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:50","nodeType":"VariableDeclaration","scope":23985,"src":"6703:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23963,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23966,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:50","nodeType":"VariableDeclaration","scope":23985,"src":"6917:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23965,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23968,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:50","nodeType":"VariableDeclaration","scope":23985,"src":"7000:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23967,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23970,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:50","nodeType":"VariableDeclaration","scope":23985,"src":"7175:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23969,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23972,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:50","nodeType":"VariableDeclaration","scope":23985,"src":"7254:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":23971,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":23974,"mutability":"mutable","name":"value","nameLocation":"7344:5:50","nodeType":"VariableDeclaration","scope":23985,"src":"7336:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23973,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23976,"mutability":"mutable","name":"data","nameLocation":"7418:4:50","nodeType":"VariableDeclaration","scope":23985,"src":"7412:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":23975,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":23978,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:50","nodeType":"VariableDeclaration","scope":23985,"src":"7508:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23977,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23982,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:50","nodeType":"VariableDeclaration","scope":23985,"src":"7619:31:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$23999_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":23980,"nodeType":"UserDefinedTypeName","pathNode":{"id":23979,"name":"StorageAccess","nameLocations":["7619:13:50"],"nodeType":"IdentifierPath","referencedDeclaration":23999,"src":"7619:13:50"},"referencedDeclaration":23999,"src":"7619:13:50","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$23999_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":23981,"nodeType":"ArrayTypeName","src":"7619:15:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$23999_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":23984,"mutability":"mutable","name":"depth","nameLocation":"7741:5:50","nodeType":"VariableDeclaration","scope":23985,"src":"7734:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":23983,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:50","scope":27034,"visibility":"public"},{"id":23999,"nodeType":"StructDefinition","src":"7815:425:50","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":23986,"nodeType":"StructuredDocumentation","src":"7759:51:50","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":23988,"mutability":"mutable","name":"account","nameLocation":"7905:7:50","nodeType":"VariableDeclaration","scope":23999,"src":"7897:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23987,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23990,"mutability":"mutable","name":"slot","nameLocation":"7969:4:50","nodeType":"VariableDeclaration","scope":23999,"src":"7961:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":23992,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:50","nodeType":"VariableDeclaration","scope":23999,"src":"8021:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23991,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":23994,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:50","nodeType":"VariableDeclaration","scope":23999,"src":"8086:21:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":23996,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:50","nodeType":"VariableDeclaration","scope":23999,"src":"8155:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":23998,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:50","nodeType":"VariableDeclaration","scope":23999,"src":"8220:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23997,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:50","scope":27034,"visibility":"public"},{"id":24011,"nodeType":"StructDefinition","src":"8291:362:50","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":24000,"nodeType":"StructuredDocumentation","src":"8246:40:50","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":24002,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:50","nodeType":"VariableDeclaration","scope":24011,"src":"8350:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24001,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":24004,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:50","nodeType":"VariableDeclaration","scope":24011,"src":"8406:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24003,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":24006,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8498:13:50","nodeType":"VariableDeclaration","scope":24011,"src":"8491:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24005,"name":"uint64","nodeType":"ElementaryTypeName","src":"8491:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":24008,"mutability":"mutable","name":"gasRefunded","nameLocation":"8566:11:50","nodeType":"VariableDeclaration","scope":24011,"src":"8560:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":24007,"name":"int64","nodeType":"ElementaryTypeName","src":"8560:5:50","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":24010,"mutability":"mutable","name":"gasRemaining","nameLocation":"8634:12:50","nodeType":"VariableDeclaration","scope":24011,"src":"8627:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24009,"name":"uint64","nodeType":"ElementaryTypeName","src":"8627:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:50","scope":27034,"visibility":"public"},{"id":24019,"nodeType":"FunctionDefinition","src":"8840:80:50","nodes":[],"documentation":{"id":24012,"nodeType":"StructuredDocumentation","src":"8697:138:50","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8849:10:50","parameters":{"id":24015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24014,"mutability":"mutable","name":"name","nameLocation":"8876:4:50","nodeType":"VariableDeclaration","scope":24019,"src":"8860:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24013,"name":"string","nodeType":"ElementaryTypeName","src":"8860:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8859:22:50"},"returnParameters":{"id":24018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24017,"mutability":"mutable","name":"value","nameLocation":"8913:5:50","nodeType":"VariableDeclaration","scope":24019,"src":"8905:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24016,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8904:15:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24030,"nodeType":"FunctionDefinition","src":"9103:112:50","nodes":[],"documentation":{"id":24020,"nodeType":"StructuredDocumentation","src":"8926:172:50","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9112:10:50","parameters":{"id":24025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24022,"mutability":"mutable","name":"name","nameLocation":"9139:4:50","nodeType":"VariableDeclaration","scope":24030,"src":"9123:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24021,"name":"string","nodeType":"ElementaryTypeName","src":"9123:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24024,"mutability":"mutable","name":"delim","nameLocation":"9161:5:50","nodeType":"VariableDeclaration","scope":24030,"src":"9145:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24023,"name":"string","nodeType":"ElementaryTypeName","src":"9145:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9122:45:50"},"returnParameters":{"id":24029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24028,"mutability":"mutable","name":"value","nameLocation":"9208:5:50","nodeType":"VariableDeclaration","scope":24030,"src":"9191:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":24026,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":24027,"nodeType":"ArrayTypeName","src":"9191:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9190:24:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24038,"nodeType":"FunctionDefinition","src":"9361:74:50","nodes":[],"documentation":{"id":24031,"nodeType":"StructuredDocumentation","src":"9221:135:50","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9370:7:50","parameters":{"id":24034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24033,"mutability":"mutable","name":"name","nameLocation":"9394:4:50","nodeType":"VariableDeclaration","scope":24038,"src":"9378:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24032,"name":"string","nodeType":"ElementaryTypeName","src":"9378:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9377:22:50"},"returnParameters":{"id":24037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24036,"mutability":"mutable","name":"value","nameLocation":"9428:5:50","nodeType":"VariableDeclaration","scope":24038,"src":"9423:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24035,"name":"bool","nodeType":"ElementaryTypeName","src":"9423:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9422:12:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24049,"nodeType":"FunctionDefinition","src":"9615:106:50","nodes":[],"documentation":{"id":24039,"nodeType":"StructuredDocumentation","src":"9441:169:50","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9624:7:50","parameters":{"id":24044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24041,"mutability":"mutable","name":"name","nameLocation":"9648:4:50","nodeType":"VariableDeclaration","scope":24049,"src":"9632:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24040,"name":"string","nodeType":"ElementaryTypeName","src":"9632:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24043,"mutability":"mutable","name":"delim","nameLocation":"9670:5:50","nodeType":"VariableDeclaration","scope":24049,"src":"9654:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24042,"name":"string","nodeType":"ElementaryTypeName","src":"9654:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9631:45:50"},"returnParameters":{"id":24048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24047,"mutability":"mutable","name":"value","nameLocation":"9714:5:50","nodeType":"VariableDeclaration","scope":24049,"src":"9700:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":24045,"name":"bool","nodeType":"ElementaryTypeName","src":"9700:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":24046,"nodeType":"ArrayTypeName","src":"9700:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9699:21:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24057,"nodeType":"FunctionDefinition","src":"9870:80:50","nodes":[],"documentation":{"id":24050,"nodeType":"StructuredDocumentation","src":"9727:138:50","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9879:10:50","parameters":{"id":24053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24052,"mutability":"mutable","name":"name","nameLocation":"9906:4:50","nodeType":"VariableDeclaration","scope":24057,"src":"9890:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24051,"name":"string","nodeType":"ElementaryTypeName","src":"9890:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9889:22:50"},"returnParameters":{"id":24056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24055,"mutability":"mutable","name":"value","nameLocation":"9943:5:50","nodeType":"VariableDeclaration","scope":24057,"src":"9935:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9935:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9934:15:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24068,"nodeType":"FunctionDefinition","src":"10133:112:50","nodes":[],"documentation":{"id":24058,"nodeType":"StructuredDocumentation","src":"9956:172:50","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10142:10:50","parameters":{"id":24063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24060,"mutability":"mutable","name":"name","nameLocation":"10169:4:50","nodeType":"VariableDeclaration","scope":24068,"src":"10153:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24059,"name":"string","nodeType":"ElementaryTypeName","src":"10153:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24062,"mutability":"mutable","name":"delim","nameLocation":"10191:5:50","nodeType":"VariableDeclaration","scope":24068,"src":"10175:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24061,"name":"string","nodeType":"ElementaryTypeName","src":"10175:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10152:45:50"},"returnParameters":{"id":24067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24066,"mutability":"mutable","name":"value","nameLocation":"10238:5:50","nodeType":"VariableDeclaration","scope":24068,"src":"10221:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10221:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24065,"nodeType":"ArrayTypeName","src":"10221:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10220:24:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24076,"nodeType":"FunctionDefinition","src":"10392:83:50","nodes":[],"documentation":{"id":24069,"nodeType":"StructuredDocumentation","src":"10251:136:50","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10401:8:50","parameters":{"id":24072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24071,"mutability":"mutable","name":"name","nameLocation":"10426:4:50","nodeType":"VariableDeclaration","scope":24076,"src":"10410:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24070,"name":"string","nodeType":"ElementaryTypeName","src":"10410:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10409:22:50"},"returnParameters":{"id":24075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24074,"mutability":"mutable","name":"value","nameLocation":"10468:5:50","nodeType":"VariableDeclaration","scope":24076,"src":"10455:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24073,"name":"bytes","nodeType":"ElementaryTypeName","src":"10455:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10454:20:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24087,"nodeType":"FunctionDefinition","src":"10656:108:50","nodes":[],"documentation":{"id":24077,"nodeType":"StructuredDocumentation","src":"10481:170:50","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10665:8:50","parameters":{"id":24082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24079,"mutability":"mutable","name":"name","nameLocation":"10690:4:50","nodeType":"VariableDeclaration","scope":24087,"src":"10674:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24078,"name":"string","nodeType":"ElementaryTypeName","src":"10674:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24081,"mutability":"mutable","name":"delim","nameLocation":"10712:5:50","nodeType":"VariableDeclaration","scope":24087,"src":"10696:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24080,"name":"string","nodeType":"ElementaryTypeName","src":"10696:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10673:45:50"},"returnParameters":{"id":24086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24085,"mutability":"mutable","name":"value","nameLocation":"10757:5:50","nodeType":"VariableDeclaration","scope":24087,"src":"10742:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":24083,"name":"bytes","nodeType":"ElementaryTypeName","src":"10742:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":24084,"nodeType":"ArrayTypeName","src":"10742:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10741:22:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24095,"nodeType":"FunctionDefinition","src":"10866:77:50","nodes":[],"documentation":{"id":24088,"nodeType":"StructuredDocumentation","src":"10770:91:50","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10875:9:50","parameters":{"id":24091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24090,"mutability":"mutable","name":"name","nameLocation":"10901:4:50","nodeType":"VariableDeclaration","scope":24095,"src":"10885:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24089,"name":"string","nodeType":"ElementaryTypeName","src":"10885:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10884:22:50"},"returnParameters":{"id":24094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24093,"mutability":"mutable","name":"result","nameLocation":"10935:6:50","nodeType":"VariableDeclaration","scope":24095,"src":"10930:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24092,"name":"bool","nodeType":"ElementaryTypeName","src":"10930:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10929:13:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24103,"nodeType":"FunctionDefinition","src":"11091:75:50","nodes":[],"documentation":{"id":24096,"nodeType":"StructuredDocumentation","src":"10949:137:50","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11100:6:50","parameters":{"id":24099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24098,"mutability":"mutable","name":"name","nameLocation":"11123:4:50","nodeType":"VariableDeclaration","scope":24103,"src":"11107:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24097,"name":"string","nodeType":"ElementaryTypeName","src":"11107:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11106:22:50"},"returnParameters":{"id":24102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24101,"mutability":"mutable","name":"value","nameLocation":"11159:5:50","nodeType":"VariableDeclaration","scope":24103,"src":"11152:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":24100,"name":"int256","nodeType":"ElementaryTypeName","src":"11152:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11151:14:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24114,"nodeType":"FunctionDefinition","src":"11348:107:50","nodes":[],"documentation":{"id":24104,"nodeType":"StructuredDocumentation","src":"11172:171:50","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11357:6:50","parameters":{"id":24109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24106,"mutability":"mutable","name":"name","nameLocation":"11380:4:50","nodeType":"VariableDeclaration","scope":24114,"src":"11364:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24105,"name":"string","nodeType":"ElementaryTypeName","src":"11364:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24108,"mutability":"mutable","name":"delim","nameLocation":"11402:5:50","nodeType":"VariableDeclaration","scope":24114,"src":"11386:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24107,"name":"string","nodeType":"ElementaryTypeName","src":"11386:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11363:45:50"},"returnParameters":{"id":24113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24112,"mutability":"mutable","name":"value","nameLocation":"11448:5:50","nodeType":"VariableDeclaration","scope":24114,"src":"11432:21:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":24110,"name":"int256","nodeType":"ElementaryTypeName","src":"11432:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":24111,"nodeType":"ArrayTypeName","src":"11432:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11431:23:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24124,"nodeType":"FunctionDefinition","src":"11646:91:50","nodes":[],"documentation":{"id":24115,"nodeType":"StructuredDocumentation","src":"11461:180:50","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11655:5:50","parameters":{"id":24120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24117,"mutability":"mutable","name":"name","nameLocation":"11677:4:50","nodeType":"VariableDeclaration","scope":24124,"src":"11661:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24116,"name":"string","nodeType":"ElementaryTypeName","src":"11661:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24119,"mutability":"mutable","name":"defaultValue","nameLocation":"11688:12:50","nodeType":"VariableDeclaration","scope":24124,"src":"11683:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24118,"name":"bool","nodeType":"ElementaryTypeName","src":"11683:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11660:41:50"},"returnParameters":{"id":24123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24122,"mutability":"mutable","name":"value","nameLocation":"11730:5:50","nodeType":"VariableDeclaration","scope":24124,"src":"11725:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24121,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11724:12:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24134,"nodeType":"FunctionDefinition","src":"11931:97:50","nodes":[],"documentation":{"id":24125,"nodeType":"StructuredDocumentation","src":"11743:183:50","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11940:5:50","parameters":{"id":24130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24127,"mutability":"mutable","name":"name","nameLocation":"11962:4:50","nodeType":"VariableDeclaration","scope":24134,"src":"11946:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24126,"name":"string","nodeType":"ElementaryTypeName","src":"11946:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24129,"mutability":"mutable","name":"defaultValue","nameLocation":"11976:12:50","nodeType":"VariableDeclaration","scope":24134,"src":"11968:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24128,"name":"uint256","nodeType":"ElementaryTypeName","src":"11968:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11945:44:50"},"returnParameters":{"id":24133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24132,"mutability":"mutable","name":"value","nameLocation":"12021:5:50","nodeType":"VariableDeclaration","scope":24134,"src":"12013:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24131,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:15:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24148,"nodeType":"FunctionDefinition","src":"12256:164:50","nodes":[],"documentation":{"id":24135,"nodeType":"StructuredDocumentation","src":"12034:217:50","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12265:5:50","parameters":{"id":24143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24137,"mutability":"mutable","name":"name","nameLocation":"12287:4:50","nodeType":"VariableDeclaration","scope":24148,"src":"12271:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24136,"name":"string","nodeType":"ElementaryTypeName","src":"12271:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24139,"mutability":"mutable","name":"delim","nameLocation":"12309:5:50","nodeType":"VariableDeclaration","scope":24148,"src":"12293:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24138,"name":"string","nodeType":"ElementaryTypeName","src":"12293:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24142,"mutability":"mutable","name":"defaultValue","nameLocation":"12335:12:50","nodeType":"VariableDeclaration","scope":24148,"src":"12316:31:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":24140,"name":"address","nodeType":"ElementaryTypeName","src":"12316:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":24141,"nodeType":"ArrayTypeName","src":"12316:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12270:78:50"},"returnParameters":{"id":24147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24146,"mutability":"mutable","name":"value","nameLocation":"12413:5:50","nodeType":"VariableDeclaration","scope":24148,"src":"12396:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":24144,"name":"address","nodeType":"ElementaryTypeName","src":"12396:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":24145,"nodeType":"ArrayTypeName","src":"12396:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12395:24:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24162,"nodeType":"FunctionDefinition","src":"12648:164:50","nodes":[],"documentation":{"id":24149,"nodeType":"StructuredDocumentation","src":"12426:217:50","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12657:5:50","parameters":{"id":24157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24151,"mutability":"mutable","name":"name","nameLocation":"12679:4:50","nodeType":"VariableDeclaration","scope":24162,"src":"12663:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24150,"name":"string","nodeType":"ElementaryTypeName","src":"12663:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24153,"mutability":"mutable","name":"delim","nameLocation":"12701:5:50","nodeType":"VariableDeclaration","scope":24162,"src":"12685:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24152,"name":"string","nodeType":"ElementaryTypeName","src":"12685:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24156,"mutability":"mutable","name":"defaultValue","nameLocation":"12727:12:50","nodeType":"VariableDeclaration","scope":24162,"src":"12708:31:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12708:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24155,"nodeType":"ArrayTypeName","src":"12708:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12662:78:50"},"returnParameters":{"id":24161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24160,"mutability":"mutable","name":"value","nameLocation":"12805:5:50","nodeType":"VariableDeclaration","scope":24162,"src":"12788:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12788:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24159,"nodeType":"ArrayTypeName","src":"12788:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12787:24:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24176,"nodeType":"FunctionDefinition","src":"13039:162:50","nodes":[],"documentation":{"id":24163,"nodeType":"StructuredDocumentation","src":"12818:216:50","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13048:5:50","parameters":{"id":24171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24165,"mutability":"mutable","name":"name","nameLocation":"13070:4:50","nodeType":"VariableDeclaration","scope":24176,"src":"13054:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24164,"name":"string","nodeType":"ElementaryTypeName","src":"13054:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24167,"mutability":"mutable","name":"delim","nameLocation":"13092:5:50","nodeType":"VariableDeclaration","scope":24176,"src":"13076:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24166,"name":"string","nodeType":"ElementaryTypeName","src":"13076:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24170,"mutability":"mutable","name":"defaultValue","nameLocation":"13117:12:50","nodeType":"VariableDeclaration","scope":24176,"src":"13099:30:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24168,"name":"string","nodeType":"ElementaryTypeName","src":"13099:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24169,"nodeType":"ArrayTypeName","src":"13099:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13053:77:50"},"returnParameters":{"id":24175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24174,"mutability":"mutable","name":"value","nameLocation":"13194:5:50","nodeType":"VariableDeclaration","scope":24176,"src":"13178:21:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24172,"name":"string","nodeType":"ElementaryTypeName","src":"13178:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24173,"nodeType":"ArrayTypeName","src":"13178:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13177:23:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24190,"nodeType":"FunctionDefinition","src":"13427:160:50","nodes":[],"documentation":{"id":24177,"nodeType":"StructuredDocumentation","src":"13207:215:50","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13436:5:50","parameters":{"id":24185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24179,"mutability":"mutable","name":"name","nameLocation":"13458:4:50","nodeType":"VariableDeclaration","scope":24190,"src":"13442:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24178,"name":"string","nodeType":"ElementaryTypeName","src":"13442:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24181,"mutability":"mutable","name":"delim","nameLocation":"13480:5:50","nodeType":"VariableDeclaration","scope":24190,"src":"13464:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24180,"name":"string","nodeType":"ElementaryTypeName","src":"13464:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24184,"mutability":"mutable","name":"defaultValue","nameLocation":"13504:12:50","nodeType":"VariableDeclaration","scope":24190,"src":"13487:29:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":24182,"name":"bytes","nodeType":"ElementaryTypeName","src":"13487:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":24183,"nodeType":"ArrayTypeName","src":"13487:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13441:76:50"},"returnParameters":{"id":24189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24188,"mutability":"mutable","name":"value","nameLocation":"13580:5:50","nodeType":"VariableDeclaration","scope":24190,"src":"13565:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":24186,"name":"bytes","nodeType":"ElementaryTypeName","src":"13565:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":24187,"nodeType":"ArrayTypeName","src":"13565:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13564:22:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24200,"nodeType":"FunctionDefinition","src":"13780:95:50","nodes":[],"documentation":{"id":24191,"nodeType":"StructuredDocumentation","src":"13593:182:50","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13789:5:50","parameters":{"id":24196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24193,"mutability":"mutable","name":"name","nameLocation":"13811:4:50","nodeType":"VariableDeclaration","scope":24200,"src":"13795:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24192,"name":"string","nodeType":"ElementaryTypeName","src":"13795:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24195,"mutability":"mutable","name":"defaultValue","nameLocation":"13824:12:50","nodeType":"VariableDeclaration","scope":24200,"src":"13817:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":24194,"name":"int256","nodeType":"ElementaryTypeName","src":"13817:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13794:43:50"},"returnParameters":{"id":24199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24198,"mutability":"mutable","name":"value","nameLocation":"13868:5:50","nodeType":"VariableDeclaration","scope":24200,"src":"13861:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":24197,"name":"int256","nodeType":"ElementaryTypeName","src":"13861:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13860:14:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24210,"nodeType":"FunctionDefinition","src":"14069:97:50","nodes":[],"documentation":{"id":24201,"nodeType":"StructuredDocumentation","src":"13881:183:50","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14078:5:50","parameters":{"id":24206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24203,"mutability":"mutable","name":"name","nameLocation":"14100:4:50","nodeType":"VariableDeclaration","scope":24210,"src":"14084:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24202,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24205,"mutability":"mutable","name":"defaultValue","nameLocation":"14114:12:50","nodeType":"VariableDeclaration","scope":24210,"src":"14106:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24204,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14083:44:50"},"returnParameters":{"id":24209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24208,"mutability":"mutable","name":"value","nameLocation":"14159:5:50","nodeType":"VariableDeclaration","scope":24210,"src":"14151:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24207,"name":"address","nodeType":"ElementaryTypeName","src":"14151:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14150:15:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24220,"nodeType":"FunctionDefinition","src":"14360:97:50","nodes":[],"documentation":{"id":24211,"nodeType":"StructuredDocumentation","src":"14172:183:50","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14369:5:50","parameters":{"id":24216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24213,"mutability":"mutable","name":"name","nameLocation":"14391:4:50","nodeType":"VariableDeclaration","scope":24220,"src":"14375:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24212,"name":"string","nodeType":"ElementaryTypeName","src":"14375:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24215,"mutability":"mutable","name":"defaultValue","nameLocation":"14405:12:50","nodeType":"VariableDeclaration","scope":24220,"src":"14397:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14397:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14374:44:50"},"returnParameters":{"id":24219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24218,"mutability":"mutable","name":"value","nameLocation":"14450:5:50","nodeType":"VariableDeclaration","scope":24220,"src":"14442:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14442:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14441:15:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24230,"nodeType":"FunctionDefinition","src":"14650:111:50","nodes":[],"documentation":{"id":24221,"nodeType":"StructuredDocumentation","src":"14463:182:50","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14659:5:50","parameters":{"id":24226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24223,"mutability":"mutable","name":"name","nameLocation":"14681:4:50","nodeType":"VariableDeclaration","scope":24230,"src":"14665:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24222,"name":"string","nodeType":"ElementaryTypeName","src":"14665:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24225,"mutability":"mutable","name":"defaultValue","nameLocation":"14703:12:50","nodeType":"VariableDeclaration","scope":24230,"src":"14687:28:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24224,"name":"string","nodeType":"ElementaryTypeName","src":"14687:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14664:52:50"},"returnParameters":{"id":24229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24228,"mutability":"mutable","name":"value","nameLocation":"14754:5:50","nodeType":"VariableDeclaration","scope":24230,"src":"14740:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24227,"name":"string","nodeType":"ElementaryTypeName","src":"14740:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14739:21:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24240,"nodeType":"FunctionDefinition","src":"14953:109:50","nodes":[],"documentation":{"id":24231,"nodeType":"StructuredDocumentation","src":"14767:181:50","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14962:5:50","parameters":{"id":24236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24233,"mutability":"mutable","name":"name","nameLocation":"14984:4:50","nodeType":"VariableDeclaration","scope":24240,"src":"14968:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24232,"name":"string","nodeType":"ElementaryTypeName","src":"14968:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24235,"mutability":"mutable","name":"defaultValue","nameLocation":"15005:12:50","nodeType":"VariableDeclaration","scope":24240,"src":"14990:27:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":24234,"name":"bytes","nodeType":"ElementaryTypeName","src":"14990:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:51:50"},"returnParameters":{"id":24239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24238,"mutability":"mutable","name":"value","nameLocation":"15055:5:50","nodeType":"VariableDeclaration","scope":24240,"src":"15042:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24237,"name":"bytes","nodeType":"ElementaryTypeName","src":"15042:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15041:20:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24254,"nodeType":"FunctionDefinition","src":"15287:158:50","nodes":[],"documentation":{"id":24241,"nodeType":"StructuredDocumentation","src":"15068:214:50","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15296:5:50","parameters":{"id":24249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24243,"mutability":"mutable","name":"name","nameLocation":"15318:4:50","nodeType":"VariableDeclaration","scope":24254,"src":"15302:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24242,"name":"string","nodeType":"ElementaryTypeName","src":"15302:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24245,"mutability":"mutable","name":"delim","nameLocation":"15340:5:50","nodeType":"VariableDeclaration","scope":24254,"src":"15324:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24244,"name":"string","nodeType":"ElementaryTypeName","src":"15324:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24248,"mutability":"mutable","name":"defaultValue","nameLocation":"15363:12:50","nodeType":"VariableDeclaration","scope":24254,"src":"15347:28:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":24246,"name":"bool","nodeType":"ElementaryTypeName","src":"15347:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":24247,"nodeType":"ArrayTypeName","src":"15347:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15301:75:50"},"returnParameters":{"id":24253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24252,"mutability":"mutable","name":"value","nameLocation":"15438:5:50","nodeType":"VariableDeclaration","scope":24254,"src":"15424:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":24250,"name":"bool","nodeType":"ElementaryTypeName","src":"15424:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":24251,"nodeType":"ArrayTypeName","src":"15424:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15423:21:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24268,"nodeType":"FunctionDefinition","src":"15673:164:50","nodes":[],"documentation":{"id":24255,"nodeType":"StructuredDocumentation","src":"15451:217:50","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15682:5:50","parameters":{"id":24263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24257,"mutability":"mutable","name":"name","nameLocation":"15704:4:50","nodeType":"VariableDeclaration","scope":24268,"src":"15688:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24256,"name":"string","nodeType":"ElementaryTypeName","src":"15688:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24259,"mutability":"mutable","name":"delim","nameLocation":"15726:5:50","nodeType":"VariableDeclaration","scope":24268,"src":"15710:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24258,"name":"string","nodeType":"ElementaryTypeName","src":"15710:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24262,"mutability":"mutable","name":"defaultValue","nameLocation":"15752:12:50","nodeType":"VariableDeclaration","scope":24268,"src":"15733:31:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":24260,"name":"uint256","nodeType":"ElementaryTypeName","src":"15733:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":24261,"nodeType":"ArrayTypeName","src":"15733:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15687:78:50"},"returnParameters":{"id":24267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24266,"mutability":"mutable","name":"value","nameLocation":"15830:5:50","nodeType":"VariableDeclaration","scope":24268,"src":"15813:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":24264,"name":"uint256","nodeType":"ElementaryTypeName","src":"15813:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":24265,"nodeType":"ArrayTypeName","src":"15813:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15812:24:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24282,"nodeType":"FunctionDefinition","src":"16064:162:50","nodes":[],"documentation":{"id":24269,"nodeType":"StructuredDocumentation","src":"15843:216:50","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16073:5:50","parameters":{"id":24277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24271,"mutability":"mutable","name":"name","nameLocation":"16095:4:50","nodeType":"VariableDeclaration","scope":24282,"src":"16079:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24270,"name":"string","nodeType":"ElementaryTypeName","src":"16079:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24273,"mutability":"mutable","name":"delim","nameLocation":"16117:5:50","nodeType":"VariableDeclaration","scope":24282,"src":"16101:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24272,"name":"string","nodeType":"ElementaryTypeName","src":"16101:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24276,"mutability":"mutable","name":"defaultValue","nameLocation":"16142:12:50","nodeType":"VariableDeclaration","scope":24282,"src":"16124:30:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":24274,"name":"int256","nodeType":"ElementaryTypeName","src":"16124:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":24275,"nodeType":"ArrayTypeName","src":"16124:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16078:77:50"},"returnParameters":{"id":24281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24280,"mutability":"mutable","name":"value","nameLocation":"16219:5:50","nodeType":"VariableDeclaration","scope":24282,"src":"16203:21:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":24278,"name":"int256","nodeType":"ElementaryTypeName","src":"16203:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":24279,"nodeType":"ArrayTypeName","src":"16203:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16202:23:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24290,"nodeType":"FunctionDefinition","src":"16374:85:50","nodes":[],"documentation":{"id":24283,"nodeType":"StructuredDocumentation","src":"16232:137:50","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16383:9:50","parameters":{"id":24286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24285,"mutability":"mutable","name":"name","nameLocation":"16409:4:50","nodeType":"VariableDeclaration","scope":24290,"src":"16393:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24284,"name":"string","nodeType":"ElementaryTypeName","src":"16393:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16392:22:50"},"returnParameters":{"id":24289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24288,"mutability":"mutable","name":"value","nameLocation":"16452:5:50","nodeType":"VariableDeclaration","scope":24290,"src":"16438:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24287,"name":"string","nodeType":"ElementaryTypeName","src":"16438:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16437:21:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24301,"nodeType":"FunctionDefinition","src":"16641:110:50","nodes":[],"documentation":{"id":24291,"nodeType":"StructuredDocumentation","src":"16465:171:50","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16650:9:50","parameters":{"id":24296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24293,"mutability":"mutable","name":"name","nameLocation":"16676:4:50","nodeType":"VariableDeclaration","scope":24301,"src":"16660:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24292,"name":"string","nodeType":"ElementaryTypeName","src":"16660:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24295,"mutability":"mutable","name":"delim","nameLocation":"16698:5:50","nodeType":"VariableDeclaration","scope":24301,"src":"16682:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24294,"name":"string","nodeType":"ElementaryTypeName","src":"16682:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16659:45:50"},"returnParameters":{"id":24300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24299,"mutability":"mutable","name":"value","nameLocation":"16744:5:50","nodeType":"VariableDeclaration","scope":24301,"src":"16728:21:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24297,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24298,"nodeType":"ArrayTypeName","src":"16728:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16727:23:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24309,"nodeType":"FunctionDefinition","src":"16900:77:50","nodes":[],"documentation":{"id":24302,"nodeType":"StructuredDocumentation","src":"16757:138:50","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"16909:7:50","parameters":{"id":24305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24304,"mutability":"mutable","name":"name","nameLocation":"16933:4:50","nodeType":"VariableDeclaration","scope":24309,"src":"16917:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24303,"name":"string","nodeType":"ElementaryTypeName","src":"16917:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16916:22:50"},"returnParameters":{"id":24308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24307,"mutability":"mutable","name":"value","nameLocation":"16970:5:50","nodeType":"VariableDeclaration","scope":24309,"src":"16962:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24306,"name":"uint256","nodeType":"ElementaryTypeName","src":"16962:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16961:15:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24320,"nodeType":"FunctionDefinition","src":"17160:109:50","nodes":[],"documentation":{"id":24310,"nodeType":"StructuredDocumentation","src":"16983:172:50","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17169:7:50","parameters":{"id":24315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24312,"mutability":"mutable","name":"name","nameLocation":"17193:4:50","nodeType":"VariableDeclaration","scope":24320,"src":"17177:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24311,"name":"string","nodeType":"ElementaryTypeName","src":"17177:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24314,"mutability":"mutable","name":"delim","nameLocation":"17215:5:50","nodeType":"VariableDeclaration","scope":24320,"src":"17199:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24313,"name":"string","nodeType":"ElementaryTypeName","src":"17199:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17176:45:50"},"returnParameters":{"id":24319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24318,"mutability":"mutable","name":"value","nameLocation":"17262:5:50","nodeType":"VariableDeclaration","scope":24320,"src":"17245:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":24316,"name":"uint256","nodeType":"ElementaryTypeName","src":"17245:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":24317,"nodeType":"ArrayTypeName","src":"17245:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17244:24:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24329,"nodeType":"FunctionDefinition","src":"17346:77:50","nodes":[],"documentation":{"id":24321,"nodeType":"StructuredDocumentation","src":"17275:66:50","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17355:9:50","parameters":{"id":24325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24324,"mutability":"mutable","name":"context","nameLocation":"17378:7:50","nodeType":"VariableDeclaration","scope":24329,"src":"17365:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$23865","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":24323,"nodeType":"UserDefinedTypeName","pathNode":{"id":24322,"name":"ForgeContext","nameLocations":["17365:12:50"],"nodeType":"IdentifierPath","referencedDeclaration":23865,"src":"17365:12:50"},"referencedDeclaration":23865,"src":"17365:12:50","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$23865","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17364:22:50"},"returnParameters":{"id":24328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24327,"mutability":"mutable","name":"result","nameLocation":"17415:6:50","nodeType":"VariableDeclaration","scope":24329,"src":"17410:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24326,"name":"bool","nodeType":"ElementaryTypeName","src":"17410:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17409:13:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24337,"nodeType":"FunctionDefinition","src":"17465:70:50","nodes":[],"documentation":{"id":24330,"nodeType":"StructuredDocumentation","src":"17429:31:50","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17474:6:50","parameters":{"id":24335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24332,"mutability":"mutable","name":"name","nameLocation":"17497:4:50","nodeType":"VariableDeclaration","scope":24337,"src":"17481:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24331,"name":"string","nodeType":"ElementaryTypeName","src":"17481:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24334,"mutability":"mutable","name":"value","nameLocation":"17519:5:50","nodeType":"VariableDeclaration","scope":24337,"src":"17503:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24333,"name":"string","nodeType":"ElementaryTypeName","src":"17503:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17480:45:50"},"returnParameters":{"id":24336,"nodeType":"ParameterList","parameters":[],"src":"17534:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24349,"nodeType":"FunctionDefinition","src":"17667:109:50","nodes":[],"documentation":{"id":24338,"nodeType":"StructuredDocumentation","src":"17571:91:50","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17676:8:50","parameters":{"id":24341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24340,"mutability":"mutable","name":"target","nameLocation":"17693:6:50","nodeType":"VariableDeclaration","scope":24349,"src":"17685:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24339,"name":"address","nodeType":"ElementaryTypeName","src":"17685:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17684:16:50"},"returnParameters":{"id":24348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24344,"mutability":"mutable","name":"readSlots","nameLocation":"17736:9:50","nodeType":"VariableDeclaration","scope":24349,"src":"17719:26:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17719:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24343,"nodeType":"ArrayTypeName","src":"17719:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":24347,"mutability":"mutable","name":"writeSlots","nameLocation":"17764:10:50","nodeType":"VariableDeclaration","scope":24349,"src":"17747:27:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24346,"nodeType":"ArrayTypeName","src":"17747:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17718:57:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24357,"nodeType":"FunctionDefinition","src":"17832:74:50","nodes":[],"documentation":{"id":24350,"nodeType":"StructuredDocumentation","src":"17782:45:50","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17841:4:50","parameters":{"id":24353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24352,"mutability":"mutable","name":"privateKey","nameLocation":"17854:10:50","nodeType":"VariableDeclaration","scope":24357,"src":"17846:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24351,"name":"uint256","nodeType":"ElementaryTypeName","src":"17846:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17845:20:50"},"returnParameters":{"id":24356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24355,"mutability":"mutable","name":"keyAddr","nameLocation":"17897:7:50","nodeType":"VariableDeclaration","scope":24357,"src":"17889:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24354,"name":"address","nodeType":"ElementaryTypeName","src":"17889:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17888:17:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24374,"nodeType":"FunctionDefinition","src":"17969:160:50","nodes":[],"documentation":{"id":24358,"nodeType":"StructuredDocumentation","src":"17912:52:50","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"17978:11:50","parameters":{"id":24368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24360,"mutability":"mutable","name":"fromBlock","nameLocation":"17998:9:50","nodeType":"VariableDeclaration","scope":24374,"src":"17990:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24359,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24362,"mutability":"mutable","name":"toBlock","nameLocation":"18017:7:50","nodeType":"VariableDeclaration","scope":24374,"src":"18009:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24361,"name":"uint256","nodeType":"ElementaryTypeName","src":"18009:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24364,"mutability":"mutable","name":"target","nameLocation":"18034:6:50","nodeType":"VariableDeclaration","scope":24374,"src":"18026:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24363,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24367,"mutability":"mutable","name":"topics","nameLocation":"18061:6:50","nodeType":"VariableDeclaration","scope":24374,"src":"18042:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18042:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24366,"nodeType":"ArrayTypeName","src":"18042:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17989:79:50"},"returnParameters":{"id":24373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24372,"mutability":"mutable","name":"logs","nameLocation":"18123:4:50","nodeType":"VariableDeclaration","scope":24374,"src":"18103:24:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$23901_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":24370,"nodeType":"UserDefinedTypeName","pathNode":{"id":24369,"name":"EthGetLogs","nameLocations":["18103:10:50"],"nodeType":"IdentifierPath","referencedDeclaration":23901,"src":"18103:10:50"},"referencedDeclaration":23901,"src":"18103:10:50","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$23901_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":24371,"nodeType":"ArrayTypeName","src":"18103:12:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$23901_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18102:26:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24380,"nodeType":"FunctionDefinition","src":"18466:70:50","nodes":[],"documentation":{"id":24375,"nodeType":"StructuredDocumentation","src":"18135:326:50","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18475:14:50","parameters":{"id":24376,"nodeType":"ParameterList","parameters":[],"src":"18489:2:50"},"returnParameters":{"id":24379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24378,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18523:11:50","nodeType":"VariableDeclaration","scope":24380,"src":"18515:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24377,"name":"uint256","nodeType":"ElementaryTypeName","src":"18515:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18514:21:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24386,"nodeType":"FunctionDefinition","src":"18851:65:50","nodes":[],"documentation":{"id":24381,"nodeType":"StructuredDocumentation","src":"18542:304:50","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18860:14:50","parameters":{"id":24382,"nodeType":"ParameterList","parameters":[],"src":"18874:2:50"},"returnParameters":{"id":24385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24384,"mutability":"mutable","name":"height","nameLocation":"18908:6:50","nodeType":"VariableDeclaration","scope":24386,"src":"18900:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24383,"name":"uint256","nodeType":"ElementaryTypeName","src":"18900:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18899:16:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24392,"nodeType":"FunctionDefinition","src":"19240:71:50","nodes":[],"documentation":{"id":24387,"nodeType":"StructuredDocumentation","src":"18922:313:50","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19249:17:50","parameters":{"id":24388,"nodeType":"ParameterList","parameters":[],"src":"19266:2:50"},"returnParameters":{"id":24391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24390,"mutability":"mutable","name":"timestamp","nameLocation":"19300:9:50","nodeType":"VariableDeclaration","scope":24392,"src":"19292:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24389,"name":"uint256","nodeType":"ElementaryTypeName","src":"19292:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19291:19:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24406,"nodeType":"FunctionDefinition","src":"19404:146:50","nodes":[],"documentation":{"id":24393,"nodeType":"StructuredDocumentation","src":"19317:82:50","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19413:24:50","parameters":{"id":24398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24395,"mutability":"mutable","name":"target","nameLocation":"19446:6:50","nodeType":"VariableDeclaration","scope":24406,"src":"19438:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24394,"name":"address","nodeType":"ElementaryTypeName","src":"19438:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24397,"mutability":"mutable","name":"elementSlot","nameLocation":"19462:11:50","nodeType":"VariableDeclaration","scope":24406,"src":"19454:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19454:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19437:37:50"},"returnParameters":{"id":24405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24400,"mutability":"mutable","name":"found","nameLocation":"19514:5:50","nodeType":"VariableDeclaration","scope":24406,"src":"19509:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24399,"name":"bool","nodeType":"ElementaryTypeName","src":"19509:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":24402,"mutability":"mutable","name":"key","nameLocation":"19529:3:50","nodeType":"VariableDeclaration","scope":24406,"src":"19521:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19521:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24404,"mutability":"mutable","name":"parent","nameLocation":"19542:6:50","nodeType":"VariableDeclaration","scope":24406,"src":"19534:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19534:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19508:41:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24416,"nodeType":"FunctionDefinition","src":"19647:97:50","nodes":[],"documentation":{"id":24407,"nodeType":"StructuredDocumentation","src":"19556:86:50","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19656:16:50","parameters":{"id":24412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24409,"mutability":"mutable","name":"target","nameLocation":"19681:6:50","nodeType":"VariableDeclaration","scope":24416,"src":"19673:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24408,"name":"address","nodeType":"ElementaryTypeName","src":"19673:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24411,"mutability":"mutable","name":"mappingSlot","nameLocation":"19697:11:50","nodeType":"VariableDeclaration","scope":24416,"src":"19689:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19689:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19672:37:50"},"returnParameters":{"id":24415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24414,"mutability":"mutable","name":"length","nameLocation":"19736:6:50","nodeType":"VariableDeclaration","scope":24416,"src":"19728:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24413,"name":"uint256","nodeType":"ElementaryTypeName","src":"19728:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19727:16:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24428,"nodeType":"FunctionDefinition","src":"19948:109:50","nodes":[],"documentation":{"id":24417,"nodeType":"StructuredDocumentation","src":"19750:193:50","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"19957:16:50","parameters":{"id":24424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24419,"mutability":"mutable","name":"target","nameLocation":"19982:6:50","nodeType":"VariableDeclaration","scope":24428,"src":"19974:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24418,"name":"address","nodeType":"ElementaryTypeName","src":"19974:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24421,"mutability":"mutable","name":"mappingSlot","nameLocation":"19998:11:50","nodeType":"VariableDeclaration","scope":24428,"src":"19990:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19990:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24423,"mutability":"mutable","name":"idx","nameLocation":"20019:3:50","nodeType":"VariableDeclaration","scope":24428,"src":"20011:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24422,"name":"uint256","nodeType":"ElementaryTypeName","src":"20011:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19973:50:50"},"returnParameters":{"id":24427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24426,"mutability":"mutable","name":"value","nameLocation":"20050:5:50","nodeType":"VariableDeclaration","scope":24428,"src":"20042:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20042:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20041:15:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24436,"nodeType":"FunctionDefinition","src":"20101:72:50","nodes":[],"documentation":{"id":24429,"nodeType":"StructuredDocumentation","src":"20063:33:50","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20110:8:50","parameters":{"id":24432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24431,"mutability":"mutable","name":"account","nameLocation":"20127:7:50","nodeType":"VariableDeclaration","scope":24436,"src":"20119:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24430,"name":"address","nodeType":"ElementaryTypeName","src":"20119:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20118:17:50"},"returnParameters":{"id":24435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24434,"mutability":"mutable","name":"nonce","nameLocation":"20166:5:50","nodeType":"VariableDeclaration","scope":24436,"src":"20159:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24433,"name":"uint64","nodeType":"ElementaryTypeName","src":"20159:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20158:14:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24444,"nodeType":"FunctionDefinition","src":"20215:64:50","nodes":[],"documentation":{"id":24437,"nodeType":"StructuredDocumentation","src":"20179:31:50","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20224:15:50","parameters":{"id":24438,"nodeType":"ParameterList","parameters":[],"src":"20239:2:50"},"returnParameters":{"id":24443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24442,"mutability":"mutable","name":"logs","nameLocation":"20273:4:50","nodeType":"VariableDeclaration","scope":24444,"src":"20260:17:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$23874_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":24440,"nodeType":"UserDefinedTypeName","pathNode":{"id":24439,"name":"Log","nameLocations":["20260:3:50"],"nodeType":"IdentifierPath","referencedDeclaration":23874,"src":"20260:3:50"},"referencedDeclaration":23874,"src":"20260:3:50","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$23874_storage_ptr","typeString":"struct VmSafe.Log"}},"id":24441,"nodeType":"ArrayTypeName","src":"20260:5:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$23874_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20259:19:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24451,"nodeType":"FunctionDefinition","src":"20329:62:50","nodes":[],"documentation":{"id":24445,"nodeType":"StructuredDocumentation","src":"20285:39:50","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20338:11:50","parameters":{"id":24446,"nodeType":"ParameterList","parameters":[],"src":"20349:2:50"},"returnParameters":{"id":24450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24449,"mutability":"mutable","name":"gas","nameLocation":"20386:3:50","nodeType":"VariableDeclaration","scope":24451,"src":"20375:14:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$24011_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":24448,"nodeType":"UserDefinedTypeName","pathNode":{"id":24447,"name":"Gas","nameLocations":["20375:3:50"],"nodeType":"IdentifierPath","referencedDeclaration":24011,"src":"20375:3:50"},"referencedDeclaration":24011,"src":"20375:3:50","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$24011_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20374:16:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24461,"nodeType":"FunctionDefinition","src":"20443:81:50","nodes":[],"documentation":{"id":24452,"nodeType":"StructuredDocumentation","src":"20397:41:50","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20452:4:50","parameters":{"id":24457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24454,"mutability":"mutable","name":"target","nameLocation":"20465:6:50","nodeType":"VariableDeclaration","scope":24461,"src":"20457:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24453,"name":"address","nodeType":"ElementaryTypeName","src":"20457:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24456,"mutability":"mutable","name":"slot","nameLocation":"20481:4:50","nodeType":"VariableDeclaration","scope":24461,"src":"20473:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20473:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20456:30:50"},"returnParameters":{"id":24460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24459,"mutability":"mutable","name":"data","nameLocation":"20518:4:50","nodeType":"VariableDeclaration","scope":24461,"src":"20510:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20510:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20509:14:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24465,"nodeType":"FunctionDefinition","src":"20615:37:50","nodes":[],"documentation":{"id":24462,"nodeType":"StructuredDocumentation","src":"20530:80:50","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20624:16:50","parameters":{"id":24463,"nodeType":"ParameterList","parameters":[],"src":"20640:2:50"},"returnParameters":{"id":24464,"nodeType":"ParameterList","parameters":[],"src":"20651:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24469,"nodeType":"FunctionDefinition","src":"20704:27:50","nodes":[],"documentation":{"id":24466,"nodeType":"StructuredDocumentation","src":"20658:41:50","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20713:6:50","parameters":{"id":24467,"nodeType":"ParameterList","parameters":[],"src":"20719:2:50"},"returnParameters":{"id":24468,"nodeType":"ParameterList","parameters":[],"src":"20730:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24473,"nodeType":"FunctionDefinition","src":"20778:31:50","nodes":[],"documentation":{"id":24470,"nodeType":"StructuredDocumentation","src":"20737:36:50","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20787:10:50","parameters":{"id":24471,"nodeType":"ParameterList","parameters":[],"src":"20797:2:50"},"returnParameters":{"id":24472,"nodeType":"ParameterList","parameters":[],"src":"20808:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24477,"nodeType":"FunctionDefinition","src":"20899:38:50","nodes":[],"documentation":{"id":24474,"nodeType":"StructuredDocumentation","src":"20815:79:50","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"20908:17:50","parameters":{"id":24475,"nodeType":"ParameterList","parameters":[],"src":"20925:2:50"},"returnParameters":{"id":24476,"nodeType":"ParameterList","parameters":[],"src":"20936:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24487,"nodeType":"FunctionDefinition","src":"21014:98:50","nodes":[],"documentation":{"id":24478,"nodeType":"StructuredDocumentation","src":"20943:66:50","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21023:3:50","parameters":{"id":24483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24480,"mutability":"mutable","name":"method","nameLocation":"21043:6:50","nodeType":"VariableDeclaration","scope":24487,"src":"21027:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24479,"name":"string","nodeType":"ElementaryTypeName","src":"21027:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24482,"mutability":"mutable","name":"params","nameLocation":"21067:6:50","nodeType":"VariableDeclaration","scope":24487,"src":"21051:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24481,"name":"string","nodeType":"ElementaryTypeName","src":"21051:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21026:48:50"},"returnParameters":{"id":24486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24485,"mutability":"mutable","name":"data","nameLocation":"21106:4:50","nodeType":"VariableDeclaration","scope":24487,"src":"21093:17:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24484,"name":"bytes","nodeType":"ElementaryTypeName","src":"21093:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21092:19:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24499,"nodeType":"FunctionDefinition","src":"21186:99:50","nodes":[],"documentation":{"id":24488,"nodeType":"StructuredDocumentation","src":"21118:63:50","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21195:8:50","parameters":{"id":24493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24490,"mutability":"mutable","name":"privateKey","nameLocation":"21212:10:50","nodeType":"VariableDeclaration","scope":24499,"src":"21204:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24489,"name":"uint256","nodeType":"ElementaryTypeName","src":"21204:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24492,"mutability":"mutable","name":"digest","nameLocation":"21232:6:50","nodeType":"VariableDeclaration","scope":24499,"src":"21224:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21224:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21203:36:50"},"returnParameters":{"id":24498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24495,"mutability":"mutable","name":"r","nameLocation":"21271:1:50","nodeType":"VariableDeclaration","scope":24499,"src":"21263:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21263:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24497,"mutability":"mutable","name":"s","nameLocation":"21282:1:50","nodeType":"VariableDeclaration","scope":24499,"src":"21274:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21274:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21262:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24513,"nodeType":"FunctionDefinition","src":"21359:104:50","nodes":[],"documentation":{"id":24500,"nodeType":"StructuredDocumentation","src":"21291:63:50","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21368:4:50","parameters":{"id":24505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24502,"mutability":"mutable","name":"privateKey","nameLocation":"21381:10:50","nodeType":"VariableDeclaration","scope":24513,"src":"21373:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24501,"name":"uint256","nodeType":"ElementaryTypeName","src":"21373:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24504,"mutability":"mutable","name":"digest","nameLocation":"21401:6:50","nodeType":"VariableDeclaration","scope":24513,"src":"21393:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21393:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21372:36:50"},"returnParameters":{"id":24512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24507,"mutability":"mutable","name":"v","nameLocation":"21438:1:50","nodeType":"VariableDeclaration","scope":24513,"src":"21432:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":24506,"name":"uint8","nodeType":"ElementaryTypeName","src":"21432:5:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":24509,"mutability":"mutable","name":"r","nameLocation":"21449:1:50","nodeType":"VariableDeclaration","scope":24513,"src":"21441:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21441:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24511,"mutability":"mutable","name":"s","nameLocation":"21460:1:50","nodeType":"VariableDeclaration","scope":24513,"src":"21452:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21452:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21431:31:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24525,"nodeType":"FunctionDefinition","src":"21902:84:50","nodes":[],"documentation":{"id":24514,"nodeType":"StructuredDocumentation","src":"21469:428:50","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21911:4:50","parameters":{"id":24517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24516,"mutability":"mutable","name":"digest","nameLocation":"21924:6:50","nodeType":"VariableDeclaration","scope":24525,"src":"21916:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21916:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21915:16:50"},"returnParameters":{"id":24524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24519,"mutability":"mutable","name":"v","nameLocation":"21961:1:50","nodeType":"VariableDeclaration","scope":24525,"src":"21955:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":24518,"name":"uint8","nodeType":"ElementaryTypeName","src":"21955:5:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":24521,"mutability":"mutable","name":"r","nameLocation":"21972:1:50","nodeType":"VariableDeclaration","scope":24525,"src":"21964:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21964:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24523,"mutability":"mutable","name":"s","nameLocation":"21983:1:50","nodeType":"VariableDeclaration","scope":24525,"src":"21975:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21975:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21954:31:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24539,"nodeType":"FunctionDefinition","src":"22163:100:50","nodes":[],"documentation":{"id":24526,"nodeType":"StructuredDocumentation","src":"21992:166:50","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22172:4:50","parameters":{"id":24531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24528,"mutability":"mutable","name":"signer","nameLocation":"22185:6:50","nodeType":"VariableDeclaration","scope":24539,"src":"22177:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24527,"name":"address","nodeType":"ElementaryTypeName","src":"22177:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24530,"mutability":"mutable","name":"digest","nameLocation":"22201:6:50","nodeType":"VariableDeclaration","scope":24539,"src":"22193:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22193:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22176:32:50"},"returnParameters":{"id":24538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24533,"mutability":"mutable","name":"v","nameLocation":"22238:1:50","nodeType":"VariableDeclaration","scope":24539,"src":"22232:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":24532,"name":"uint8","nodeType":"ElementaryTypeName","src":"22232:5:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":24535,"mutability":"mutable","name":"r","nameLocation":"22249:1:50","nodeType":"VariableDeclaration","scope":24539,"src":"22241:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22241:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24537,"mutability":"mutable","name":"s","nameLocation":"22260:1:50","nodeType":"VariableDeclaration","scope":24539,"src":"22252:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22252:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22231:31:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24543,"nodeType":"FunctionDefinition","src":"22331:42:50","nodes":[],"documentation":{"id":24540,"nodeType":"StructuredDocumentation","src":"22269:57:50","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22340:21:50","parameters":{"id":24541,"nodeType":"ParameterList","parameters":[],"src":"22361:2:50"},"returnParameters":{"id":24542,"nodeType":"ParameterList","parameters":[],"src":"22372:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24547,"nodeType":"FunctionDefinition","src":"22517:44:50","nodes":[],"documentation":{"id":24544,"nodeType":"StructuredDocumentation","src":"22379:133:50","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22526:23:50","parameters":{"id":24545,"nodeType":"ParameterList","parameters":[],"src":"22549:2:50"},"returnParameters":{"id":24546,"nodeType":"ParameterList","parameters":[],"src":"22560:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24555,"nodeType":"FunctionDefinition","src":"22669:92:50","nodes":[],"documentation":{"id":24548,"nodeType":"StructuredDocumentation","src":"22567:97:50","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22678:22:50","parameters":{"id":24549,"nodeType":"ParameterList","parameters":[],"src":"22700:2:50"},"returnParameters":{"id":24554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24553,"mutability":"mutable","name":"accountAccesses","nameLocation":"22744:15:50","nodeType":"VariableDeclaration","scope":24555,"src":"22721:38:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$23985_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":24551,"nodeType":"UserDefinedTypeName","pathNode":{"id":24550,"name":"AccountAccess","nameLocations":["22721:13:50"],"nodeType":"IdentifierPath","referencedDeclaration":23985,"src":"22721:13:50"},"referencedDeclaration":23985,"src":"22721:13:50","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$23985_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":24552,"nodeType":"ArrayTypeName","src":"22721:15:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$23985_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"22720:40:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24559,"nodeType":"FunctionDefinition","src":"22857:41:50","nodes":[],"documentation":{"id":24556,"nodeType":"StructuredDocumentation","src":"22767:85:50","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"22866:20:50","parameters":{"id":24557,"nodeType":"ParameterList","parameters":[],"src":"22886:2:50"},"returnParameters":{"id":24558,"nodeType":"ParameterList","parameters":[],"src":"22897:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24565,"nodeType":"FunctionDefinition","src":"23097:50:50","nodes":[],"documentation":{"id":24560,"nodeType":"StructuredDocumentation","src":"22941:151:50","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23106:9:50","parameters":{"id":24563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24562,"mutability":"mutable","name":"path","nameLocation":"23132:4:50","nodeType":"VariableDeclaration","scope":24565,"src":"23116:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24561,"name":"string","nodeType":"ElementaryTypeName","src":"23116:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23115:22:50"},"returnParameters":{"id":24564,"nodeType":"ParameterList","parameters":[],"src":"23146:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24575,"nodeType":"FunctionDefinition","src":"23462:93:50","nodes":[],"documentation":{"id":24566,"nodeType":"StructuredDocumentation","src":"23153:304:50","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23471:8:50","parameters":{"id":24571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24568,"mutability":"mutable","name":"from","nameLocation":"23496:4:50","nodeType":"VariableDeclaration","scope":24575,"src":"23480:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24567,"name":"string","nodeType":"ElementaryTypeName","src":"23480:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24570,"mutability":"mutable","name":"to","nameLocation":"23518:2:50","nodeType":"VariableDeclaration","scope":24575,"src":"23502:18:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24569,"name":"string","nodeType":"ElementaryTypeName","src":"23502:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23479:42:50"},"returnParameters":{"id":24574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24573,"mutability":"mutable","name":"copied","nameLocation":"23547:6:50","nodeType":"VariableDeclaration","scope":24575,"src":"23540:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24572,"name":"uint64","nodeType":"ElementaryTypeName","src":"23540:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23539:15:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24583,"nodeType":"FunctionDefinition","src":"23960:66:50","nodes":[],"documentation":{"id":24576,"nodeType":"StructuredDocumentation","src":"23561:394:50","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"23969:9:50","parameters":{"id":24581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24578,"mutability":"mutable","name":"path","nameLocation":"23995:4:50","nodeType":"VariableDeclaration","scope":24583,"src":"23979:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24577,"name":"string","nodeType":"ElementaryTypeName","src":"23979:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24580,"mutability":"mutable","name":"recursive","nameLocation":"24006:9:50","nodeType":"VariableDeclaration","scope":24583,"src":"24001:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24579,"name":"bool","nodeType":"ElementaryTypeName","src":"24001:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23978:38:50"},"returnParameters":{"id":24582,"nodeType":"ParameterList","parameters":[],"src":"24025:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24591,"nodeType":"FunctionDefinition","src":"24121:69:50","nodes":[],"documentation":{"id":24584,"nodeType":"StructuredDocumentation","src":"24032:84:50","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"24130:6:50","parameters":{"id":24587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24586,"mutability":"mutable","name":"path","nameLocation":"24153:4:50","nodeType":"VariableDeclaration","scope":24591,"src":"24137:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24585,"name":"string","nodeType":"ElementaryTypeName","src":"24137:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24136:22:50"},"returnParameters":{"id":24590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24589,"mutability":"mutable","name":"result","nameLocation":"24182:6:50","nodeType":"VariableDeclaration","scope":24591,"src":"24177:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24588,"name":"bool","nodeType":"ElementaryTypeName","src":"24177:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24176:13:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24600,"nodeType":"FunctionDefinition","src":"24255:84:50","nodes":[],"documentation":{"id":24592,"nodeType":"StructuredDocumentation","src":"24196:54:50","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"24264:3:50","parameters":{"id":24596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24595,"mutability":"mutable","name":"commandInput","nameLocation":"24286:12:50","nodeType":"VariableDeclaration","scope":24600,"src":"24268:30:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24593,"name":"string","nodeType":"ElementaryTypeName","src":"24268:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24594,"nodeType":"ArrayTypeName","src":"24268:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24267:32:50"},"returnParameters":{"id":24599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24598,"mutability":"mutable","name":"result","nameLocation":"24331:6:50","nodeType":"VariableDeclaration","scope":24600,"src":"24318:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24597,"name":"bytes","nodeType":"ElementaryTypeName","src":"24318:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24317:21:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24609,"nodeType":"FunctionDefinition","src":"24438:93:50","nodes":[],"documentation":{"id":24601,"nodeType":"StructuredDocumentation","src":"24345:88:50","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"24447:10:50","parameters":{"id":24604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24603,"mutability":"mutable","name":"path","nameLocation":"24474:4:50","nodeType":"VariableDeclaration","scope":24609,"src":"24458:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24602,"name":"string","nodeType":"ElementaryTypeName","src":"24458:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24457:22:50"},"returnParameters":{"id":24608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24607,"mutability":"mutable","name":"metadata","nameLocation":"24521:8:50","nodeType":"VariableDeclaration","scope":24609,"src":"24503:26:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$23929_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":24606,"nodeType":"UserDefinedTypeName","pathNode":{"id":24605,"name":"FsMetadata","nameLocations":["24503:10:50"],"nodeType":"IdentifierPath","referencedDeclaration":23929,"src":"24503:10:50"},"referencedDeclaration":23929,"src":"24503:10:50","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$23929_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"24502:28:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24617,"nodeType":"FunctionDefinition","src":"24769:101:50","nodes":[],"documentation":{"id":24610,"nodeType":"StructuredDocumentation","src":"24537:227:50","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"24778:7:50","parameters":{"id":24613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24612,"mutability":"mutable","name":"artifactPath","nameLocation":"24802:12:50","nodeType":"VariableDeclaration","scope":24617,"src":"24786:28:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24611,"name":"string","nodeType":"ElementaryTypeName","src":"24786:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24785:30:50"},"returnParameters":{"id":24616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24615,"mutability":"mutable","name":"creationBytecode","nameLocation":"24852:16:50","nodeType":"VariableDeclaration","scope":24617,"src":"24839:29:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24614,"name":"bytes","nodeType":"ElementaryTypeName","src":"24839:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24838:31:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24625,"nodeType":"FunctionDefinition","src":"25108:108:50","nodes":[],"documentation":{"id":24618,"nodeType":"StructuredDocumentation","src":"24876:227:50","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"25117:15:50","parameters":{"id":24621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24620,"mutability":"mutable","name":"artifactPath","nameLocation":"25149:12:50","nodeType":"VariableDeclaration","scope":24625,"src":"25133:28:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24619,"name":"string","nodeType":"ElementaryTypeName","src":"25133:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25132:30:50"},"returnParameters":{"id":24624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24623,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"25199:15:50","nodeType":"VariableDeclaration","scope":24625,"src":"25186:28:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24622,"name":"bytes","nodeType":"ElementaryTypeName","src":"25186:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25185:30:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24633,"nodeType":"FunctionDefinition","src":"25322:68:50","nodes":[],"documentation":{"id":24626,"nodeType":"StructuredDocumentation","src":"25222:95:50","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"25331:5:50","parameters":{"id":24629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24628,"mutability":"mutable","name":"path","nameLocation":"25353:4:50","nodeType":"VariableDeclaration","scope":24633,"src":"25337:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24627,"name":"string","nodeType":"ElementaryTypeName","src":"25337:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25336:22:50"},"returnParameters":{"id":24632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24631,"mutability":"mutable","name":"result","nameLocation":"25382:6:50","nodeType":"VariableDeclaration","scope":24633,"src":"25377:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24630,"name":"bool","nodeType":"ElementaryTypeName","src":"25377:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25376:13:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24641,"nodeType":"FunctionDefinition","src":"25499:69:50","nodes":[],"documentation":{"id":24634,"nodeType":"StructuredDocumentation","src":"25396:98:50","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"25508:6:50","parameters":{"id":24637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24636,"mutability":"mutable","name":"path","nameLocation":"25531:4:50","nodeType":"VariableDeclaration","scope":24641,"src":"25515:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24635,"name":"string","nodeType":"ElementaryTypeName","src":"25515:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25514:22:50"},"returnParameters":{"id":24640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24639,"mutability":"mutable","name":"result","nameLocation":"25560:6:50","nodeType":"VariableDeclaration","scope":24641,"src":"25555:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24638,"name":"bool","nodeType":"ElementaryTypeName","src":"25555:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25554:13:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24647,"nodeType":"FunctionDefinition","src":"25624:66:50","nodes":[],"documentation":{"id":24642,"nodeType":"StructuredDocumentation","src":"25574:45:50","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"25633:11:50","parameters":{"id":24643,"nodeType":"ParameterList","parameters":[],"src":"25644:2:50"},"returnParameters":{"id":24646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24645,"mutability":"mutable","name":"path","nameLocation":"25684:4:50","nodeType":"VariableDeclaration","scope":24647,"src":"25670:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24644,"name":"string","nodeType":"ElementaryTypeName","src":"25670:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25669:20:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24655,"nodeType":"FunctionDefinition","src":"25757:83:50","nodes":[],"documentation":{"id":24648,"nodeType":"StructuredDocumentation","src":"25696:56:50","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"25766:6:50","parameters":{"id":24651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24650,"mutability":"mutable","name":"promptText","nameLocation":"25789:10:50","nodeType":"VariableDeclaration","scope":24655,"src":"25773:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24649,"name":"string","nodeType":"ElementaryTypeName","src":"25773:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25772:28:50"},"returnParameters":{"id":24654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24653,"mutability":"mutable","name":"input","nameLocation":"25833:5:50","nodeType":"VariableDeclaration","scope":24655,"src":"25819:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24652,"name":"string","nodeType":"ElementaryTypeName","src":"25819:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25818:21:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24663,"nodeType":"FunctionDefinition","src":"25903:78:50","nodes":[],"documentation":{"id":24656,"nodeType":"StructuredDocumentation","src":"25846:52:50","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"25912:13:50","parameters":{"id":24659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24658,"mutability":"mutable","name":"promptText","nameLocation":"25942:10:50","nodeType":"VariableDeclaration","scope":24663,"src":"25926:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24657,"name":"string","nodeType":"ElementaryTypeName","src":"25926:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25925:28:50"},"returnParameters":{"id":24662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24663,"src":"25972:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24660,"name":"address","nodeType":"ElementaryTypeName","src":"25972:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25971:9:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24671,"nodeType":"FunctionDefinition","src":"26055:89:50","nodes":[],"documentation":{"id":24664,"nodeType":"StructuredDocumentation","src":"25987:63:50","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"26064:12:50","parameters":{"id":24667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24666,"mutability":"mutable","name":"promptText","nameLocation":"26093:10:50","nodeType":"VariableDeclaration","scope":24671,"src":"26077:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24665,"name":"string","nodeType":"ElementaryTypeName","src":"26077:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26076:28:50"},"returnParameters":{"id":24670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24669,"mutability":"mutable","name":"input","nameLocation":"26137:5:50","nodeType":"VariableDeclaration","scope":24671,"src":"26123:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24668,"name":"string","nodeType":"ElementaryTypeName","src":"26123:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26122:21:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24679,"nodeType":"FunctionDefinition","src":"26204:75:50","nodes":[],"documentation":{"id":24672,"nodeType":"StructuredDocumentation","src":"26150:49:50","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"26213:10:50","parameters":{"id":24675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24674,"mutability":"mutable","name":"promptText","nameLocation":"26240:10:50","nodeType":"VariableDeclaration","scope":24679,"src":"26224:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24673,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:28:50"},"returnParameters":{"id":24678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24679,"src":"26270:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24676,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:9:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24689,"nodeType":"FunctionDefinition","src":"26527:89:50","nodes":[],"documentation":{"id":24680,"nodeType":"StructuredDocumentation","src":"26285:237:50","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26536:7:50","parameters":{"id":24683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24682,"mutability":"mutable","name":"path","nameLocation":"26560:4:50","nodeType":"VariableDeclaration","scope":24689,"src":"26544:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24681,"name":"string","nodeType":"ElementaryTypeName","src":"26544:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26543:22:50"},"returnParameters":{"id":24688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24687,"mutability":"mutable","name":"entries","nameLocation":"26607:7:50","nodeType":"VariableDeclaration","scope":24689,"src":"26589:25:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$23913_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":24685,"nodeType":"UserDefinedTypeName","pathNode":{"id":24684,"name":"DirEntry","nameLocations":["26589:8:50"],"nodeType":"IdentifierPath","referencedDeclaration":23913,"src":"26589:8:50"},"referencedDeclaration":23913,"src":"26589:8:50","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$23913_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":24686,"nodeType":"ArrayTypeName","src":"26589:10:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$23913_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26588:27:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24701,"nodeType":"FunctionDefinition","src":"26653:106:50","nodes":[],"documentation":{"id":24690,"nodeType":"StructuredDocumentation","src":"26622:26:50","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26662:7:50","parameters":{"id":24695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24692,"mutability":"mutable","name":"path","nameLocation":"26686:4:50","nodeType":"VariableDeclaration","scope":24701,"src":"26670:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24691,"name":"string","nodeType":"ElementaryTypeName","src":"26670:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24694,"mutability":"mutable","name":"maxDepth","nameLocation":"26699:8:50","nodeType":"VariableDeclaration","scope":24701,"src":"26692:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24693,"name":"uint64","nodeType":"ElementaryTypeName","src":"26692:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26669:39:50"},"returnParameters":{"id":24700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24699,"mutability":"mutable","name":"entries","nameLocation":"26750:7:50","nodeType":"VariableDeclaration","scope":24701,"src":"26732:25:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$23913_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":24697,"nodeType":"UserDefinedTypeName","pathNode":{"id":24696,"name":"DirEntry","nameLocations":["26732:8:50"],"nodeType":"IdentifierPath","referencedDeclaration":23913,"src":"26732:8:50"},"referencedDeclaration":23913,"src":"26732:8:50","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$23913_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":24698,"nodeType":"ArrayTypeName","src":"26732:10:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$23913_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26731:27:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24715,"nodeType":"FunctionDefinition","src":"26796:148:50","nodes":[],"documentation":{"id":24702,"nodeType":"StructuredDocumentation","src":"26765:26:50","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26805:7:50","parameters":{"id":24709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24704,"mutability":"mutable","name":"path","nameLocation":"26829:4:50","nodeType":"VariableDeclaration","scope":24715,"src":"26813:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24703,"name":"string","nodeType":"ElementaryTypeName","src":"26813:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24706,"mutability":"mutable","name":"maxDepth","nameLocation":"26842:8:50","nodeType":"VariableDeclaration","scope":24715,"src":"26835:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24705,"name":"uint64","nodeType":"ElementaryTypeName","src":"26835:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":24708,"mutability":"mutable","name":"followLinks","nameLocation":"26857:11:50","nodeType":"VariableDeclaration","scope":24715,"src":"26852:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24707,"name":"bool","nodeType":"ElementaryTypeName","src":"26852:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26812:57:50"},"returnParameters":{"id":24714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24713,"mutability":"mutable","name":"entries","nameLocation":"26935:7:50","nodeType":"VariableDeclaration","scope":24715,"src":"26917:25:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$23913_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":24711,"nodeType":"UserDefinedTypeName","pathNode":{"id":24710,"name":"DirEntry","nameLocations":["26917:8:50"],"nodeType":"IdentifierPath","referencedDeclaration":23913,"src":"26917:8:50"},"referencedDeclaration":23913,"src":"26917:8:50","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$23913_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":24712,"nodeType":"ArrayTypeName","src":"26917:10:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$23913_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26916:27:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24723,"nodeType":"FunctionDefinition","src":"27042:83:50","nodes":[],"documentation":{"id":24716,"nodeType":"StructuredDocumentation","src":"26950:87:50","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"27051:8:50","parameters":{"id":24719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24718,"mutability":"mutable","name":"path","nameLocation":"27076:4:50","nodeType":"VariableDeclaration","scope":24723,"src":"27060:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24717,"name":"string","nodeType":"ElementaryTypeName","src":"27060:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27059:22:50"},"returnParameters":{"id":24722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24721,"mutability":"mutable","name":"data","nameLocation":"27119:4:50","nodeType":"VariableDeclaration","scope":24723,"src":"27105:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24720,"name":"string","nodeType":"ElementaryTypeName","src":"27105:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27104:20:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24731,"nodeType":"FunctionDefinition","src":"27223:88:50","nodes":[],"documentation":{"id":24724,"nodeType":"StructuredDocumentation","src":"27131:87:50","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"27232:14:50","parameters":{"id":24727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24726,"mutability":"mutable","name":"path","nameLocation":"27263:4:50","nodeType":"VariableDeclaration","scope":24731,"src":"27247:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24725,"name":"string","nodeType":"ElementaryTypeName","src":"27247:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27246:22:50"},"returnParameters":{"id":24730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24729,"mutability":"mutable","name":"data","nameLocation":"27305:4:50","nodeType":"VariableDeclaration","scope":24731,"src":"27292:17:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24728,"name":"bytes","nodeType":"ElementaryTypeName","src":"27292:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27291:19:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24739,"nodeType":"FunctionDefinition","src":"27360:83:50","nodes":[],"documentation":{"id":24732,"nodeType":"StructuredDocumentation","src":"27317:38:50","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"27369:8:50","parameters":{"id":24735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24734,"mutability":"mutable","name":"path","nameLocation":"27394:4:50","nodeType":"VariableDeclaration","scope":24739,"src":"27378:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24733,"name":"string","nodeType":"ElementaryTypeName","src":"27378:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27377:22:50"},"returnParameters":{"id":24738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24737,"mutability":"mutable","name":"line","nameLocation":"27437:4:50","nodeType":"VariableDeclaration","scope":24739,"src":"27423:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24736,"name":"string","nodeType":"ElementaryTypeName","src":"27423:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27422:20:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24747,"nodeType":"FunctionDefinition","src":"27702:93:50","nodes":[],"documentation":{"id":24740,"nodeType":"StructuredDocumentation","src":"27449:248:50","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"27711:8:50","parameters":{"id":24743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24742,"mutability":"mutable","name":"linkPath","nameLocation":"27736:8:50","nodeType":"VariableDeclaration","scope":24747,"src":"27720:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24741,"name":"string","nodeType":"ElementaryTypeName","src":"27720:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27719:26:50"},"returnParameters":{"id":24746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24745,"mutability":"mutable","name":"targetPath","nameLocation":"27783:10:50","nodeType":"VariableDeclaration","scope":24747,"src":"27769:24:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24744,"name":"string","nodeType":"ElementaryTypeName","src":"27769:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27768:26:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24755,"nodeType":"FunctionDefinition","src":"28185:66:50","nodes":[],"documentation":{"id":24748,"nodeType":"StructuredDocumentation","src":"27801:379:50","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"28194:9:50","parameters":{"id":24753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24750,"mutability":"mutable","name":"path","nameLocation":"28220:4:50","nodeType":"VariableDeclaration","scope":24755,"src":"28204:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24749,"name":"string","nodeType":"ElementaryTypeName","src":"28204:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24752,"mutability":"mutable","name":"recursive","nameLocation":"28231:9:50","nodeType":"VariableDeclaration","scope":24755,"src":"28226:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24751,"name":"bool","nodeType":"ElementaryTypeName","src":"28226:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28203:38:50"},"returnParameters":{"id":24754,"nodeType":"ParameterList","parameters":[],"src":"28250:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24761,"nodeType":"FunctionDefinition","src":"28584:51:50","nodes":[],"documentation":{"id":24756,"nodeType":"StructuredDocumentation","src":"28257:322:50","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"28593:10:50","parameters":{"id":24759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24758,"mutability":"mutable","name":"path","nameLocation":"28620:4:50","nodeType":"VariableDeclaration","scope":24761,"src":"28604:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24757,"name":"string","nodeType":"ElementaryTypeName","src":"28604:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28603:22:50"},"returnParameters":{"id":24760,"nodeType":"ParameterList","parameters":[],"src":"28634:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24771,"nodeType":"FunctionDefinition","src":"28742:91:50","nodes":[],"documentation":{"id":24762,"nodeType":"StructuredDocumentation","src":"28641:96:50","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"28751:6:50","parameters":{"id":24766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24765,"mutability":"mutable","name":"commandInput","nameLocation":"28776:12:50","nodeType":"VariableDeclaration","scope":24771,"src":"28758:30:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24763,"name":"string","nodeType":"ElementaryTypeName","src":"28758:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24764,"nodeType":"ArrayTypeName","src":"28758:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28757:32:50"},"returnParameters":{"id":24770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24769,"mutability":"mutable","name":"result","nameLocation":"28825:6:50","nodeType":"VariableDeclaration","scope":24771,"src":"28808:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$23947_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":24768,"nodeType":"UserDefinedTypeName","pathNode":{"id":24767,"name":"FfiResult","nameLocations":["28808:9:50"],"nodeType":"IdentifierPath","referencedDeclaration":23947,"src":"28808:9:50"},"referencedDeclaration":23947,"src":"28808:9:50","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$23947_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"28807:25:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24777,"nodeType":"FunctionDefinition","src":"28898:60:50","nodes":[],"documentation":{"id":24772,"nodeType":"StructuredDocumentation","src":"28839:54:50","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"28907:8:50","parameters":{"id":24773,"nodeType":"ParameterList","parameters":[],"src":"28915:2:50"},"returnParameters":{"id":24776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24775,"mutability":"mutable","name":"milliseconds","nameLocation":"28944:12:50","nodeType":"VariableDeclaration","scope":24777,"src":"28936:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24774,"name":"uint256","nodeType":"ElementaryTypeName","src":"28936:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28935:22:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24785,"nodeType":"FunctionDefinition","src":"29127:72:50","nodes":[],"documentation":{"id":24778,"nodeType":"StructuredDocumentation","src":"28964:158:50","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"29136:9:50","parameters":{"id":24783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24780,"mutability":"mutable","name":"path","nameLocation":"29162:4:50","nodeType":"VariableDeclaration","scope":24785,"src":"29146:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24779,"name":"string","nodeType":"ElementaryTypeName","src":"29146:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24782,"mutability":"mutable","name":"data","nameLocation":"29184:4:50","nodeType":"VariableDeclaration","scope":24785,"src":"29168:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24781,"name":"string","nodeType":"ElementaryTypeName","src":"29168:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29145:44:50"},"returnParameters":{"id":24784,"nodeType":"ParameterList","parameters":[],"src":"29198:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24793,"nodeType":"FunctionDefinition","src":"29377:77:50","nodes":[],"documentation":{"id":24786,"nodeType":"StructuredDocumentation","src":"29205:167:50","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"29386:15:50","parameters":{"id":24791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24788,"mutability":"mutable","name":"path","nameLocation":"29418:4:50","nodeType":"VariableDeclaration","scope":24793,"src":"29402:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24787,"name":"string","nodeType":"ElementaryTypeName","src":"29402:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24790,"mutability":"mutable","name":"data","nameLocation":"29439:4:50","nodeType":"VariableDeclaration","scope":24793,"src":"29424:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":24789,"name":"bytes","nodeType":"ElementaryTypeName","src":"29424:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29401:43:50"},"returnParameters":{"id":24792,"nodeType":"ParameterList","parameters":[],"src":"29453:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24801,"nodeType":"FunctionDefinition","src":"29575:72:50","nodes":[],"documentation":{"id":24794,"nodeType":"StructuredDocumentation","src":"29460:110:50","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"29584:9:50","parameters":{"id":24799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24796,"mutability":"mutable","name":"path","nameLocation":"29610:4:50","nodeType":"VariableDeclaration","scope":24801,"src":"29594:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24795,"name":"string","nodeType":"ElementaryTypeName","src":"29594:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24798,"mutability":"mutable","name":"data","nameLocation":"29632:4:50","nodeType":"VariableDeclaration","scope":24801,"src":"29616:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24797,"name":"string","nodeType":"ElementaryTypeName","src":"29616:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29593:44:50"},"returnParameters":{"id":24800,"nodeType":"ParameterList","parameters":[],"src":"29646:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":24811,"nodeType":"FunctionDefinition","src":"29840:91:50","nodes":[],"documentation":{"id":24802,"nodeType":"StructuredDocumentation","src":"29684:151:50","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"29849:9:50","parameters":{"id":24807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24804,"mutability":"mutable","name":"json","nameLocation":"29875:4:50","nodeType":"VariableDeclaration","scope":24811,"src":"29859:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24803,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24806,"mutability":"mutable","name":"key","nameLocation":"29897:3:50","nodeType":"VariableDeclaration","scope":24811,"src":"29881:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24805,"name":"string","nodeType":"ElementaryTypeName","src":"29881:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29858:43:50"},"returnParameters":{"id":24810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24811,"src":"29925:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24808,"name":"bool","nodeType":"ElementaryTypeName","src":"29925:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29924:6:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24821,"nodeType":"FunctionDefinition","src":"29986:95:50","nodes":[],"documentation":{"id":24812,"nodeType":"StructuredDocumentation","src":"29937:44:50","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"29995:13:50","parameters":{"id":24817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24814,"mutability":"mutable","name":"json","nameLocation":"30025:4:50","nodeType":"VariableDeclaration","scope":24821,"src":"30009:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24813,"name":"string","nodeType":"ElementaryTypeName","src":"30009:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24816,"mutability":"mutable","name":"key","nameLocation":"30047:3:50","nodeType":"VariableDeclaration","scope":24821,"src":"30031:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24815,"name":"string","nodeType":"ElementaryTypeName","src":"30031:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30008:43:50"},"returnParameters":{"id":24820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24821,"src":"30075:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24818,"name":"bool","nodeType":"ElementaryTypeName","src":"30075:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30074:6:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24831,"nodeType":"FunctionDefinition","src":"30162:101:50","nodes":[],"documentation":{"id":24822,"nodeType":"StructuredDocumentation","src":"30087:70:50","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"30171:16:50","parameters":{"id":24827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24824,"mutability":"mutable","name":"json","nameLocation":"30204:4:50","nodeType":"VariableDeclaration","scope":24831,"src":"30188:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24823,"name":"string","nodeType":"ElementaryTypeName","src":"30188:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24826,"mutability":"mutable","name":"key","nameLocation":"30226:3:50","nodeType":"VariableDeclaration","scope":24831,"src":"30210:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24825,"name":"string","nodeType":"ElementaryTypeName","src":"30210:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30187:43:50"},"returnParameters":{"id":24830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24831,"src":"30254:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24828,"name":"address","nodeType":"ElementaryTypeName","src":"30254:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30253:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24842,"nodeType":"FunctionDefinition","src":"30346:139:50","nodes":[],"documentation":{"id":24832,"nodeType":"StructuredDocumentation","src":"30269:72:50","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"30355:21:50","parameters":{"id":24837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24834,"mutability":"mutable","name":"json","nameLocation":"30393:4:50","nodeType":"VariableDeclaration","scope":24842,"src":"30377:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24833,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24836,"mutability":"mutable","name":"key","nameLocation":"30415:3:50","nodeType":"VariableDeclaration","scope":24842,"src":"30399:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24835,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:43:50"},"returnParameters":{"id":24841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24842,"src":"30467:16:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":24838,"name":"address","nodeType":"ElementaryTypeName","src":"30467:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":24839,"nodeType":"ArrayTypeName","src":"30467:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30466:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24852,"nodeType":"FunctionDefinition","src":"30563:95:50","nodes":[],"documentation":{"id":24843,"nodeType":"StructuredDocumentation","src":"30491:67:50","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"30572:13:50","parameters":{"id":24848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24845,"mutability":"mutable","name":"json","nameLocation":"30602:4:50","nodeType":"VariableDeclaration","scope":24852,"src":"30586:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24844,"name":"string","nodeType":"ElementaryTypeName","src":"30586:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24847,"mutability":"mutable","name":"key","nameLocation":"30624:3:50","nodeType":"VariableDeclaration","scope":24852,"src":"30608:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24846,"name":"string","nodeType":"ElementaryTypeName","src":"30608:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30585:43:50"},"returnParameters":{"id":24851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24852,"src":"30652:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24849,"name":"bool","nodeType":"ElementaryTypeName","src":"30652:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30651:6:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24863,"nodeType":"FunctionDefinition","src":"30738:109:50","nodes":[],"documentation":{"id":24853,"nodeType":"StructuredDocumentation","src":"30664:69:50","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"30747:18:50","parameters":{"id":24858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24855,"mutability":"mutable","name":"json","nameLocation":"30782:4:50","nodeType":"VariableDeclaration","scope":24863,"src":"30766:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24854,"name":"string","nodeType":"ElementaryTypeName","src":"30766:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24857,"mutability":"mutable","name":"key","nameLocation":"30804:3:50","nodeType":"VariableDeclaration","scope":24863,"src":"30788:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24856,"name":"string","nodeType":"ElementaryTypeName","src":"30788:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30765:43:50"},"returnParameters":{"id":24862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24863,"src":"30832:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":24859,"name":"bool","nodeType":"ElementaryTypeName","src":"30832:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":24860,"nodeType":"ArrayTypeName","src":"30832:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30831:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24873,"nodeType":"FunctionDefinition","src":"30926:104:50","nodes":[],"documentation":{"id":24864,"nodeType":"StructuredDocumentation","src":"30853:68:50","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"30935:14:50","parameters":{"id":24869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24866,"mutability":"mutable","name":"json","nameLocation":"30966:4:50","nodeType":"VariableDeclaration","scope":24873,"src":"30950:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24865,"name":"string","nodeType":"ElementaryTypeName","src":"30950:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24868,"mutability":"mutable","name":"key","nameLocation":"30988:3:50","nodeType":"VariableDeclaration","scope":24873,"src":"30972:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24867,"name":"string","nodeType":"ElementaryTypeName","src":"30972:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30949:43:50"},"returnParameters":{"id":24872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24873,"src":"31016:12:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24870,"name":"bytes","nodeType":"ElementaryTypeName","src":"31016:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31015:14:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24883,"nodeType":"FunctionDefinition","src":"31111:101:50","nodes":[],"documentation":{"id":24874,"nodeType":"StructuredDocumentation","src":"31036:70:50","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"31120:16:50","parameters":{"id":24879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24876,"mutability":"mutable","name":"json","nameLocation":"31153:4:50","nodeType":"VariableDeclaration","scope":24883,"src":"31137:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24875,"name":"string","nodeType":"ElementaryTypeName","src":"31137:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24878,"mutability":"mutable","name":"key","nameLocation":"31175:3:50","nodeType":"VariableDeclaration","scope":24883,"src":"31159:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24877,"name":"string","nodeType":"ElementaryTypeName","src":"31159:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31136:43:50"},"returnParameters":{"id":24882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24883,"src":"31203:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31203:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31202:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24894,"nodeType":"FunctionDefinition","src":"31295:139:50","nodes":[],"documentation":{"id":24884,"nodeType":"StructuredDocumentation","src":"31218:72:50","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"31304:21:50","parameters":{"id":24889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24886,"mutability":"mutable","name":"json","nameLocation":"31342:4:50","nodeType":"VariableDeclaration","scope":24894,"src":"31326:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24885,"name":"string","nodeType":"ElementaryTypeName","src":"31326:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24888,"mutability":"mutable","name":"key","nameLocation":"31364:3:50","nodeType":"VariableDeclaration","scope":24894,"src":"31348:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24887,"name":"string","nodeType":"ElementaryTypeName","src":"31348:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31325:43:50"},"returnParameters":{"id":24893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24894,"src":"31416:16:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":24890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31416:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24891,"nodeType":"ArrayTypeName","src":"31416:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31415:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24905,"nodeType":"FunctionDefinition","src":"31515:111:50","nodes":[],"documentation":{"id":24895,"nodeType":"StructuredDocumentation","src":"31440:70:50","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"31524:19:50","parameters":{"id":24900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24897,"mutability":"mutable","name":"json","nameLocation":"31560:4:50","nodeType":"VariableDeclaration","scope":24905,"src":"31544:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24896,"name":"string","nodeType":"ElementaryTypeName","src":"31544:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24899,"mutability":"mutable","name":"key","nameLocation":"31582:3:50","nodeType":"VariableDeclaration","scope":24905,"src":"31566:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24898,"name":"string","nodeType":"ElementaryTypeName","src":"31566:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31543:43:50"},"returnParameters":{"id":24904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24905,"src":"31610:14:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":24901,"name":"bytes","nodeType":"ElementaryTypeName","src":"31610:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":24902,"nodeType":"ArrayTypeName","src":"31610:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"31609:16:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24915,"nodeType":"FunctionDefinition","src":"31706:96:50","nodes":[],"documentation":{"id":24906,"nodeType":"StructuredDocumentation","src":"31632:69:50","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"31715:12:50","parameters":{"id":24911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24908,"mutability":"mutable","name":"json","nameLocation":"31744:4:50","nodeType":"VariableDeclaration","scope":24915,"src":"31728:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24907,"name":"string","nodeType":"ElementaryTypeName","src":"31728:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24910,"mutability":"mutable","name":"key","nameLocation":"31766:3:50","nodeType":"VariableDeclaration","scope":24915,"src":"31750:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24909,"name":"string","nodeType":"ElementaryTypeName","src":"31750:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31727:43:50"},"returnParameters":{"id":24914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24915,"src":"31794:6:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":24912,"name":"int256","nodeType":"ElementaryTypeName","src":"31794:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31793:8:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24926,"nodeType":"FunctionDefinition","src":"31884:110:50","nodes":[],"documentation":{"id":24916,"nodeType":"StructuredDocumentation","src":"31808:71:50","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"31893:17:50","parameters":{"id":24921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24918,"mutability":"mutable","name":"json","nameLocation":"31927:4:50","nodeType":"VariableDeclaration","scope":24926,"src":"31911:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24917,"name":"string","nodeType":"ElementaryTypeName","src":"31911:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24920,"mutability":"mutable","name":"key","nameLocation":"31949:3:50","nodeType":"VariableDeclaration","scope":24926,"src":"31933:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24919,"name":"string","nodeType":"ElementaryTypeName","src":"31933:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31910:43:50"},"returnParameters":{"id":24925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24926,"src":"31977:15:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":24922,"name":"int256","nodeType":"ElementaryTypeName","src":"31977:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":24923,"nodeType":"ArrayTypeName","src":"31977:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31976:17:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24937,"nodeType":"FunctionDefinition","src":"32059:111:50","nodes":[],"documentation":{"id":24927,"nodeType":"StructuredDocumentation","src":"32000:54:50","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"32068:13:50","parameters":{"id":24932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24929,"mutability":"mutable","name":"json","nameLocation":"32098:4:50","nodeType":"VariableDeclaration","scope":24937,"src":"32082:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24928,"name":"string","nodeType":"ElementaryTypeName","src":"32082:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24931,"mutability":"mutable","name":"key","nameLocation":"32120:3:50","nodeType":"VariableDeclaration","scope":24937,"src":"32104:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24930,"name":"string","nodeType":"ElementaryTypeName","src":"32104:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32081:43:50"},"returnParameters":{"id":24936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24935,"mutability":"mutable","name":"keys","nameLocation":"32164:4:50","nodeType":"VariableDeclaration","scope":24937,"src":"32148:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24933,"name":"string","nodeType":"ElementaryTypeName","src":"32148:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24934,"nodeType":"ArrayTypeName","src":"32148:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32147:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24947,"nodeType":"FunctionDefinition","src":"32250:106:50","nodes":[],"documentation":{"id":24938,"nodeType":"StructuredDocumentation","src":"32176:69:50","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"32259:15:50","parameters":{"id":24943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24940,"mutability":"mutable","name":"json","nameLocation":"32291:4:50","nodeType":"VariableDeclaration","scope":24947,"src":"32275:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24939,"name":"string","nodeType":"ElementaryTypeName","src":"32275:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24942,"mutability":"mutable","name":"key","nameLocation":"32313:3:50","nodeType":"VariableDeclaration","scope":24947,"src":"32297:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24941,"name":"string","nodeType":"ElementaryTypeName","src":"32297:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32274:43:50"},"returnParameters":{"id":24946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24947,"src":"32341:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24944,"name":"string","nodeType":"ElementaryTypeName","src":"32341:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32340:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24958,"nodeType":"FunctionDefinition","src":"32438:113:50","nodes":[],"documentation":{"id":24948,"nodeType":"StructuredDocumentation","src":"32362:71:50","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"32447:20:50","parameters":{"id":24953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24950,"mutability":"mutable","name":"json","nameLocation":"32484:4:50","nodeType":"VariableDeclaration","scope":24958,"src":"32468:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24949,"name":"string","nodeType":"ElementaryTypeName","src":"32468:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24952,"mutability":"mutable","name":"key","nameLocation":"32506:3:50","nodeType":"VariableDeclaration","scope":24958,"src":"32490:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24951,"name":"string","nodeType":"ElementaryTypeName","src":"32490:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32467:43:50"},"returnParameters":{"id":24957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24958,"src":"32534:15:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":24954,"name":"string","nodeType":"ElementaryTypeName","src":"32534:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":24955,"nodeType":"ArrayTypeName","src":"32534:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32533:17:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24968,"nodeType":"FunctionDefinition","src":"32632:98:50","nodes":[],"documentation":{"id":24959,"nodeType":"StructuredDocumentation","src":"32557:70:50","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"32641:13:50","parameters":{"id":24964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24961,"mutability":"mutable","name":"json","nameLocation":"32671:4:50","nodeType":"VariableDeclaration","scope":24968,"src":"32655:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24960,"name":"string","nodeType":"ElementaryTypeName","src":"32655:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24963,"mutability":"mutable","name":"key","nameLocation":"32693:3:50","nodeType":"VariableDeclaration","scope":24968,"src":"32677:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24962,"name":"string","nodeType":"ElementaryTypeName","src":"32677:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32654:43:50"},"returnParameters":{"id":24967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24968,"src":"32721:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24965,"name":"uint256","nodeType":"ElementaryTypeName","src":"32721:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32720:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24979,"nodeType":"FunctionDefinition","src":"32813:112:50","nodes":[],"documentation":{"id":24969,"nodeType":"StructuredDocumentation","src":"32736:72:50","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"32822:18:50","parameters":{"id":24974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24971,"mutability":"mutable","name":"json","nameLocation":"32857:4:50","nodeType":"VariableDeclaration","scope":24979,"src":"32841:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24970,"name":"string","nodeType":"ElementaryTypeName","src":"32841:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24973,"mutability":"mutable","name":"key","nameLocation":"32879:3:50","nodeType":"VariableDeclaration","scope":24979,"src":"32863:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24972,"name":"string","nodeType":"ElementaryTypeName","src":"32863:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32840:43:50"},"returnParameters":{"id":24978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24979,"src":"32907:16:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":24975,"name":"uint256","nodeType":"ElementaryTypeName","src":"32907:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":24976,"nodeType":"ArrayTypeName","src":"32907:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32906:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24987,"nodeType":"FunctionDefinition","src":"32966:93:50","nodes":[],"documentation":{"id":24980,"nodeType":"StructuredDocumentation","src":"32931:30:50","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"32975:9:50","parameters":{"id":24983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24982,"mutability":"mutable","name":"json","nameLocation":"33001:4:50","nodeType":"VariableDeclaration","scope":24987,"src":"32985:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24981,"name":"string","nodeType":"ElementaryTypeName","src":"32985:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32984:22:50"},"returnParameters":{"id":24986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24985,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33043:14:50","nodeType":"VariableDeclaration","scope":24987,"src":"33030:27:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24984,"name":"bytes","nodeType":"ElementaryTypeName","src":"33030:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33029:29:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":24997,"nodeType":"FunctionDefinition","src":"33109:114:50","nodes":[],"documentation":{"id":24988,"nodeType":"StructuredDocumentation","src":"33065:39:50","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"33118:9:50","parameters":{"id":24993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24990,"mutability":"mutable","name":"json","nameLocation":"33144:4:50","nodeType":"VariableDeclaration","scope":24997,"src":"33128:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24989,"name":"string","nodeType":"ElementaryTypeName","src":"33128:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":24992,"mutability":"mutable","name":"key","nameLocation":"33166:3:50","nodeType":"VariableDeclaration","scope":24997,"src":"33150:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24991,"name":"string","nodeType":"ElementaryTypeName","src":"33150:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33127:43:50"},"returnParameters":{"id":24996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24995,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33207:14:50","nodeType":"VariableDeclaration","scope":24997,"src":"33194:27:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":24994,"name":"bytes","nodeType":"ElementaryTypeName","src":"33194:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33193:29:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25009,"nodeType":"FunctionDefinition","src":"33258:148:50","nodes":[],"documentation":{"id":24998,"nodeType":"StructuredDocumentation","src":"33229:24:50","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33267:16:50","parameters":{"id":25005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25000,"mutability":"mutable","name":"objectKey","nameLocation":"33300:9:50","nodeType":"VariableDeclaration","scope":25009,"src":"33284:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":24999,"name":"string","nodeType":"ElementaryTypeName","src":"33284:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25002,"mutability":"mutable","name":"valueKey","nameLocation":"33327:8:50","nodeType":"VariableDeclaration","scope":25009,"src":"33311:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25001,"name":"string","nodeType":"ElementaryTypeName","src":"33311:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25004,"mutability":"mutable","name":"value","nameLocation":"33345:5:50","nodeType":"VariableDeclaration","scope":25009,"src":"33337:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25003,"name":"address","nodeType":"ElementaryTypeName","src":"33337:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33283:68:50"},"returnParameters":{"id":25008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25007,"mutability":"mutable","name":"json","nameLocation":"33400:4:50","nodeType":"VariableDeclaration","scope":25009,"src":"33386:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25006,"name":"string","nodeType":"ElementaryTypeName","src":"33386:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33385:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25022,"nodeType":"FunctionDefinition","src":"33441:160:50","nodes":[],"documentation":{"id":25010,"nodeType":"StructuredDocumentation","src":"33412:24:50","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33450:16:50","parameters":{"id":25018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25012,"mutability":"mutable","name":"objectKey","nameLocation":"33483:9:50","nodeType":"VariableDeclaration","scope":25022,"src":"33467:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25011,"name":"string","nodeType":"ElementaryTypeName","src":"33467:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25014,"mutability":"mutable","name":"valueKey","nameLocation":"33510:8:50","nodeType":"VariableDeclaration","scope":25022,"src":"33494:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25013,"name":"string","nodeType":"ElementaryTypeName","src":"33494:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25017,"mutability":"mutable","name":"values","nameLocation":"33539:6:50","nodeType":"VariableDeclaration","scope":25022,"src":"33520:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":25015,"name":"address","nodeType":"ElementaryTypeName","src":"33520:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25016,"nodeType":"ArrayTypeName","src":"33520:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"33466:80:50"},"returnParameters":{"id":25021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25020,"mutability":"mutable","name":"json","nameLocation":"33595:4:50","nodeType":"VariableDeclaration","scope":25022,"src":"33581:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25019,"name":"string","nodeType":"ElementaryTypeName","src":"33581:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33580:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25034,"nodeType":"FunctionDefinition","src":"33636:142:50","nodes":[],"documentation":{"id":25023,"nodeType":"StructuredDocumentation","src":"33607:24:50","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33645:13:50","parameters":{"id":25030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25025,"mutability":"mutable","name":"objectKey","nameLocation":"33675:9:50","nodeType":"VariableDeclaration","scope":25034,"src":"33659:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25024,"name":"string","nodeType":"ElementaryTypeName","src":"33659:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25027,"mutability":"mutable","name":"valueKey","nameLocation":"33702:8:50","nodeType":"VariableDeclaration","scope":25034,"src":"33686:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25026,"name":"string","nodeType":"ElementaryTypeName","src":"33686:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25029,"mutability":"mutable","name":"value","nameLocation":"33717:5:50","nodeType":"VariableDeclaration","scope":25034,"src":"33712:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25028,"name":"bool","nodeType":"ElementaryTypeName","src":"33712:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33658:65:50"},"returnParameters":{"id":25033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25032,"mutability":"mutable","name":"json","nameLocation":"33772:4:50","nodeType":"VariableDeclaration","scope":25034,"src":"33758:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25031,"name":"string","nodeType":"ElementaryTypeName","src":"33758:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33757:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25047,"nodeType":"FunctionDefinition","src":"33813:154:50","nodes":[],"documentation":{"id":25035,"nodeType":"StructuredDocumentation","src":"33784:24:50","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33822:13:50","parameters":{"id":25043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25037,"mutability":"mutable","name":"objectKey","nameLocation":"33852:9:50","nodeType":"VariableDeclaration","scope":25047,"src":"33836:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25036,"name":"string","nodeType":"ElementaryTypeName","src":"33836:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25039,"mutability":"mutable","name":"valueKey","nameLocation":"33879:8:50","nodeType":"VariableDeclaration","scope":25047,"src":"33863:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25038,"name":"string","nodeType":"ElementaryTypeName","src":"33863:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25042,"mutability":"mutable","name":"values","nameLocation":"33905:6:50","nodeType":"VariableDeclaration","scope":25047,"src":"33889:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":25040,"name":"bool","nodeType":"ElementaryTypeName","src":"33889:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":25041,"nodeType":"ArrayTypeName","src":"33889:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"33835:77:50"},"returnParameters":{"id":25046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25045,"mutability":"mutable","name":"json","nameLocation":"33961:4:50","nodeType":"VariableDeclaration","scope":25047,"src":"33947:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25044,"name":"string","nodeType":"ElementaryTypeName","src":"33947:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33946:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25059,"nodeType":"FunctionDefinition","src":"34002:148:50","nodes":[],"documentation":{"id":25048,"nodeType":"StructuredDocumentation","src":"33973:24:50","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34011:16:50","parameters":{"id":25055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25050,"mutability":"mutable","name":"objectKey","nameLocation":"34044:9:50","nodeType":"VariableDeclaration","scope":25059,"src":"34028:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25049,"name":"string","nodeType":"ElementaryTypeName","src":"34028:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25052,"mutability":"mutable","name":"valueKey","nameLocation":"34071:8:50","nodeType":"VariableDeclaration","scope":25059,"src":"34055:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25051,"name":"string","nodeType":"ElementaryTypeName","src":"34055:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25054,"mutability":"mutable","name":"value","nameLocation":"34089:5:50","nodeType":"VariableDeclaration","scope":25059,"src":"34081:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34081:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34027:68:50"},"returnParameters":{"id":25058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25057,"mutability":"mutable","name":"json","nameLocation":"34144:4:50","nodeType":"VariableDeclaration","scope":25059,"src":"34130:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25056,"name":"string","nodeType":"ElementaryTypeName","src":"34130:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34129:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25072,"nodeType":"FunctionDefinition","src":"34185:160:50","nodes":[],"documentation":{"id":25060,"nodeType":"StructuredDocumentation","src":"34156:24:50","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34194:16:50","parameters":{"id":25068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25062,"mutability":"mutable","name":"objectKey","nameLocation":"34227:9:50","nodeType":"VariableDeclaration","scope":25072,"src":"34211:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25061,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25064,"mutability":"mutable","name":"valueKey","nameLocation":"34254:8:50","nodeType":"VariableDeclaration","scope":25072,"src":"34238:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25063,"name":"string","nodeType":"ElementaryTypeName","src":"34238:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25067,"mutability":"mutable","name":"values","nameLocation":"34283:6:50","nodeType":"VariableDeclaration","scope":25072,"src":"34264:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34264:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":25066,"nodeType":"ArrayTypeName","src":"34264:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34210:80:50"},"returnParameters":{"id":25071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25070,"mutability":"mutable","name":"json","nameLocation":"34339:4:50","nodeType":"VariableDeclaration","scope":25072,"src":"34325:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25069,"name":"string","nodeType":"ElementaryTypeName","src":"34325:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34324:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25084,"nodeType":"FunctionDefinition","src":"34380:153:50","nodes":[],"documentation":{"id":25073,"nodeType":"StructuredDocumentation","src":"34351:24:50","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34389:14:50","parameters":{"id":25080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25075,"mutability":"mutable","name":"objectKey","nameLocation":"34420:9:50","nodeType":"VariableDeclaration","scope":25084,"src":"34404:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25074,"name":"string","nodeType":"ElementaryTypeName","src":"34404:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25077,"mutability":"mutable","name":"valueKey","nameLocation":"34447:8:50","nodeType":"VariableDeclaration","scope":25084,"src":"34431:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25076,"name":"string","nodeType":"ElementaryTypeName","src":"34431:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25079,"mutability":"mutable","name":"value","nameLocation":"34472:5:50","nodeType":"VariableDeclaration","scope":25084,"src":"34457:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":25078,"name":"bytes","nodeType":"ElementaryTypeName","src":"34457:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34403:75:50"},"returnParameters":{"id":25083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25082,"mutability":"mutable","name":"json","nameLocation":"34527:4:50","nodeType":"VariableDeclaration","scope":25084,"src":"34513:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25081,"name":"string","nodeType":"ElementaryTypeName","src":"34513:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34512:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25097,"nodeType":"FunctionDefinition","src":"34568:156:50","nodes":[],"documentation":{"id":25085,"nodeType":"StructuredDocumentation","src":"34539:24:50","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34577:14:50","parameters":{"id":25093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25087,"mutability":"mutable","name":"objectKey","nameLocation":"34608:9:50","nodeType":"VariableDeclaration","scope":25097,"src":"34592:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25086,"name":"string","nodeType":"ElementaryTypeName","src":"34592:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25089,"mutability":"mutable","name":"valueKey","nameLocation":"34635:8:50","nodeType":"VariableDeclaration","scope":25097,"src":"34619:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25088,"name":"string","nodeType":"ElementaryTypeName","src":"34619:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25092,"mutability":"mutable","name":"values","nameLocation":"34662:6:50","nodeType":"VariableDeclaration","scope":25097,"src":"34645:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":25090,"name":"bytes","nodeType":"ElementaryTypeName","src":"34645:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":25091,"nodeType":"ArrayTypeName","src":"34645:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"34591:78:50"},"returnParameters":{"id":25096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25095,"mutability":"mutable","name":"json","nameLocation":"34718:4:50","nodeType":"VariableDeclaration","scope":25097,"src":"34704:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25094,"name":"string","nodeType":"ElementaryTypeName","src":"34704:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34703:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25109,"nodeType":"FunctionDefinition","src":"34759:143:50","nodes":[],"documentation":{"id":25098,"nodeType":"StructuredDocumentation","src":"34730:24:50","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34768:12:50","parameters":{"id":25105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25100,"mutability":"mutable","name":"objectKey","nameLocation":"34797:9:50","nodeType":"VariableDeclaration","scope":25109,"src":"34781:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25099,"name":"string","nodeType":"ElementaryTypeName","src":"34781:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25102,"mutability":"mutable","name":"valueKey","nameLocation":"34824:8:50","nodeType":"VariableDeclaration","scope":25109,"src":"34808:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25101,"name":"string","nodeType":"ElementaryTypeName","src":"34808:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25104,"mutability":"mutable","name":"value","nameLocation":"34841:5:50","nodeType":"VariableDeclaration","scope":25109,"src":"34834:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25103,"name":"int256","nodeType":"ElementaryTypeName","src":"34834:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34780:67:50"},"returnParameters":{"id":25108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25107,"mutability":"mutable","name":"json","nameLocation":"34896:4:50","nodeType":"VariableDeclaration","scope":25109,"src":"34882:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25106,"name":"string","nodeType":"ElementaryTypeName","src":"34882:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34881:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25122,"nodeType":"FunctionDefinition","src":"34937:155:50","nodes":[],"documentation":{"id":25110,"nodeType":"StructuredDocumentation","src":"34908:24:50","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34946:12:50","parameters":{"id":25118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25112,"mutability":"mutable","name":"objectKey","nameLocation":"34975:9:50","nodeType":"VariableDeclaration","scope":25122,"src":"34959:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25111,"name":"string","nodeType":"ElementaryTypeName","src":"34959:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25114,"mutability":"mutable","name":"valueKey","nameLocation":"35002:8:50","nodeType":"VariableDeclaration","scope":25122,"src":"34986:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25113,"name":"string","nodeType":"ElementaryTypeName","src":"34986:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25117,"mutability":"mutable","name":"values","nameLocation":"35030:6:50","nodeType":"VariableDeclaration","scope":25122,"src":"35012:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":25115,"name":"int256","nodeType":"ElementaryTypeName","src":"35012:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":25116,"nodeType":"ArrayTypeName","src":"35012:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"34958:79:50"},"returnParameters":{"id":25121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25120,"mutability":"mutable","name":"json","nameLocation":"35086:4:50","nodeType":"VariableDeclaration","scope":25122,"src":"35072:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25119,"name":"string","nodeType":"ElementaryTypeName","src":"35072:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35071:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25132,"nodeType":"FunctionDefinition","src":"35289:111:50","nodes":[],"documentation":{"id":25123,"nodeType":"StructuredDocumentation","src":"35098:186:50","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"35298:13:50","parameters":{"id":25128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25125,"mutability":"mutable","name":"objectKey","nameLocation":"35328:9:50","nodeType":"VariableDeclaration","scope":25132,"src":"35312:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25124,"name":"string","nodeType":"ElementaryTypeName","src":"35312:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25127,"mutability":"mutable","name":"value","nameLocation":"35355:5:50","nodeType":"VariableDeclaration","scope":25132,"src":"35339:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25126,"name":"string","nodeType":"ElementaryTypeName","src":"35339:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35311:50:50"},"returnParameters":{"id":25131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25130,"mutability":"mutable","name":"json","nameLocation":"35394:4:50","nodeType":"VariableDeclaration","scope":25132,"src":"35380:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25129,"name":"string","nodeType":"ElementaryTypeName","src":"35380:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35379:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25144,"nodeType":"FunctionDefinition","src":"35435:155:50","nodes":[],"documentation":{"id":25133,"nodeType":"StructuredDocumentation","src":"35406:24:50","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35444:15:50","parameters":{"id":25140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25135,"mutability":"mutable","name":"objectKey","nameLocation":"35476:9:50","nodeType":"VariableDeclaration","scope":25144,"src":"35460:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25134,"name":"string","nodeType":"ElementaryTypeName","src":"35460:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25137,"mutability":"mutable","name":"valueKey","nameLocation":"35503:8:50","nodeType":"VariableDeclaration","scope":25144,"src":"35487:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25136,"name":"string","nodeType":"ElementaryTypeName","src":"35487:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25139,"mutability":"mutable","name":"value","nameLocation":"35529:5:50","nodeType":"VariableDeclaration","scope":25144,"src":"35513:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25138,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35459:76:50"},"returnParameters":{"id":25143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25142,"mutability":"mutable","name":"json","nameLocation":"35584:4:50","nodeType":"VariableDeclaration","scope":25144,"src":"35570:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25141,"name":"string","nodeType":"ElementaryTypeName","src":"35570:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35569:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25157,"nodeType":"FunctionDefinition","src":"35625:158:50","nodes":[],"documentation":{"id":25145,"nodeType":"StructuredDocumentation","src":"35596:24:50","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35634:15:50","parameters":{"id":25153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25147,"mutability":"mutable","name":"objectKey","nameLocation":"35666:9:50","nodeType":"VariableDeclaration","scope":25157,"src":"35650:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25146,"name":"string","nodeType":"ElementaryTypeName","src":"35650:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25149,"mutability":"mutable","name":"valueKey","nameLocation":"35693:8:50","nodeType":"VariableDeclaration","scope":25157,"src":"35677:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25148,"name":"string","nodeType":"ElementaryTypeName","src":"35677:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25152,"mutability":"mutable","name":"values","nameLocation":"35721:6:50","nodeType":"VariableDeclaration","scope":25157,"src":"35703:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":25150,"name":"string","nodeType":"ElementaryTypeName","src":"35703:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":25151,"nodeType":"ArrayTypeName","src":"35703:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35649:79:50"},"returnParameters":{"id":25156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25155,"mutability":"mutable","name":"json","nameLocation":"35777:4:50","nodeType":"VariableDeclaration","scope":25157,"src":"35763:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25154,"name":"string","nodeType":"ElementaryTypeName","src":"35763:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35762:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25169,"nodeType":"FunctionDefinition","src":"35818:150:50","nodes":[],"documentation":{"id":25158,"nodeType":"StructuredDocumentation","src":"35789:24:50","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"35827:18:50","parameters":{"id":25165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25160,"mutability":"mutable","name":"objectKey","nameLocation":"35862:9:50","nodeType":"VariableDeclaration","scope":25169,"src":"35846:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25159,"name":"string","nodeType":"ElementaryTypeName","src":"35846:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25162,"mutability":"mutable","name":"valueKey","nameLocation":"35889:8:50","nodeType":"VariableDeclaration","scope":25169,"src":"35873:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25161,"name":"string","nodeType":"ElementaryTypeName","src":"35873:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25164,"mutability":"mutable","name":"value","nameLocation":"35907:5:50","nodeType":"VariableDeclaration","scope":25169,"src":"35899:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25163,"name":"uint256","nodeType":"ElementaryTypeName","src":"35899:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35845:68:50"},"returnParameters":{"id":25168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25167,"mutability":"mutable","name":"json","nameLocation":"35962:4:50","nodeType":"VariableDeclaration","scope":25169,"src":"35948:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25166,"name":"string","nodeType":"ElementaryTypeName","src":"35948:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35947:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25181,"nodeType":"FunctionDefinition","src":"36003:145:50","nodes":[],"documentation":{"id":25170,"nodeType":"StructuredDocumentation","src":"35974:24:50","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36012:13:50","parameters":{"id":25177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25172,"mutability":"mutable","name":"objectKey","nameLocation":"36042:9:50","nodeType":"VariableDeclaration","scope":25181,"src":"36026:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25171,"name":"string","nodeType":"ElementaryTypeName","src":"36026:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25174,"mutability":"mutable","name":"valueKey","nameLocation":"36069:8:50","nodeType":"VariableDeclaration","scope":25181,"src":"36053:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25173,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25176,"mutability":"mutable","name":"value","nameLocation":"36087:5:50","nodeType":"VariableDeclaration","scope":25181,"src":"36079:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25175,"name":"uint256","nodeType":"ElementaryTypeName","src":"36079:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36025:68:50"},"returnParameters":{"id":25180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25179,"mutability":"mutable","name":"json","nameLocation":"36142:4:50","nodeType":"VariableDeclaration","scope":25181,"src":"36128:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25178,"name":"string","nodeType":"ElementaryTypeName","src":"36128:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36127:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25194,"nodeType":"FunctionDefinition","src":"36183:157:50","nodes":[],"documentation":{"id":25182,"nodeType":"StructuredDocumentation","src":"36154:24:50","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36192:13:50","parameters":{"id":25190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25184,"mutability":"mutable","name":"objectKey","nameLocation":"36222:9:50","nodeType":"VariableDeclaration","scope":25194,"src":"36206:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25183,"name":"string","nodeType":"ElementaryTypeName","src":"36206:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25186,"mutability":"mutable","name":"valueKey","nameLocation":"36249:8:50","nodeType":"VariableDeclaration","scope":25194,"src":"36233:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25185,"name":"string","nodeType":"ElementaryTypeName","src":"36233:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25189,"mutability":"mutable","name":"values","nameLocation":"36278:6:50","nodeType":"VariableDeclaration","scope":25194,"src":"36259:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25187,"name":"uint256","nodeType":"ElementaryTypeName","src":"36259:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":25188,"nodeType":"ArrayTypeName","src":"36259:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"36205:80:50"},"returnParameters":{"id":25193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25192,"mutability":"mutable","name":"json","nameLocation":"36334:4:50","nodeType":"VariableDeclaration","scope":25194,"src":"36320:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25191,"name":"string","nodeType":"ElementaryTypeName","src":"36320:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36319:20:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25202,"nodeType":"FunctionDefinition","src":"36440:72:50","nodes":[],"documentation":{"id":25195,"nodeType":"StructuredDocumentation","src":"36346:89:50","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36449:9:50","parameters":{"id":25200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25197,"mutability":"mutable","name":"json","nameLocation":"36475:4:50","nodeType":"VariableDeclaration","scope":25202,"src":"36459:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25196,"name":"string","nodeType":"ElementaryTypeName","src":"36459:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25199,"mutability":"mutable","name":"path","nameLocation":"36497:4:50","nodeType":"VariableDeclaration","scope":25202,"src":"36481:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25198,"name":"string","nodeType":"ElementaryTypeName","src":"36481:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36458:44:50"},"returnParameters":{"id":25201,"nodeType":"ParameterList","parameters":[],"src":"36511:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25212,"nodeType":"FunctionDefinition","src":"36738:98:50","nodes":[],"documentation":{"id":25203,"nodeType":"StructuredDocumentation","src":"36518:215:50","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36747:9:50","parameters":{"id":25210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25205,"mutability":"mutable","name":"json","nameLocation":"36773:4:50","nodeType":"VariableDeclaration","scope":25212,"src":"36757:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25204,"name":"string","nodeType":"ElementaryTypeName","src":"36757:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25207,"mutability":"mutable","name":"path","nameLocation":"36795:4:50","nodeType":"VariableDeclaration","scope":25212,"src":"36779:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25206,"name":"string","nodeType":"ElementaryTypeName","src":"36779:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25209,"mutability":"mutable","name":"valueKey","nameLocation":"36817:8:50","nodeType":"VariableDeclaration","scope":25212,"src":"36801:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25208,"name":"string","nodeType":"ElementaryTypeName","src":"36801:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36756:70:50"},"returnParameters":{"id":25211,"nodeType":"ParameterList","parameters":[],"src":"36835:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25216,"nodeType":"FunctionDefinition","src":"37375:30:50","nodes":[],"documentation":{"id":25213,"nodeType":"StructuredDocumentation","src":"36878:492:50","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37384:9:50","parameters":{"id":25214,"nodeType":"ParameterList","parameters":[],"src":"37393:2:50"},"returnParameters":{"id":25215,"nodeType":"ParameterList","parameters":[],"src":"37404:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25222,"nodeType":"FunctionDefinition","src":"37575:44:50","nodes":[],"documentation":{"id":25217,"nodeType":"StructuredDocumentation","src":"37411:159:50","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37584:9:50","parameters":{"id":25220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25219,"mutability":"mutable","name":"signer","nameLocation":"37602:6:50","nodeType":"VariableDeclaration","scope":25222,"src":"37594:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25218,"name":"address","nodeType":"ElementaryTypeName","src":"37594:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37593:16:50"},"returnParameters":{"id":25221,"nodeType":"ParameterList","parameters":[],"src":"37618:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25228,"nodeType":"FunctionDefinition","src":"37793:48:50","nodes":[],"documentation":{"id":25223,"nodeType":"StructuredDocumentation","src":"37625:163:50","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37802:9:50","parameters":{"id":25226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25225,"mutability":"mutable","name":"privateKey","nameLocation":"37820:10:50","nodeType":"VariableDeclaration","scope":25228,"src":"37812:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25224,"name":"uint256","nodeType":"ElementaryTypeName","src":"37812:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37811:20:50"},"returnParameters":{"id":25227,"nodeType":"ParameterList","parameters":[],"src":"37840:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25232,"nodeType":"FunctionDefinition","src":"38351:35:50","nodes":[],"documentation":{"id":25229,"nodeType":"StructuredDocumentation","src":"37847:499:50","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38360:14:50","parameters":{"id":25230,"nodeType":"ParameterList","parameters":[],"src":"38374:2:50"},"returnParameters":{"id":25231,"nodeType":"ParameterList","parameters":[],"src":"38385:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25238,"nodeType":"FunctionDefinition","src":"38548:49:50","nodes":[],"documentation":{"id":25233,"nodeType":"StructuredDocumentation","src":"38392:151:50","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38557:14:50","parameters":{"id":25236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25235,"mutability":"mutable","name":"signer","nameLocation":"38580:6:50","nodeType":"VariableDeclaration","scope":25238,"src":"38572:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25234,"name":"address","nodeType":"ElementaryTypeName","src":"38572:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38571:16:50"},"returnParameters":{"id":25237,"nodeType":"ParameterList","parameters":[],"src":"38596:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25244,"nodeType":"FunctionDefinition","src":"38763:53:50","nodes":[],"documentation":{"id":25239,"nodeType":"StructuredDocumentation","src":"38603:155:50","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38772:14:50","parameters":{"id":25242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25241,"mutability":"mutable","name":"privateKey","nameLocation":"38795:10:50","nodeType":"VariableDeclaration","scope":25244,"src":"38787:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25240,"name":"uint256","nodeType":"ElementaryTypeName","src":"38787:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38786:20:50"},"returnParameters":{"id":25243,"nodeType":"ParameterList","parameters":[],"src":"38815:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25248,"nodeType":"FunctionDefinition","src":"38869:34:50","nodes":[],"documentation":{"id":25245,"nodeType":"StructuredDocumentation","src":"38822:42:50","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"38878:13:50","parameters":{"id":25246,"nodeType":"ParameterList","parameters":[],"src":"38891:2:50"},"returnParameters":{"id":25247,"nodeType":"ParameterList","parameters":[],"src":"38902:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":25258,"nodeType":"FunctionDefinition","src":"39152:93:50","nodes":[],"documentation":{"id":25249,"nodeType":"StructuredDocumentation","src":"38942:205:50","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"39161:7:50","parameters":{"id":25254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25251,"mutability":"mutable","name":"input","nameLocation":"39185:5:50","nodeType":"VariableDeclaration","scope":25258,"src":"39169:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25250,"name":"string","nodeType":"ElementaryTypeName","src":"39169:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25253,"mutability":"mutable","name":"key","nameLocation":"39208:3:50","nodeType":"VariableDeclaration","scope":25258,"src":"39192:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25252,"name":"string","nodeType":"ElementaryTypeName","src":"39192:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39168:44:50"},"returnParameters":{"id":25257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":25258,"src":"39236:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25255,"name":"uint256","nodeType":"ElementaryTypeName","src":"39236:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39235:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25266,"nodeType":"FunctionDefinition","src":"39304:100:50","nodes":[],"documentation":{"id":25259,"nodeType":"StructuredDocumentation","src":"39251:48:50","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"39313:12:50","parameters":{"id":25262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25261,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39342:16:50","nodeType":"VariableDeclaration","scope":25266,"src":"39326:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25260,"name":"string","nodeType":"ElementaryTypeName","src":"39326:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39325:34:50"},"returnParameters":{"id":25265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25264,"mutability":"mutable","name":"parsedValue","nameLocation":"39391:11:50","nodeType":"VariableDeclaration","scope":25266,"src":"39383:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25263,"name":"address","nodeType":"ElementaryTypeName","src":"39383:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39382:21:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25274,"nodeType":"FunctionDefinition","src":"39459:94:50","nodes":[],"documentation":{"id":25267,"nodeType":"StructuredDocumentation","src":"39410:44:50","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"39468:9:50","parameters":{"id":25270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25269,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39494:16:50","nodeType":"VariableDeclaration","scope":25274,"src":"39478:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25268,"name":"string","nodeType":"ElementaryTypeName","src":"39478:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39477:34:50"},"returnParameters":{"id":25273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25272,"mutability":"mutable","name":"parsedValue","nameLocation":"39540:11:50","nodeType":"VariableDeclaration","scope":25274,"src":"39535:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25271,"name":"bool","nodeType":"ElementaryTypeName","src":"39535:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39534:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25282,"nodeType":"FunctionDefinition","src":"39607:103:50","nodes":[],"documentation":{"id":25275,"nodeType":"StructuredDocumentation","src":"39559:43:50","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"39616:10:50","parameters":{"id":25278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25277,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39643:16:50","nodeType":"VariableDeclaration","scope":25282,"src":"39627:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25276,"name":"string","nodeType":"ElementaryTypeName","src":"39627:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39626:34:50"},"returnParameters":{"id":25281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25280,"mutability":"mutable","name":"parsedValue","nameLocation":"39697:11:50","nodeType":"VariableDeclaration","scope":25282,"src":"39684:24:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":25279,"name":"bytes","nodeType":"ElementaryTypeName","src":"39684:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39683:26:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25290,"nodeType":"FunctionDefinition","src":"39768:100:50","nodes":[],"documentation":{"id":25283,"nodeType":"StructuredDocumentation","src":"39716:47:50","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"39777:12:50","parameters":{"id":25286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25285,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39806:16:50","nodeType":"VariableDeclaration","scope":25290,"src":"39790:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25284,"name":"string","nodeType":"ElementaryTypeName","src":"39790:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39789:34:50"},"returnParameters":{"id":25289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25288,"mutability":"mutable","name":"parsedValue","nameLocation":"39855:11:50","nodeType":"VariableDeclaration","scope":25290,"src":"39847:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39847:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39846:21:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25298,"nodeType":"FunctionDefinition","src":"39925:95:50","nodes":[],"documentation":{"id":25291,"nodeType":"StructuredDocumentation","src":"39874:46:50","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"39934:8:50","parameters":{"id":25294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25293,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39959:16:50","nodeType":"VariableDeclaration","scope":25298,"src":"39943:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25292,"name":"string","nodeType":"ElementaryTypeName","src":"39943:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39942:34:50"},"returnParameters":{"id":25297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25296,"mutability":"mutable","name":"parsedValue","nameLocation":"40007:11:50","nodeType":"VariableDeclaration","scope":25298,"src":"40000:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25295,"name":"int256","nodeType":"ElementaryTypeName","src":"40000:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39999:20:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25306,"nodeType":"FunctionDefinition","src":"40078:97:50","nodes":[],"documentation":{"id":25299,"nodeType":"StructuredDocumentation","src":"40026:47:50","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"40087:9:50","parameters":{"id":25302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25301,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40113:16:50","nodeType":"VariableDeclaration","scope":25306,"src":"40097:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25300,"name":"string","nodeType":"ElementaryTypeName","src":"40097:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40096:34:50"},"returnParameters":{"id":25305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25304,"mutability":"mutable","name":"parsedValue","nameLocation":"40162:11:50","nodeType":"VariableDeclaration","scope":25306,"src":"40154:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25303,"name":"uint256","nodeType":"ElementaryTypeName","src":"40154:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40153:21:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25318,"nodeType":"FunctionDefinition","src":"40253:151:50","nodes":[],"documentation":{"id":25307,"nodeType":"StructuredDocumentation","src":"40181:67:50","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"40262:7:50","parameters":{"id":25314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25309,"mutability":"mutable","name":"input","nameLocation":"40286:5:50","nodeType":"VariableDeclaration","scope":25318,"src":"40270:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25308,"name":"string","nodeType":"ElementaryTypeName","src":"40270:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25311,"mutability":"mutable","name":"from","nameLocation":"40309:4:50","nodeType":"VariableDeclaration","scope":25318,"src":"40293:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25310,"name":"string","nodeType":"ElementaryTypeName","src":"40293:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25313,"mutability":"mutable","name":"to","nameLocation":"40331:2:50","nodeType":"VariableDeclaration","scope":25318,"src":"40315:18:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25312,"name":"string","nodeType":"ElementaryTypeName","src":"40315:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40269:65:50"},"returnParameters":{"id":25317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25316,"mutability":"mutable","name":"output","nameLocation":"40396:6:50","nodeType":"VariableDeclaration","scope":25318,"src":"40382:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25315,"name":"string","nodeType":"ElementaryTypeName","src":"40382:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40381:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25329,"nodeType":"FunctionDefinition","src":"40497:113:50","nodes":[],"documentation":{"id":25319,"nodeType":"StructuredDocumentation","src":"40410:82:50","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"40506:5:50","parameters":{"id":25324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25321,"mutability":"mutable","name":"input","nameLocation":"40528:5:50","nodeType":"VariableDeclaration","scope":25329,"src":"40512:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25320,"name":"string","nodeType":"ElementaryTypeName","src":"40512:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25323,"mutability":"mutable","name":"delimiter","nameLocation":"40551:9:50","nodeType":"VariableDeclaration","scope":25329,"src":"40535:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25322,"name":"string","nodeType":"ElementaryTypeName","src":"40535:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40511:50:50"},"returnParameters":{"id":25328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25327,"mutability":"mutable","name":"outputs","nameLocation":"40601:7:50","nodeType":"VariableDeclaration","scope":25329,"src":"40585:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":25325,"name":"string","nodeType":"ElementaryTypeName","src":"40585:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":25326,"nodeType":"ArrayTypeName","src":"40585:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40584:25:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25337,"nodeType":"FunctionDefinition","src":"40672:89:50","nodes":[],"documentation":{"id":25330,"nodeType":"StructuredDocumentation","src":"40616:51:50","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"40681:11:50","parameters":{"id":25333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25332,"mutability":"mutable","name":"input","nameLocation":"40709:5:50","nodeType":"VariableDeclaration","scope":25337,"src":"40693:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25331,"name":"string","nodeType":"ElementaryTypeName","src":"40693:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40692:23:50"},"returnParameters":{"id":25336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25335,"mutability":"mutable","name":"output","nameLocation":"40753:6:50","nodeType":"VariableDeclaration","scope":25337,"src":"40739:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25334,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40738:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25345,"nodeType":"FunctionDefinition","src":"40815:88:50","nodes":[],"documentation":{"id":25338,"nodeType":"StructuredDocumentation","src":"40767:43:50","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40824:8:50","parameters":{"id":25341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25340,"mutability":"mutable","name":"value","nameLocation":"40841:5:50","nodeType":"VariableDeclaration","scope":25345,"src":"40833:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25339,"name":"address","nodeType":"ElementaryTypeName","src":"40833:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40832:15:50"},"returnParameters":{"id":25344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25343,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40885:16:50","nodeType":"VariableDeclaration","scope":25345,"src":"40871:30:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25342,"name":"string","nodeType":"ElementaryTypeName","src":"40871:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40870:32:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25353,"nodeType":"FunctionDefinition","src":"40957:95:50","nodes":[],"documentation":{"id":25346,"nodeType":"StructuredDocumentation","src":"40909:43:50","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40966:8:50","parameters":{"id":25349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25348,"mutability":"mutable","name":"value","nameLocation":"40990:5:50","nodeType":"VariableDeclaration","scope":25353,"src":"40975:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":25347,"name":"bytes","nodeType":"ElementaryTypeName","src":"40975:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40974:22:50"},"returnParameters":{"id":25352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25351,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41034:16:50","nodeType":"VariableDeclaration","scope":25353,"src":"41020:30:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25350,"name":"string","nodeType":"ElementaryTypeName","src":"41020:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41019:32:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25361,"nodeType":"FunctionDefinition","src":"41106:88:50","nodes":[],"documentation":{"id":25354,"nodeType":"StructuredDocumentation","src":"41058:43:50","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41115:8:50","parameters":{"id":25357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25356,"mutability":"mutable","name":"value","nameLocation":"41132:5:50","nodeType":"VariableDeclaration","scope":25361,"src":"41124:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"41124:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"41123:15:50"},"returnParameters":{"id":25360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25359,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41176:16:50","nodeType":"VariableDeclaration","scope":25361,"src":"41162:30:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25358,"name":"string","nodeType":"ElementaryTypeName","src":"41162:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41161:32:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25369,"nodeType":"FunctionDefinition","src":"41248:85:50","nodes":[],"documentation":{"id":25362,"nodeType":"StructuredDocumentation","src":"41200:43:50","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41257:8:50","parameters":{"id":25365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25364,"mutability":"mutable","name":"value","nameLocation":"41271:5:50","nodeType":"VariableDeclaration","scope":25369,"src":"41266:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25363,"name":"bool","nodeType":"ElementaryTypeName","src":"41266:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41265:12:50"},"returnParameters":{"id":25368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25367,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41315:16:50","nodeType":"VariableDeclaration","scope":25369,"src":"41301:30:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25366,"name":"string","nodeType":"ElementaryTypeName","src":"41301:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41300:32:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25377,"nodeType":"FunctionDefinition","src":"41387:88:50","nodes":[],"documentation":{"id":25370,"nodeType":"StructuredDocumentation","src":"41339:43:50","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41396:8:50","parameters":{"id":25373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25372,"mutability":"mutable","name":"value","nameLocation":"41413:5:50","nodeType":"VariableDeclaration","scope":25377,"src":"41405:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25371,"name":"uint256","nodeType":"ElementaryTypeName","src":"41405:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41404:15:50"},"returnParameters":{"id":25376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25375,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41457:16:50","nodeType":"VariableDeclaration","scope":25377,"src":"41443:30:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25374,"name":"string","nodeType":"ElementaryTypeName","src":"41443:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41442:32:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25385,"nodeType":"FunctionDefinition","src":"41529:87:50","nodes":[],"documentation":{"id":25378,"nodeType":"StructuredDocumentation","src":"41481:43:50","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41538:8:50","parameters":{"id":25381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25380,"mutability":"mutable","name":"value","nameLocation":"41554:5:50","nodeType":"VariableDeclaration","scope":25385,"src":"41547:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25379,"name":"int256","nodeType":"ElementaryTypeName","src":"41547:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41546:14:50"},"returnParameters":{"id":25384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25383,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41598:16:50","nodeType":"VariableDeclaration","scope":25385,"src":"41584:30:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25382,"name":"string","nodeType":"ElementaryTypeName","src":"41584:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41583:32:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25393,"nodeType":"FunctionDefinition","src":"41678:89:50","nodes":[],"documentation":{"id":25386,"nodeType":"StructuredDocumentation","src":"41622:51:50","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"41687:11:50","parameters":{"id":25389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25388,"mutability":"mutable","name":"input","nameLocation":"41715:5:50","nodeType":"VariableDeclaration","scope":25393,"src":"41699:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25387,"name":"string","nodeType":"ElementaryTypeName","src":"41699:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41698:23:50"},"returnParameters":{"id":25392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25391,"mutability":"mutable","name":"output","nameLocation":"41759:6:50","nodeType":"VariableDeclaration","scope":25393,"src":"41745:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25390,"name":"string","nodeType":"ElementaryTypeName","src":"41745:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41744:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25401,"nodeType":"FunctionDefinition","src":"41850:82:50","nodes":[],"documentation":{"id":25394,"nodeType":"StructuredDocumentation","src":"41773:72:50","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"41859:4:50","parameters":{"id":25397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25396,"mutability":"mutable","name":"input","nameLocation":"41880:5:50","nodeType":"VariableDeclaration","scope":25401,"src":"41864:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25395,"name":"string","nodeType":"ElementaryTypeName","src":"41864:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41863:23:50"},"returnParameters":{"id":25400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25399,"mutability":"mutable","name":"output","nameLocation":"41924:6:50","nodeType":"VariableDeclaration","scope":25401,"src":"41910:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25398,"name":"string","nodeType":"ElementaryTypeName","src":"41910:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41909:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25413,"nodeType":"FunctionDefinition","src":"42127:113:50","nodes":[],"documentation":{"id":25402,"nodeType":"StructuredDocumentation","src":"41972:150:50","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42136:24:50","parameters":{"id":25411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25404,"mutability":"mutable","name":"left","nameLocation":"42169:4:50","nodeType":"VariableDeclaration","scope":25413,"src":"42161:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25403,"name":"uint256","nodeType":"ElementaryTypeName","src":"42161:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25406,"mutability":"mutable","name":"right","nameLocation":"42183:5:50","nodeType":"VariableDeclaration","scope":25413,"src":"42175:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25405,"name":"uint256","nodeType":"ElementaryTypeName","src":"42175:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25408,"mutability":"mutable","name":"maxDelta","nameLocation":"42198:8:50","nodeType":"VariableDeclaration","scope":25413,"src":"42190:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25407,"name":"uint256","nodeType":"ElementaryTypeName","src":"42190:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25410,"mutability":"mutable","name":"decimals","nameLocation":"42216:8:50","nodeType":"VariableDeclaration","scope":25413,"src":"42208:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25409,"name":"uint256","nodeType":"ElementaryTypeName","src":"42208:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42160:65:50"},"returnParameters":{"id":25412,"nodeType":"ParameterList","parameters":[],"src":"42239:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25427,"nodeType":"FunctionDefinition","src":"42455:182:50","nodes":[],"documentation":{"id":25414,"nodeType":"StructuredDocumentation","src":"42246:204:50","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42464:24:50","parameters":{"id":25425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25416,"mutability":"mutable","name":"left","nameLocation":"42506:4:50","nodeType":"VariableDeclaration","scope":25427,"src":"42498:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25415,"name":"uint256","nodeType":"ElementaryTypeName","src":"42498:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25418,"mutability":"mutable","name":"right","nameLocation":"42528:5:50","nodeType":"VariableDeclaration","scope":25427,"src":"42520:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25417,"name":"uint256","nodeType":"ElementaryTypeName","src":"42520:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25420,"mutability":"mutable","name":"maxDelta","nameLocation":"42551:8:50","nodeType":"VariableDeclaration","scope":25427,"src":"42543:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25419,"name":"uint256","nodeType":"ElementaryTypeName","src":"42543:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25422,"mutability":"mutable","name":"decimals","nameLocation":"42577:8:50","nodeType":"VariableDeclaration","scope":25427,"src":"42569:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25421,"name":"uint256","nodeType":"ElementaryTypeName","src":"42569:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25424,"mutability":"mutable","name":"error","nameLocation":"42611:5:50","nodeType":"VariableDeclaration","scope":25427,"src":"42595:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25423,"name":"string","nodeType":"ElementaryTypeName","src":"42595:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42488:134:50"},"returnParameters":{"id":25426,"nodeType":"ParameterList","parameters":[],"src":"42636:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25439,"nodeType":"FunctionDefinition","src":"42797:111:50","nodes":[],"documentation":{"id":25428,"nodeType":"StructuredDocumentation","src":"42643:149:50","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42806:24:50","parameters":{"id":25437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25430,"mutability":"mutable","name":"left","nameLocation":"42838:4:50","nodeType":"VariableDeclaration","scope":25439,"src":"42831:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25429,"name":"int256","nodeType":"ElementaryTypeName","src":"42831:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25432,"mutability":"mutable","name":"right","nameLocation":"42851:5:50","nodeType":"VariableDeclaration","scope":25439,"src":"42844:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25431,"name":"int256","nodeType":"ElementaryTypeName","src":"42844:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25434,"mutability":"mutable","name":"maxDelta","nameLocation":"42866:8:50","nodeType":"VariableDeclaration","scope":25439,"src":"42858:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25433,"name":"uint256","nodeType":"ElementaryTypeName","src":"42858:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25436,"mutability":"mutable","name":"decimals","nameLocation":"42884:8:50","nodeType":"VariableDeclaration","scope":25439,"src":"42876:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25435,"name":"uint256","nodeType":"ElementaryTypeName","src":"42876:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42830:63:50"},"returnParameters":{"id":25438,"nodeType":"ParameterList","parameters":[],"src":"42907:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25453,"nodeType":"FunctionDefinition","src":"43122:180:50","nodes":[],"documentation":{"id":25440,"nodeType":"StructuredDocumentation","src":"42914:203:50","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"43131:24:50","parameters":{"id":25451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25442,"mutability":"mutable","name":"left","nameLocation":"43172:4:50","nodeType":"VariableDeclaration","scope":25453,"src":"43165:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25441,"name":"int256","nodeType":"ElementaryTypeName","src":"43165:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25444,"mutability":"mutable","name":"right","nameLocation":"43193:5:50","nodeType":"VariableDeclaration","scope":25453,"src":"43186:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25443,"name":"int256","nodeType":"ElementaryTypeName","src":"43186:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25446,"mutability":"mutable","name":"maxDelta","nameLocation":"43216:8:50","nodeType":"VariableDeclaration","scope":25453,"src":"43208:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25445,"name":"uint256","nodeType":"ElementaryTypeName","src":"43208:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25448,"mutability":"mutable","name":"decimals","nameLocation":"43242:8:50","nodeType":"VariableDeclaration","scope":25453,"src":"43234:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25447,"name":"uint256","nodeType":"ElementaryTypeName","src":"43234:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25450,"mutability":"mutable","name":"error","nameLocation":"43276:5:50","nodeType":"VariableDeclaration","scope":25453,"src":"43260:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25449,"name":"string","nodeType":"ElementaryTypeName","src":"43260:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43155:132:50"},"returnParameters":{"id":25452,"nodeType":"ParameterList","parameters":[],"src":"43301:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25463,"nodeType":"FunctionDefinition","src":"43406:88:50","nodes":[],"documentation":{"id":25454,"nodeType":"StructuredDocumentation","src":"43308:93:50","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43415:17:50","parameters":{"id":25461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25456,"mutability":"mutable","name":"left","nameLocation":"43441:4:50","nodeType":"VariableDeclaration","scope":25463,"src":"43433:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25455,"name":"uint256","nodeType":"ElementaryTypeName","src":"43433:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25458,"mutability":"mutable","name":"right","nameLocation":"43455:5:50","nodeType":"VariableDeclaration","scope":25463,"src":"43447:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25457,"name":"uint256","nodeType":"ElementaryTypeName","src":"43447:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25460,"mutability":"mutable","name":"maxDelta","nameLocation":"43470:8:50","nodeType":"VariableDeclaration","scope":25463,"src":"43462:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25459,"name":"uint256","nodeType":"ElementaryTypeName","src":"43462:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43432:47:50"},"returnParameters":{"id":25462,"nodeType":"ParameterList","parameters":[],"src":"43493:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25475,"nodeType":"FunctionDefinition","src":"43660:111:50","nodes":[],"documentation":{"id":25464,"nodeType":"StructuredDocumentation","src":"43500:155:50","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43669:17:50","parameters":{"id":25473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25466,"mutability":"mutable","name":"left","nameLocation":"43695:4:50","nodeType":"VariableDeclaration","scope":25475,"src":"43687:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25465,"name":"uint256","nodeType":"ElementaryTypeName","src":"43687:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25468,"mutability":"mutable","name":"right","nameLocation":"43709:5:50","nodeType":"VariableDeclaration","scope":25475,"src":"43701:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25467,"name":"uint256","nodeType":"ElementaryTypeName","src":"43701:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25470,"mutability":"mutable","name":"maxDelta","nameLocation":"43724:8:50","nodeType":"VariableDeclaration","scope":25475,"src":"43716:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25469,"name":"uint256","nodeType":"ElementaryTypeName","src":"43716:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25472,"mutability":"mutable","name":"error","nameLocation":"43750:5:50","nodeType":"VariableDeclaration","scope":25475,"src":"43734:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25471,"name":"string","nodeType":"ElementaryTypeName","src":"43734:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43686:70:50"},"returnParameters":{"id":25474,"nodeType":"ParameterList","parameters":[],"src":"43770:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25485,"nodeType":"FunctionDefinition","src":"43874:86:50","nodes":[],"documentation":{"id":25476,"nodeType":"StructuredDocumentation","src":"43777:92:50","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43883:17:50","parameters":{"id":25483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25478,"mutability":"mutable","name":"left","nameLocation":"43908:4:50","nodeType":"VariableDeclaration","scope":25485,"src":"43901:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25477,"name":"int256","nodeType":"ElementaryTypeName","src":"43901:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25480,"mutability":"mutable","name":"right","nameLocation":"43921:5:50","nodeType":"VariableDeclaration","scope":25485,"src":"43914:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25479,"name":"int256","nodeType":"ElementaryTypeName","src":"43914:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25482,"mutability":"mutable","name":"maxDelta","nameLocation":"43936:8:50","nodeType":"VariableDeclaration","scope":25485,"src":"43928:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25481,"name":"uint256","nodeType":"ElementaryTypeName","src":"43928:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43900:45:50"},"returnParameters":{"id":25484,"nodeType":"ParameterList","parameters":[],"src":"43959:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25497,"nodeType":"FunctionDefinition","src":"44125:109:50","nodes":[],"documentation":{"id":25486,"nodeType":"StructuredDocumentation","src":"43966:154:50","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"44134:17:50","parameters":{"id":25495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25488,"mutability":"mutable","name":"left","nameLocation":"44159:4:50","nodeType":"VariableDeclaration","scope":25497,"src":"44152:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25487,"name":"int256","nodeType":"ElementaryTypeName","src":"44152:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25490,"mutability":"mutable","name":"right","nameLocation":"44172:5:50","nodeType":"VariableDeclaration","scope":25497,"src":"44165:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25489,"name":"int256","nodeType":"ElementaryTypeName","src":"44165:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25492,"mutability":"mutable","name":"maxDelta","nameLocation":"44187:8:50","nodeType":"VariableDeclaration","scope":25497,"src":"44179:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25491,"name":"uint256","nodeType":"ElementaryTypeName","src":"44179:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25494,"mutability":"mutable","name":"error","nameLocation":"44213:5:50","nodeType":"VariableDeclaration","scope":25497,"src":"44197:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25493,"name":"string","nodeType":"ElementaryTypeName","src":"44197:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44151:68:50"},"returnParameters":{"id":25496,"nodeType":"ParameterList","parameters":[],"src":"44233:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25509,"nodeType":"FunctionDefinition","src":"44505:136:50","nodes":[],"documentation":{"id":25498,"nodeType":"StructuredDocumentation","src":"44240:260:50","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44514:24:50","parameters":{"id":25507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25500,"mutability":"mutable","name":"left","nameLocation":"44547:4:50","nodeType":"VariableDeclaration","scope":25509,"src":"44539:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25499,"name":"uint256","nodeType":"ElementaryTypeName","src":"44539:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25502,"mutability":"mutable","name":"right","nameLocation":"44561:5:50","nodeType":"VariableDeclaration","scope":25509,"src":"44553:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25501,"name":"uint256","nodeType":"ElementaryTypeName","src":"44553:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25504,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"44576:15:50","nodeType":"VariableDeclaration","scope":25509,"src":"44568:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25503,"name":"uint256","nodeType":"ElementaryTypeName","src":"44568:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25506,"mutability":"mutable","name":"decimals","nameLocation":"44601:8:50","nodeType":"VariableDeclaration","scope":25509,"src":"44593:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25505,"name":"uint256","nodeType":"ElementaryTypeName","src":"44593:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44538:72:50"},"returnParameters":{"id":25508,"nodeType":"ParameterList","parameters":[],"src":"44640:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25523,"nodeType":"FunctionDefinition","src":"44966:189:50","nodes":[],"documentation":{"id":25510,"nodeType":"StructuredDocumentation","src":"44647:314:50","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44975:24:50","parameters":{"id":25521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25512,"mutability":"mutable","name":"left","nameLocation":"45017:4:50","nodeType":"VariableDeclaration","scope":25523,"src":"45009:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25511,"name":"uint256","nodeType":"ElementaryTypeName","src":"45009:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25514,"mutability":"mutable","name":"right","nameLocation":"45039:5:50","nodeType":"VariableDeclaration","scope":25523,"src":"45031:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25513,"name":"uint256","nodeType":"ElementaryTypeName","src":"45031:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25516,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45062:15:50","nodeType":"VariableDeclaration","scope":25523,"src":"45054:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25515,"name":"uint256","nodeType":"ElementaryTypeName","src":"45054:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25518,"mutability":"mutable","name":"decimals","nameLocation":"45095:8:50","nodeType":"VariableDeclaration","scope":25523,"src":"45087:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25517,"name":"uint256","nodeType":"ElementaryTypeName","src":"45087:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25520,"mutability":"mutable","name":"error","nameLocation":"45129:5:50","nodeType":"VariableDeclaration","scope":25523,"src":"45113:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25519,"name":"string","nodeType":"ElementaryTypeName","src":"45113:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44999:141:50"},"returnParameters":{"id":25522,"nodeType":"ParameterList","parameters":[],"src":"45154:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25535,"nodeType":"FunctionDefinition","src":"45425:134:50","nodes":[],"documentation":{"id":25524,"nodeType":"StructuredDocumentation","src":"45161:259:50","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45434:24:50","parameters":{"id":25533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25526,"mutability":"mutable","name":"left","nameLocation":"45466:4:50","nodeType":"VariableDeclaration","scope":25535,"src":"45459:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25525,"name":"int256","nodeType":"ElementaryTypeName","src":"45459:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25528,"mutability":"mutable","name":"right","nameLocation":"45479:5:50","nodeType":"VariableDeclaration","scope":25535,"src":"45472:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25527,"name":"int256","nodeType":"ElementaryTypeName","src":"45472:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25530,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45494:15:50","nodeType":"VariableDeclaration","scope":25535,"src":"45486:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25529,"name":"uint256","nodeType":"ElementaryTypeName","src":"45486:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25532,"mutability":"mutable","name":"decimals","nameLocation":"45519:8:50","nodeType":"VariableDeclaration","scope":25535,"src":"45511:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25531,"name":"uint256","nodeType":"ElementaryTypeName","src":"45511:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45458:70:50"},"returnParameters":{"id":25534,"nodeType":"ParameterList","parameters":[],"src":"45558:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25549,"nodeType":"FunctionDefinition","src":"45883:187:50","nodes":[],"documentation":{"id":25536,"nodeType":"StructuredDocumentation","src":"45565:313:50","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45892:24:50","parameters":{"id":25547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25538,"mutability":"mutable","name":"left","nameLocation":"45933:4:50","nodeType":"VariableDeclaration","scope":25549,"src":"45926:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25537,"name":"int256","nodeType":"ElementaryTypeName","src":"45926:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25540,"mutability":"mutable","name":"right","nameLocation":"45954:5:50","nodeType":"VariableDeclaration","scope":25549,"src":"45947:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25539,"name":"int256","nodeType":"ElementaryTypeName","src":"45947:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25542,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45977:15:50","nodeType":"VariableDeclaration","scope":25549,"src":"45969:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25541,"name":"uint256","nodeType":"ElementaryTypeName","src":"45969:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25544,"mutability":"mutable","name":"decimals","nameLocation":"46010:8:50","nodeType":"VariableDeclaration","scope":25549,"src":"46002:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25543,"name":"uint256","nodeType":"ElementaryTypeName","src":"46002:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25546,"mutability":"mutable","name":"error","nameLocation":"46044:5:50","nodeType":"VariableDeclaration","scope":25549,"src":"46028:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25545,"name":"string","nodeType":"ElementaryTypeName","src":"46028:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45916:139:50"},"returnParameters":{"id":25548,"nodeType":"ParameterList","parameters":[],"src":"46069:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25559,"nodeType":"FunctionDefinition","src":"46284:95:50","nodes":[],"documentation":{"id":25550,"nodeType":"StructuredDocumentation","src":"46076:203:50","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46293:17:50","parameters":{"id":25557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25552,"mutability":"mutable","name":"left","nameLocation":"46319:4:50","nodeType":"VariableDeclaration","scope":25559,"src":"46311:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25551,"name":"uint256","nodeType":"ElementaryTypeName","src":"46311:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25554,"mutability":"mutable","name":"right","nameLocation":"46333:5:50","nodeType":"VariableDeclaration","scope":25559,"src":"46325:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25553,"name":"uint256","nodeType":"ElementaryTypeName","src":"46325:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25556,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46348:15:50","nodeType":"VariableDeclaration","scope":25559,"src":"46340:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25555,"name":"uint256","nodeType":"ElementaryTypeName","src":"46340:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46310:54:50"},"returnParameters":{"id":25558,"nodeType":"ParameterList","parameters":[],"src":"46378:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25571,"nodeType":"FunctionDefinition","src":"46655:134:50","nodes":[],"documentation":{"id":25560,"nodeType":"StructuredDocumentation","src":"46385:265:50","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46664:17:50","parameters":{"id":25569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25562,"mutability":"mutable","name":"left","nameLocation":"46690:4:50","nodeType":"VariableDeclaration","scope":25571,"src":"46682:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25561,"name":"uint256","nodeType":"ElementaryTypeName","src":"46682:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25564,"mutability":"mutable","name":"right","nameLocation":"46704:5:50","nodeType":"VariableDeclaration","scope":25571,"src":"46696:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25563,"name":"uint256","nodeType":"ElementaryTypeName","src":"46696:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25566,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46719:15:50","nodeType":"VariableDeclaration","scope":25571,"src":"46711:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25565,"name":"uint256","nodeType":"ElementaryTypeName","src":"46711:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25568,"mutability":"mutable","name":"error","nameLocation":"46752:5:50","nodeType":"VariableDeclaration","scope":25571,"src":"46736:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25567,"name":"string","nodeType":"ElementaryTypeName","src":"46736:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46681:77:50"},"returnParameters":{"id":25570,"nodeType":"ParameterList","parameters":[],"src":"46788:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25581,"nodeType":"FunctionDefinition","src":"47002:93:50","nodes":[],"documentation":{"id":25572,"nodeType":"StructuredDocumentation","src":"46795:202:50","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47011:17:50","parameters":{"id":25579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25574,"mutability":"mutable","name":"left","nameLocation":"47036:4:50","nodeType":"VariableDeclaration","scope":25581,"src":"47029:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25573,"name":"int256","nodeType":"ElementaryTypeName","src":"47029:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25576,"mutability":"mutable","name":"right","nameLocation":"47049:5:50","nodeType":"VariableDeclaration","scope":25581,"src":"47042:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25575,"name":"int256","nodeType":"ElementaryTypeName","src":"47042:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25578,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47064:15:50","nodeType":"VariableDeclaration","scope":25581,"src":"47056:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25577,"name":"uint256","nodeType":"ElementaryTypeName","src":"47056:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47028:52:50"},"returnParameters":{"id":25580,"nodeType":"ParameterList","parameters":[],"src":"47094:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25593,"nodeType":"FunctionDefinition","src":"47370:132:50","nodes":[],"documentation":{"id":25582,"nodeType":"StructuredDocumentation","src":"47101:264:50","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47379:17:50","parameters":{"id":25591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25584,"mutability":"mutable","name":"left","nameLocation":"47404:4:50","nodeType":"VariableDeclaration","scope":25593,"src":"47397:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25583,"name":"int256","nodeType":"ElementaryTypeName","src":"47397:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25586,"mutability":"mutable","name":"right","nameLocation":"47417:5:50","nodeType":"VariableDeclaration","scope":25593,"src":"47410:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25585,"name":"int256","nodeType":"ElementaryTypeName","src":"47410:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25588,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47432:15:50","nodeType":"VariableDeclaration","scope":25593,"src":"47424:23:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25587,"name":"uint256","nodeType":"ElementaryTypeName","src":"47424:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25590,"mutability":"mutable","name":"error","nameLocation":"47465:5:50","nodeType":"VariableDeclaration","scope":25593,"src":"47449:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25589,"name":"string","nodeType":"ElementaryTypeName","src":"47449:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47396:75:50"},"returnParameters":{"id":25592,"nodeType":"ParameterList","parameters":[],"src":"47501:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25603,"nodeType":"FunctionDefinition","src":"47611:86:50","nodes":[],"documentation":{"id":25594,"nodeType":"StructuredDocumentation","src":"47508:98:50","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47620:15:50","parameters":{"id":25601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25596,"mutability":"mutable","name":"left","nameLocation":"47644:4:50","nodeType":"VariableDeclaration","scope":25603,"src":"47636:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25595,"name":"uint256","nodeType":"ElementaryTypeName","src":"47636:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25598,"mutability":"mutable","name":"right","nameLocation":"47658:5:50","nodeType":"VariableDeclaration","scope":25603,"src":"47650:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25597,"name":"uint256","nodeType":"ElementaryTypeName","src":"47650:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25600,"mutability":"mutable","name":"decimals","nameLocation":"47673:8:50","nodeType":"VariableDeclaration","scope":25603,"src":"47665:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25599,"name":"uint256","nodeType":"ElementaryTypeName","src":"47665:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47635:47:50"},"returnParameters":{"id":25602,"nodeType":"ParameterList","parameters":[],"src":"47696:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25615,"nodeType":"FunctionDefinition","src":"47868:109:50","nodes":[],"documentation":{"id":25604,"nodeType":"StructuredDocumentation","src":"47703:160:50","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47877:15:50","parameters":{"id":25613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25606,"mutability":"mutable","name":"left","nameLocation":"47901:4:50","nodeType":"VariableDeclaration","scope":25615,"src":"47893:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25605,"name":"uint256","nodeType":"ElementaryTypeName","src":"47893:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25608,"mutability":"mutable","name":"right","nameLocation":"47915:5:50","nodeType":"VariableDeclaration","scope":25615,"src":"47907:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25607,"name":"uint256","nodeType":"ElementaryTypeName","src":"47907:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25610,"mutability":"mutable","name":"decimals","nameLocation":"47930:8:50","nodeType":"VariableDeclaration","scope":25615,"src":"47922:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25609,"name":"uint256","nodeType":"ElementaryTypeName","src":"47922:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25612,"mutability":"mutable","name":"error","nameLocation":"47956:5:50","nodeType":"VariableDeclaration","scope":25615,"src":"47940:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25611,"name":"string","nodeType":"ElementaryTypeName","src":"47940:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47892:70:50"},"returnParameters":{"id":25614,"nodeType":"ParameterList","parameters":[],"src":"47976:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25625,"nodeType":"FunctionDefinition","src":"48085:84:50","nodes":[],"documentation":{"id":25616,"nodeType":"StructuredDocumentation","src":"47983:97:50","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48094:15:50","parameters":{"id":25623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25618,"mutability":"mutable","name":"left","nameLocation":"48117:4:50","nodeType":"VariableDeclaration","scope":25625,"src":"48110:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25617,"name":"int256","nodeType":"ElementaryTypeName","src":"48110:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25620,"mutability":"mutable","name":"right","nameLocation":"48130:5:50","nodeType":"VariableDeclaration","scope":25625,"src":"48123:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25619,"name":"int256","nodeType":"ElementaryTypeName","src":"48123:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25622,"mutability":"mutable","name":"decimals","nameLocation":"48145:8:50","nodeType":"VariableDeclaration","scope":25625,"src":"48137:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25621,"name":"uint256","nodeType":"ElementaryTypeName","src":"48137:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48109:45:50"},"returnParameters":{"id":25624,"nodeType":"ParameterList","parameters":[],"src":"48168:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25637,"nodeType":"FunctionDefinition","src":"48339:107:50","nodes":[],"documentation":{"id":25626,"nodeType":"StructuredDocumentation","src":"48175:159:50","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48348:15:50","parameters":{"id":25635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25628,"mutability":"mutable","name":"left","nameLocation":"48371:4:50","nodeType":"VariableDeclaration","scope":25637,"src":"48364:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25627,"name":"int256","nodeType":"ElementaryTypeName","src":"48364:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25630,"mutability":"mutable","name":"right","nameLocation":"48384:5:50","nodeType":"VariableDeclaration","scope":25637,"src":"48377:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25629,"name":"int256","nodeType":"ElementaryTypeName","src":"48377:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25632,"mutability":"mutable","name":"decimals","nameLocation":"48399:8:50","nodeType":"VariableDeclaration","scope":25637,"src":"48391:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25631,"name":"uint256","nodeType":"ElementaryTypeName","src":"48391:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25634,"mutability":"mutable","name":"error","nameLocation":"48425:5:50","nodeType":"VariableDeclaration","scope":25637,"src":"48409:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25633,"name":"string","nodeType":"ElementaryTypeName","src":"48409:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48363:68:50"},"returnParameters":{"id":25636,"nodeType":"ParameterList","parameters":[],"src":"48445:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25645,"nodeType":"FunctionDefinition","src":"48502:55:50","nodes":[],"documentation":{"id":25638,"nodeType":"StructuredDocumentation","src":"48452:45:50","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48511:8:50","parameters":{"id":25643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25640,"mutability":"mutable","name":"left","nameLocation":"48525:4:50","nodeType":"VariableDeclaration","scope":25645,"src":"48520:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25639,"name":"bool","nodeType":"ElementaryTypeName","src":"48520:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":25642,"mutability":"mutable","name":"right","nameLocation":"48536:5:50","nodeType":"VariableDeclaration","scope":25645,"src":"48531:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25641,"name":"bool","nodeType":"ElementaryTypeName","src":"48531:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48519:23:50"},"returnParameters":{"id":25644,"nodeType":"ParameterList","parameters":[],"src":"48556:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25655,"nodeType":"FunctionDefinition","src":"48670:78:50","nodes":[],"documentation":{"id":25646,"nodeType":"StructuredDocumentation","src":"48563:102:50","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48679:8:50","parameters":{"id":25653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25648,"mutability":"mutable","name":"left","nameLocation":"48693:4:50","nodeType":"VariableDeclaration","scope":25655,"src":"48688:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25647,"name":"bool","nodeType":"ElementaryTypeName","src":"48688:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":25650,"mutability":"mutable","name":"right","nameLocation":"48704:5:50","nodeType":"VariableDeclaration","scope":25655,"src":"48699:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25649,"name":"bool","nodeType":"ElementaryTypeName","src":"48699:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":25652,"mutability":"mutable","name":"error","nameLocation":"48727:5:50","nodeType":"VariableDeclaration","scope":25655,"src":"48711:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25651,"name":"string","nodeType":"ElementaryTypeName","src":"48711:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48687:46:50"},"returnParameters":{"id":25654,"nodeType":"ParameterList","parameters":[],"src":"48747:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25663,"nodeType":"FunctionDefinition","src":"48806:77:50","nodes":[],"documentation":{"id":25656,"nodeType":"StructuredDocumentation","src":"48754:47:50","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48815:8:50","parameters":{"id":25661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25658,"mutability":"mutable","name":"left","nameLocation":"48840:4:50","nodeType":"VariableDeclaration","scope":25663,"src":"48824:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25657,"name":"string","nodeType":"ElementaryTypeName","src":"48824:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25660,"mutability":"mutable","name":"right","nameLocation":"48862:5:50","nodeType":"VariableDeclaration","scope":25663,"src":"48846:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25659,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:45:50"},"returnParameters":{"id":25662,"nodeType":"ParameterList","parameters":[],"src":"48882:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25673,"nodeType":"FunctionDefinition","src":"48998:100:50","nodes":[],"documentation":{"id":25664,"nodeType":"StructuredDocumentation","src":"48889:104:50","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49007:8:50","parameters":{"id":25671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25666,"mutability":"mutable","name":"left","nameLocation":"49032:4:50","nodeType":"VariableDeclaration","scope":25673,"src":"49016:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25665,"name":"string","nodeType":"ElementaryTypeName","src":"49016:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25668,"mutability":"mutable","name":"right","nameLocation":"49054:5:50","nodeType":"VariableDeclaration","scope":25673,"src":"49038:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25667,"name":"string","nodeType":"ElementaryTypeName","src":"49038:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25670,"mutability":"mutable","name":"error","nameLocation":"49077:5:50","nodeType":"VariableDeclaration","scope":25673,"src":"49061:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25669,"name":"string","nodeType":"ElementaryTypeName","src":"49061:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49015:68:50"},"returnParameters":{"id":25672,"nodeType":"ParameterList","parameters":[],"src":"49097:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25681,"nodeType":"FunctionDefinition","src":"49155:75:50","nodes":[],"documentation":{"id":25674,"nodeType":"StructuredDocumentation","src":"49104:46:50","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49164:8:50","parameters":{"id":25679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25676,"mutability":"mutable","name":"left","nameLocation":"49188:4:50","nodeType":"VariableDeclaration","scope":25681,"src":"49173:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":25675,"name":"bytes","nodeType":"ElementaryTypeName","src":"49173:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":25678,"mutability":"mutable","name":"right","nameLocation":"49209:5:50","nodeType":"VariableDeclaration","scope":25681,"src":"49194:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":25677,"name":"bytes","nodeType":"ElementaryTypeName","src":"49194:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49172:43:50"},"returnParameters":{"id":25680,"nodeType":"ParameterList","parameters":[],"src":"49229:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25691,"nodeType":"FunctionDefinition","src":"49344:98:50","nodes":[],"documentation":{"id":25682,"nodeType":"StructuredDocumentation","src":"49236:103:50","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49353:8:50","parameters":{"id":25689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25684,"mutability":"mutable","name":"left","nameLocation":"49377:4:50","nodeType":"VariableDeclaration","scope":25691,"src":"49362:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":25683,"name":"bytes","nodeType":"ElementaryTypeName","src":"49362:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":25686,"mutability":"mutable","name":"right","nameLocation":"49398:5:50","nodeType":"VariableDeclaration","scope":25691,"src":"49383:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":25685,"name":"bytes","nodeType":"ElementaryTypeName","src":"49383:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":25688,"mutability":"mutable","name":"error","nameLocation":"49421:5:50","nodeType":"VariableDeclaration","scope":25691,"src":"49405:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25687,"name":"string","nodeType":"ElementaryTypeName","src":"49405:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49361:66:50"},"returnParameters":{"id":25690,"nodeType":"ParameterList","parameters":[],"src":"49441:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25701,"nodeType":"FunctionDefinition","src":"49508:77:50","nodes":[],"documentation":{"id":25692,"nodeType":"StructuredDocumentation","src":"49448:55:50","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49517:8:50","parameters":{"id":25699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25695,"mutability":"mutable","name":"left","nameLocation":"49542:4:50","nodeType":"VariableDeclaration","scope":25701,"src":"49526:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":25693,"name":"bool","nodeType":"ElementaryTypeName","src":"49526:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":25694,"nodeType":"ArrayTypeName","src":"49526:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":25698,"mutability":"mutable","name":"right","nameLocation":"49564:5:50","nodeType":"VariableDeclaration","scope":25701,"src":"49548:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":25696,"name":"bool","nodeType":"ElementaryTypeName","src":"49548:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":25697,"nodeType":"ArrayTypeName","src":"49548:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49525:45:50"},"returnParameters":{"id":25700,"nodeType":"ParameterList","parameters":[],"src":"49584:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25713,"nodeType":"FunctionDefinition","src":"49708:100:50","nodes":[],"documentation":{"id":25702,"nodeType":"StructuredDocumentation","src":"49591:112:50","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49717:8:50","parameters":{"id":25711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25705,"mutability":"mutable","name":"left","nameLocation":"49742:4:50","nodeType":"VariableDeclaration","scope":25713,"src":"49726:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":25703,"name":"bool","nodeType":"ElementaryTypeName","src":"49726:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":25704,"nodeType":"ArrayTypeName","src":"49726:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":25708,"mutability":"mutable","name":"right","nameLocation":"49764:5:50","nodeType":"VariableDeclaration","scope":25713,"src":"49748:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":25706,"name":"bool","nodeType":"ElementaryTypeName","src":"49748:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":25707,"nodeType":"ArrayTypeName","src":"49748:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":25710,"mutability":"mutable","name":"error","nameLocation":"49787:5:50","nodeType":"VariableDeclaration","scope":25713,"src":"49771:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25709,"name":"string","nodeType":"ElementaryTypeName","src":"49771:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49725:68:50"},"returnParameters":{"id":25712,"nodeType":"ParameterList","parameters":[],"src":"49807:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25723,"nodeType":"FunctionDefinition","src":"49876:83:50","nodes":[],"documentation":{"id":25714,"nodeType":"StructuredDocumentation","src":"49814:57:50","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49885:8:50","parameters":{"id":25721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25717,"mutability":"mutable","name":"left","nameLocation":"49913:4:50","nodeType":"VariableDeclaration","scope":25723,"src":"49894:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25715,"name":"uint256","nodeType":"ElementaryTypeName","src":"49894:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":25716,"nodeType":"ArrayTypeName","src":"49894:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":25720,"mutability":"mutable","name":"right","nameLocation":"49938:5:50","nodeType":"VariableDeclaration","scope":25723,"src":"49919:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25718,"name":"uint256","nodeType":"ElementaryTypeName","src":"49919:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":25719,"nodeType":"ArrayTypeName","src":"49919:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49893:51:50"},"returnParameters":{"id":25722,"nodeType":"ParameterList","parameters":[],"src":"49958:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25735,"nodeType":"FunctionDefinition","src":"50085:106:50","nodes":[],"documentation":{"id":25724,"nodeType":"StructuredDocumentation","src":"49965:115:50","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50094:8:50","parameters":{"id":25733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25727,"mutability":"mutable","name":"left","nameLocation":"50122:4:50","nodeType":"VariableDeclaration","scope":25735,"src":"50103:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25725,"name":"uint256","nodeType":"ElementaryTypeName","src":"50103:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":25726,"nodeType":"ArrayTypeName","src":"50103:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":25730,"mutability":"mutable","name":"right","nameLocation":"50147:5:50","nodeType":"VariableDeclaration","scope":25735,"src":"50128:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25728,"name":"uint256","nodeType":"ElementaryTypeName","src":"50128:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":25729,"nodeType":"ArrayTypeName","src":"50128:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":25732,"mutability":"mutable","name":"error","nameLocation":"50170:5:50","nodeType":"VariableDeclaration","scope":25735,"src":"50154:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25731,"name":"string","nodeType":"ElementaryTypeName","src":"50154:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50102:74:50"},"returnParameters":{"id":25734,"nodeType":"ParameterList","parameters":[],"src":"50190:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25745,"nodeType":"FunctionDefinition","src":"50259:81:50","nodes":[],"documentation":{"id":25736,"nodeType":"StructuredDocumentation","src":"50197:57:50","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50268:8:50","parameters":{"id":25743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25739,"mutability":"mutable","name":"left","nameLocation":"50295:4:50","nodeType":"VariableDeclaration","scope":25745,"src":"50277:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":25737,"name":"int256","nodeType":"ElementaryTypeName","src":"50277:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":25738,"nodeType":"ArrayTypeName","src":"50277:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":25742,"mutability":"mutable","name":"right","nameLocation":"50319:5:50","nodeType":"VariableDeclaration","scope":25745,"src":"50301:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":25740,"name":"int256","nodeType":"ElementaryTypeName","src":"50301:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":25741,"nodeType":"ArrayTypeName","src":"50301:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50276:49:50"},"returnParameters":{"id":25744,"nodeType":"ParameterList","parameters":[],"src":"50339:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25757,"nodeType":"FunctionDefinition","src":"50465:104:50","nodes":[],"documentation":{"id":25746,"nodeType":"StructuredDocumentation","src":"50346:114:50","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50474:8:50","parameters":{"id":25755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25749,"mutability":"mutable","name":"left","nameLocation":"50501:4:50","nodeType":"VariableDeclaration","scope":25757,"src":"50483:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":25747,"name":"int256","nodeType":"ElementaryTypeName","src":"50483:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":25748,"nodeType":"ArrayTypeName","src":"50483:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":25752,"mutability":"mutable","name":"right","nameLocation":"50525:5:50","nodeType":"VariableDeclaration","scope":25757,"src":"50507:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":25750,"name":"int256","nodeType":"ElementaryTypeName","src":"50507:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":25751,"nodeType":"ArrayTypeName","src":"50507:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":25754,"mutability":"mutable","name":"error","nameLocation":"50548:5:50","nodeType":"VariableDeclaration","scope":25757,"src":"50532:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25753,"name":"string","nodeType":"ElementaryTypeName","src":"50532:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50482:72:50"},"returnParameters":{"id":25756,"nodeType":"ParameterList","parameters":[],"src":"50568:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25765,"nodeType":"FunctionDefinition","src":"50628:61:50","nodes":[],"documentation":{"id":25758,"nodeType":"StructuredDocumentation","src":"50575:48:50","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50637:8:50","parameters":{"id":25763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25760,"mutability":"mutable","name":"left","nameLocation":"50654:4:50","nodeType":"VariableDeclaration","scope":25765,"src":"50646:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25759,"name":"uint256","nodeType":"ElementaryTypeName","src":"50646:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25762,"mutability":"mutable","name":"right","nameLocation":"50668:5:50","nodeType":"VariableDeclaration","scope":25765,"src":"50660:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25761,"name":"uint256","nodeType":"ElementaryTypeName","src":"50660:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50645:29:50"},"returnParameters":{"id":25764,"nodeType":"ParameterList","parameters":[],"src":"50688:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25775,"nodeType":"FunctionDefinition","src":"50758:83:50","nodes":[],"documentation":{"id":25766,"nodeType":"StructuredDocumentation","src":"50695:58:50","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50767:8:50","parameters":{"id":25773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25769,"mutability":"mutable","name":"left","nameLocation":"50795:4:50","nodeType":"VariableDeclaration","scope":25775,"src":"50776:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":25767,"name":"address","nodeType":"ElementaryTypeName","src":"50776:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25768,"nodeType":"ArrayTypeName","src":"50776:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":25772,"mutability":"mutable","name":"right","nameLocation":"50820:5:50","nodeType":"VariableDeclaration","scope":25775,"src":"50801:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":25770,"name":"address","nodeType":"ElementaryTypeName","src":"50801:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25771,"nodeType":"ArrayTypeName","src":"50801:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50775:51:50"},"returnParameters":{"id":25774,"nodeType":"ParameterList","parameters":[],"src":"50840:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25787,"nodeType":"FunctionDefinition","src":"50967:106:50","nodes":[],"documentation":{"id":25776,"nodeType":"StructuredDocumentation","src":"50847:115:50","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50976:8:50","parameters":{"id":25785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25779,"mutability":"mutable","name":"left","nameLocation":"51004:4:50","nodeType":"VariableDeclaration","scope":25787,"src":"50985:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":25777,"name":"address","nodeType":"ElementaryTypeName","src":"50985:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25778,"nodeType":"ArrayTypeName","src":"50985:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":25782,"mutability":"mutable","name":"right","nameLocation":"51029:5:50","nodeType":"VariableDeclaration","scope":25787,"src":"51010:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":25780,"name":"address","nodeType":"ElementaryTypeName","src":"51010:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25781,"nodeType":"ArrayTypeName","src":"51010:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":25784,"mutability":"mutable","name":"error","nameLocation":"51052:5:50","nodeType":"VariableDeclaration","scope":25787,"src":"51036:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25783,"name":"string","nodeType":"ElementaryTypeName","src":"51036:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50984:74:50"},"returnParameters":{"id":25786,"nodeType":"ParameterList","parameters":[],"src":"51072:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25797,"nodeType":"FunctionDefinition","src":"51142:83:50","nodes":[],"documentation":{"id":25788,"nodeType":"StructuredDocumentation","src":"51079:58:50","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51151:8:50","parameters":{"id":25795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25791,"mutability":"mutable","name":"left","nameLocation":"51179:4:50","nodeType":"VariableDeclaration","scope":25797,"src":"51160:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51160:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":25790,"nodeType":"ArrayTypeName","src":"51160:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":25794,"mutability":"mutable","name":"right","nameLocation":"51204:5:50","nodeType":"VariableDeclaration","scope":25797,"src":"51185:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51185:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":25793,"nodeType":"ArrayTypeName","src":"51185:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51159:51:50"},"returnParameters":{"id":25796,"nodeType":"ParameterList","parameters":[],"src":"51224:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25809,"nodeType":"FunctionDefinition","src":"51351:106:50","nodes":[],"documentation":{"id":25798,"nodeType":"StructuredDocumentation","src":"51231:115:50","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51360:8:50","parameters":{"id":25807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25801,"mutability":"mutable","name":"left","nameLocation":"51388:4:50","nodeType":"VariableDeclaration","scope":25809,"src":"51369:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51369:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":25800,"nodeType":"ArrayTypeName","src":"51369:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":25804,"mutability":"mutable","name":"right","nameLocation":"51413:5:50","nodeType":"VariableDeclaration","scope":25809,"src":"51394:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51394:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":25803,"nodeType":"ArrayTypeName","src":"51394:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":25806,"mutability":"mutable","name":"error","nameLocation":"51436:5:50","nodeType":"VariableDeclaration","scope":25809,"src":"51420:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25805,"name":"string","nodeType":"ElementaryTypeName","src":"51420:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51368:74:50"},"returnParameters":{"id":25808,"nodeType":"ParameterList","parameters":[],"src":"51456:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25819,"nodeType":"FunctionDefinition","src":"51525:81:50","nodes":[],"documentation":{"id":25810,"nodeType":"StructuredDocumentation","src":"51463:57:50","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51534:8:50","parameters":{"id":25817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25813,"mutability":"mutable","name":"left","nameLocation":"51561:4:50","nodeType":"VariableDeclaration","scope":25819,"src":"51543:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":25811,"name":"string","nodeType":"ElementaryTypeName","src":"51543:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":25812,"nodeType":"ArrayTypeName","src":"51543:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":25816,"mutability":"mutable","name":"right","nameLocation":"51585:5:50","nodeType":"VariableDeclaration","scope":25819,"src":"51567:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":25814,"name":"string","nodeType":"ElementaryTypeName","src":"51567:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":25815,"nodeType":"ArrayTypeName","src":"51567:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"51542:49:50"},"returnParameters":{"id":25818,"nodeType":"ParameterList","parameters":[],"src":"51605:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25831,"nodeType":"FunctionDefinition","src":"51731:104:50","nodes":[],"documentation":{"id":25820,"nodeType":"StructuredDocumentation","src":"51612:114:50","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51740:8:50","parameters":{"id":25829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25823,"mutability":"mutable","name":"left","nameLocation":"51767:4:50","nodeType":"VariableDeclaration","scope":25831,"src":"51749:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":25821,"name":"string","nodeType":"ElementaryTypeName","src":"51749:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":25822,"nodeType":"ArrayTypeName","src":"51749:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":25826,"mutability":"mutable","name":"right","nameLocation":"51791:5:50","nodeType":"VariableDeclaration","scope":25831,"src":"51773:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":25824,"name":"string","nodeType":"ElementaryTypeName","src":"51773:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":25825,"nodeType":"ArrayTypeName","src":"51773:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":25828,"mutability":"mutable","name":"error","nameLocation":"51814:5:50","nodeType":"VariableDeclaration","scope":25831,"src":"51798:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25827,"name":"string","nodeType":"ElementaryTypeName","src":"51798:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51748:72:50"},"returnParameters":{"id":25830,"nodeType":"ParameterList","parameters":[],"src":"51834:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25841,"nodeType":"FunctionDefinition","src":"51902:79:50","nodes":[],"documentation":{"id":25832,"nodeType":"StructuredDocumentation","src":"51841:56:50","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51911:8:50","parameters":{"id":25839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25835,"mutability":"mutable","name":"left","nameLocation":"51937:4:50","nodeType":"VariableDeclaration","scope":25841,"src":"51920:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":25833,"name":"bytes","nodeType":"ElementaryTypeName","src":"51920:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":25834,"nodeType":"ArrayTypeName","src":"51920:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":25838,"mutability":"mutable","name":"right","nameLocation":"51960:5:50","nodeType":"VariableDeclaration","scope":25841,"src":"51943:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":25836,"name":"bytes","nodeType":"ElementaryTypeName","src":"51943:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":25837,"nodeType":"ArrayTypeName","src":"51943:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51919:47:50"},"returnParameters":{"id":25840,"nodeType":"ParameterList","parameters":[],"src":"51980:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25853,"nodeType":"FunctionDefinition","src":"52105:102:50","nodes":[],"documentation":{"id":25842,"nodeType":"StructuredDocumentation","src":"51987:113:50","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52114:8:50","parameters":{"id":25851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25845,"mutability":"mutable","name":"left","nameLocation":"52140:4:50","nodeType":"VariableDeclaration","scope":25853,"src":"52123:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":25843,"name":"bytes","nodeType":"ElementaryTypeName","src":"52123:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":25844,"nodeType":"ArrayTypeName","src":"52123:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":25848,"mutability":"mutable","name":"right","nameLocation":"52163:5:50","nodeType":"VariableDeclaration","scope":25853,"src":"52146:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":25846,"name":"bytes","nodeType":"ElementaryTypeName","src":"52146:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":25847,"nodeType":"ArrayTypeName","src":"52146:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":25850,"mutability":"mutable","name":"error","nameLocation":"52186:5:50","nodeType":"VariableDeclaration","scope":25853,"src":"52170:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25849,"name":"string","nodeType":"ElementaryTypeName","src":"52170:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52122:70:50"},"returnParameters":{"id":25852,"nodeType":"ParameterList","parameters":[],"src":"52206:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25863,"nodeType":"FunctionDefinition","src":"52323:84:50","nodes":[],"documentation":{"id":25854,"nodeType":"StructuredDocumentation","src":"52213:105:50","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52332:8:50","parameters":{"id":25861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25856,"mutability":"mutable","name":"left","nameLocation":"52349:4:50","nodeType":"VariableDeclaration","scope":25863,"src":"52341:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25855,"name":"uint256","nodeType":"ElementaryTypeName","src":"52341:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25858,"mutability":"mutable","name":"right","nameLocation":"52363:5:50","nodeType":"VariableDeclaration","scope":25863,"src":"52355:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25857,"name":"uint256","nodeType":"ElementaryTypeName","src":"52355:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25860,"mutability":"mutable","name":"error","nameLocation":"52386:5:50","nodeType":"VariableDeclaration","scope":25863,"src":"52370:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25859,"name":"string","nodeType":"ElementaryTypeName","src":"52370:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52340:52:50"},"returnParameters":{"id":25862,"nodeType":"ParameterList","parameters":[],"src":"52406:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25871,"nodeType":"FunctionDefinition","src":"52465:59:50","nodes":[],"documentation":{"id":25864,"nodeType":"StructuredDocumentation","src":"52413:47:50","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52474:8:50","parameters":{"id":25869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25866,"mutability":"mutable","name":"left","nameLocation":"52490:4:50","nodeType":"VariableDeclaration","scope":25871,"src":"52483:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25865,"name":"int256","nodeType":"ElementaryTypeName","src":"52483:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25868,"mutability":"mutable","name":"right","nameLocation":"52503:5:50","nodeType":"VariableDeclaration","scope":25871,"src":"52496:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25867,"name":"int256","nodeType":"ElementaryTypeName","src":"52496:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52482:27:50"},"returnParameters":{"id":25870,"nodeType":"ParameterList","parameters":[],"src":"52523:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25881,"nodeType":"FunctionDefinition","src":"52639:82:50","nodes":[],"documentation":{"id":25872,"nodeType":"StructuredDocumentation","src":"52530:104:50","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52648:8:50","parameters":{"id":25879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25874,"mutability":"mutable","name":"left","nameLocation":"52664:4:50","nodeType":"VariableDeclaration","scope":25881,"src":"52657:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25873,"name":"int256","nodeType":"ElementaryTypeName","src":"52657:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25876,"mutability":"mutable","name":"right","nameLocation":"52677:5:50","nodeType":"VariableDeclaration","scope":25881,"src":"52670:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25875,"name":"int256","nodeType":"ElementaryTypeName","src":"52670:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25878,"mutability":"mutable","name":"error","nameLocation":"52700:5:50","nodeType":"VariableDeclaration","scope":25881,"src":"52684:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25877,"name":"string","nodeType":"ElementaryTypeName","src":"52684:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52656:50:50"},"returnParameters":{"id":25880,"nodeType":"ParameterList","parameters":[],"src":"52720:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25889,"nodeType":"FunctionDefinition","src":"52780:61:50","nodes":[],"documentation":{"id":25882,"nodeType":"StructuredDocumentation","src":"52727:48:50","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52789:8:50","parameters":{"id":25887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25884,"mutability":"mutable","name":"left","nameLocation":"52806:4:50","nodeType":"VariableDeclaration","scope":25889,"src":"52798:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25883,"name":"address","nodeType":"ElementaryTypeName","src":"52798:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25886,"mutability":"mutable","name":"right","nameLocation":"52820:5:50","nodeType":"VariableDeclaration","scope":25889,"src":"52812:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25885,"name":"address","nodeType":"ElementaryTypeName","src":"52812:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52797:29:50"},"returnParameters":{"id":25888,"nodeType":"ParameterList","parameters":[],"src":"52840:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25899,"nodeType":"FunctionDefinition","src":"52957:84:50","nodes":[],"documentation":{"id":25890,"nodeType":"StructuredDocumentation","src":"52847:105:50","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52966:8:50","parameters":{"id":25897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25892,"mutability":"mutable","name":"left","nameLocation":"52983:4:50","nodeType":"VariableDeclaration","scope":25899,"src":"52975:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25891,"name":"address","nodeType":"ElementaryTypeName","src":"52975:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25894,"mutability":"mutable","name":"right","nameLocation":"52997:5:50","nodeType":"VariableDeclaration","scope":25899,"src":"52989:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25893,"name":"address","nodeType":"ElementaryTypeName","src":"52989:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25896,"mutability":"mutable","name":"error","nameLocation":"53020:5:50","nodeType":"VariableDeclaration","scope":25899,"src":"53004:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25895,"name":"string","nodeType":"ElementaryTypeName","src":"53004:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52974:52:50"},"returnParameters":{"id":25898,"nodeType":"ParameterList","parameters":[],"src":"53040:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25907,"nodeType":"FunctionDefinition","src":"53100:61:50","nodes":[],"documentation":{"id":25900,"nodeType":"StructuredDocumentation","src":"53047:48:50","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53109:8:50","parameters":{"id":25905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25902,"mutability":"mutable","name":"left","nameLocation":"53126:4:50","nodeType":"VariableDeclaration","scope":25907,"src":"53118:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53118:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":25904,"mutability":"mutable","name":"right","nameLocation":"53140:5:50","nodeType":"VariableDeclaration","scope":25907,"src":"53132:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53132:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53117:29:50"},"returnParameters":{"id":25906,"nodeType":"ParameterList","parameters":[],"src":"53160:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25917,"nodeType":"FunctionDefinition","src":"53277:84:50","nodes":[],"documentation":{"id":25908,"nodeType":"StructuredDocumentation","src":"53167:105:50","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53286:8:50","parameters":{"id":25915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25910,"mutability":"mutable","name":"left","nameLocation":"53303:4:50","nodeType":"VariableDeclaration","scope":25917,"src":"53295:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53295:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":25912,"mutability":"mutable","name":"right","nameLocation":"53317:5:50","nodeType":"VariableDeclaration","scope":25917,"src":"53309:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53309:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":25914,"mutability":"mutable","name":"error","nameLocation":"53340:5:50","nodeType":"VariableDeclaration","scope":25917,"src":"53324:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25913,"name":"string","nodeType":"ElementaryTypeName","src":"53324:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53294:52:50"},"returnParameters":{"id":25916,"nodeType":"ParameterList","parameters":[],"src":"53360:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25923,"nodeType":"FunctionDefinition","src":"53418:51:50","nodes":[],"documentation":{"id":25918,"nodeType":"StructuredDocumentation","src":"53367:46:50","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53427:11:50","parameters":{"id":25921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25920,"mutability":"mutable","name":"condition","nameLocation":"53444:9:50","nodeType":"VariableDeclaration","scope":25923,"src":"53439:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25919,"name":"bool","nodeType":"ElementaryTypeName","src":"53439:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"53438:16:50"},"returnParameters":{"id":25922,"nodeType":"ParameterList","parameters":[],"src":"53468:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25931,"nodeType":"FunctionDefinition","src":"53583:74:50","nodes":[],"documentation":{"id":25924,"nodeType":"StructuredDocumentation","src":"53475:103:50","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53592:11:50","parameters":{"id":25929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25926,"mutability":"mutable","name":"condition","nameLocation":"53609:9:50","nodeType":"VariableDeclaration","scope":25931,"src":"53604:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":25925,"name":"bool","nodeType":"ElementaryTypeName","src":"53604:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":25928,"mutability":"mutable","name":"error","nameLocation":"53636:5:50","nodeType":"VariableDeclaration","scope":25931,"src":"53620:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25927,"name":"string","nodeType":"ElementaryTypeName","src":"53620:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53603:39:50"},"returnParameters":{"id":25930,"nodeType":"ParameterList","parameters":[],"src":"53656:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25941,"nodeType":"FunctionDefinition","src":"53818:86:50","nodes":[],"documentation":{"id":25932,"nodeType":"StructuredDocumentation","src":"53663:150:50","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"53827:15:50","parameters":{"id":25939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25934,"mutability":"mutable","name":"left","nameLocation":"53851:4:50","nodeType":"VariableDeclaration","scope":25941,"src":"53843:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25933,"name":"uint256","nodeType":"ElementaryTypeName","src":"53843:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25936,"mutability":"mutable","name":"right","nameLocation":"53865:5:50","nodeType":"VariableDeclaration","scope":25941,"src":"53857:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25935,"name":"uint256","nodeType":"ElementaryTypeName","src":"53857:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25938,"mutability":"mutable","name":"decimals","nameLocation":"53880:8:50","nodeType":"VariableDeclaration","scope":25941,"src":"53872:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25937,"name":"uint256","nodeType":"ElementaryTypeName","src":"53872:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53842:47:50"},"returnParameters":{"id":25940,"nodeType":"ParameterList","parameters":[],"src":"53903:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25953,"nodeType":"FunctionDefinition","src":"54119:109:50","nodes":[],"documentation":{"id":25942,"nodeType":"StructuredDocumentation","src":"53910:204:50","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54128:15:50","parameters":{"id":25951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25944,"mutability":"mutable","name":"left","nameLocation":"54152:4:50","nodeType":"VariableDeclaration","scope":25953,"src":"54144:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25943,"name":"uint256","nodeType":"ElementaryTypeName","src":"54144:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25946,"mutability":"mutable","name":"right","nameLocation":"54166:5:50","nodeType":"VariableDeclaration","scope":25953,"src":"54158:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25945,"name":"uint256","nodeType":"ElementaryTypeName","src":"54158:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25948,"mutability":"mutable","name":"decimals","nameLocation":"54181:8:50","nodeType":"VariableDeclaration","scope":25953,"src":"54173:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25947,"name":"uint256","nodeType":"ElementaryTypeName","src":"54173:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25950,"mutability":"mutable","name":"error","nameLocation":"54207:5:50","nodeType":"VariableDeclaration","scope":25953,"src":"54191:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25949,"name":"string","nodeType":"ElementaryTypeName","src":"54191:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54143:70:50"},"returnParameters":{"id":25952,"nodeType":"ParameterList","parameters":[],"src":"54227:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25963,"nodeType":"FunctionDefinition","src":"54388:84:50","nodes":[],"documentation":{"id":25954,"nodeType":"StructuredDocumentation","src":"54234:149:50","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54397:15:50","parameters":{"id":25961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25956,"mutability":"mutable","name":"left","nameLocation":"54420:4:50","nodeType":"VariableDeclaration","scope":25963,"src":"54413:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25955,"name":"int256","nodeType":"ElementaryTypeName","src":"54413:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25958,"mutability":"mutable","name":"right","nameLocation":"54433:5:50","nodeType":"VariableDeclaration","scope":25963,"src":"54426:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25957,"name":"int256","nodeType":"ElementaryTypeName","src":"54426:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25960,"mutability":"mutable","name":"decimals","nameLocation":"54448:8:50","nodeType":"VariableDeclaration","scope":25963,"src":"54440:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25959,"name":"uint256","nodeType":"ElementaryTypeName","src":"54440:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54412:45:50"},"returnParameters":{"id":25962,"nodeType":"ParameterList","parameters":[],"src":"54471:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25975,"nodeType":"FunctionDefinition","src":"54686:107:50","nodes":[],"documentation":{"id":25964,"nodeType":"StructuredDocumentation","src":"54478:203:50","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54695:15:50","parameters":{"id":25973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25966,"mutability":"mutable","name":"left","nameLocation":"54718:4:50","nodeType":"VariableDeclaration","scope":25975,"src":"54711:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25965,"name":"int256","nodeType":"ElementaryTypeName","src":"54711:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25968,"mutability":"mutable","name":"right","nameLocation":"54731:5:50","nodeType":"VariableDeclaration","scope":25975,"src":"54724:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25967,"name":"int256","nodeType":"ElementaryTypeName","src":"54724:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25970,"mutability":"mutable","name":"decimals","nameLocation":"54746:8:50","nodeType":"VariableDeclaration","scope":25975,"src":"54738:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25969,"name":"uint256","nodeType":"ElementaryTypeName","src":"54738:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25972,"mutability":"mutable","name":"error","nameLocation":"54772:5:50","nodeType":"VariableDeclaration","scope":25975,"src":"54756:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25971,"name":"string","nodeType":"ElementaryTypeName","src":"54756:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54710:68:50"},"returnParameters":{"id":25974,"nodeType":"ParameterList","parameters":[],"src":"54792:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25983,"nodeType":"FunctionDefinition","src":"54897:61:50","nodes":[],"documentation":{"id":25976,"nodeType":"StructuredDocumentation","src":"54799:93:50","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"54906:8:50","parameters":{"id":25981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25978,"mutability":"mutable","name":"left","nameLocation":"54923:4:50","nodeType":"VariableDeclaration","scope":25983,"src":"54915:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25977,"name":"uint256","nodeType":"ElementaryTypeName","src":"54915:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25980,"mutability":"mutable","name":"right","nameLocation":"54937:5:50","nodeType":"VariableDeclaration","scope":25983,"src":"54929:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25979,"name":"uint256","nodeType":"ElementaryTypeName","src":"54929:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54914:29:50"},"returnParameters":{"id":25982,"nodeType":"ParameterList","parameters":[],"src":"54957:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":25993,"nodeType":"FunctionDefinition","src":"55124:84:50","nodes":[],"documentation":{"id":25984,"nodeType":"StructuredDocumentation","src":"54964:155:50","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55133:8:50","parameters":{"id":25991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25986,"mutability":"mutable","name":"left","nameLocation":"55150:4:50","nodeType":"VariableDeclaration","scope":25993,"src":"55142:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25985,"name":"uint256","nodeType":"ElementaryTypeName","src":"55142:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25988,"mutability":"mutable","name":"right","nameLocation":"55164:5:50","nodeType":"VariableDeclaration","scope":25993,"src":"55156:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25987,"name":"uint256","nodeType":"ElementaryTypeName","src":"55156:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25990,"mutability":"mutable","name":"error","nameLocation":"55187:5:50","nodeType":"VariableDeclaration","scope":25993,"src":"55171:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":25989,"name":"string","nodeType":"ElementaryTypeName","src":"55171:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55141:52:50"},"returnParameters":{"id":25992,"nodeType":"ParameterList","parameters":[],"src":"55207:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26001,"nodeType":"FunctionDefinition","src":"55311:59:50","nodes":[],"documentation":{"id":25994,"nodeType":"StructuredDocumentation","src":"55214:92:50","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55320:8:50","parameters":{"id":25999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25996,"mutability":"mutable","name":"left","nameLocation":"55336:4:50","nodeType":"VariableDeclaration","scope":26001,"src":"55329:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25995,"name":"int256","nodeType":"ElementaryTypeName","src":"55329:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25998,"mutability":"mutable","name":"right","nameLocation":"55349:5:50","nodeType":"VariableDeclaration","scope":26001,"src":"55342:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":25997,"name":"int256","nodeType":"ElementaryTypeName","src":"55342:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55328:27:50"},"returnParameters":{"id":26000,"nodeType":"ParameterList","parameters":[],"src":"55369:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26011,"nodeType":"FunctionDefinition","src":"55535:82:50","nodes":[],"documentation":{"id":26002,"nodeType":"StructuredDocumentation","src":"55376:154:50","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55544:8:50","parameters":{"id":26009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26004,"mutability":"mutable","name":"left","nameLocation":"55560:4:50","nodeType":"VariableDeclaration","scope":26011,"src":"55553:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26003,"name":"int256","nodeType":"ElementaryTypeName","src":"55553:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26006,"mutability":"mutable","name":"right","nameLocation":"55573:5:50","nodeType":"VariableDeclaration","scope":26011,"src":"55566:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26005,"name":"int256","nodeType":"ElementaryTypeName","src":"55566:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26008,"mutability":"mutable","name":"error","nameLocation":"55596:5:50","nodeType":"VariableDeclaration","scope":26011,"src":"55580:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26007,"name":"string","nodeType":"ElementaryTypeName","src":"55580:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55552:50:50"},"returnParameters":{"id":26010,"nodeType":"ParameterList","parameters":[],"src":"55616:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26021,"nodeType":"FunctionDefinition","src":"55766:86:50","nodes":[],"documentation":{"id":26012,"nodeType":"StructuredDocumentation","src":"55623:138:50","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"55775:15:50","parameters":{"id":26019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26014,"mutability":"mutable","name":"left","nameLocation":"55799:4:50","nodeType":"VariableDeclaration","scope":26021,"src":"55791:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26013,"name":"uint256","nodeType":"ElementaryTypeName","src":"55791:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26016,"mutability":"mutable","name":"right","nameLocation":"55813:5:50","nodeType":"VariableDeclaration","scope":26021,"src":"55805:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26015,"name":"uint256","nodeType":"ElementaryTypeName","src":"55805:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26018,"mutability":"mutable","name":"decimals","nameLocation":"55828:8:50","nodeType":"VariableDeclaration","scope":26021,"src":"55820:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26017,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55790:47:50"},"returnParameters":{"id":26020,"nodeType":"ParameterList","parameters":[],"src":"55851:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26033,"nodeType":"FunctionDefinition","src":"56055:109:50","nodes":[],"documentation":{"id":26022,"nodeType":"StructuredDocumentation","src":"55858:192:50","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56064:15:50","parameters":{"id":26031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26024,"mutability":"mutable","name":"left","nameLocation":"56088:4:50","nodeType":"VariableDeclaration","scope":26033,"src":"56080:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26023,"name":"uint256","nodeType":"ElementaryTypeName","src":"56080:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26026,"mutability":"mutable","name":"right","nameLocation":"56102:5:50","nodeType":"VariableDeclaration","scope":26033,"src":"56094:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26025,"name":"uint256","nodeType":"ElementaryTypeName","src":"56094:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26028,"mutability":"mutable","name":"decimals","nameLocation":"56117:8:50","nodeType":"VariableDeclaration","scope":26033,"src":"56109:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26027,"name":"uint256","nodeType":"ElementaryTypeName","src":"56109:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26030,"mutability":"mutable","name":"error","nameLocation":"56143:5:50","nodeType":"VariableDeclaration","scope":26033,"src":"56127:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26029,"name":"string","nodeType":"ElementaryTypeName","src":"56127:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56079:70:50"},"returnParameters":{"id":26032,"nodeType":"ParameterList","parameters":[],"src":"56163:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26043,"nodeType":"FunctionDefinition","src":"56312:84:50","nodes":[],"documentation":{"id":26034,"nodeType":"StructuredDocumentation","src":"56170:137:50","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56321:15:50","parameters":{"id":26041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26036,"mutability":"mutable","name":"left","nameLocation":"56344:4:50","nodeType":"VariableDeclaration","scope":26043,"src":"56337:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26035,"name":"int256","nodeType":"ElementaryTypeName","src":"56337:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26038,"mutability":"mutable","name":"right","nameLocation":"56357:5:50","nodeType":"VariableDeclaration","scope":26043,"src":"56350:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26037,"name":"int256","nodeType":"ElementaryTypeName","src":"56350:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26040,"mutability":"mutable","name":"decimals","nameLocation":"56372:8:50","nodeType":"VariableDeclaration","scope":26043,"src":"56364:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26039,"name":"uint256","nodeType":"ElementaryTypeName","src":"56364:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56336:45:50"},"returnParameters":{"id":26042,"nodeType":"ParameterList","parameters":[],"src":"56395:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26055,"nodeType":"FunctionDefinition","src":"56598:107:50","nodes":[],"documentation":{"id":26044,"nodeType":"StructuredDocumentation","src":"56402:191:50","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56607:15:50","parameters":{"id":26053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26046,"mutability":"mutable","name":"left","nameLocation":"56630:4:50","nodeType":"VariableDeclaration","scope":26055,"src":"56623:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26045,"name":"int256","nodeType":"ElementaryTypeName","src":"56623:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26048,"mutability":"mutable","name":"right","nameLocation":"56643:5:50","nodeType":"VariableDeclaration","scope":26055,"src":"56636:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26047,"name":"int256","nodeType":"ElementaryTypeName","src":"56636:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26050,"mutability":"mutable","name":"decimals","nameLocation":"56658:8:50","nodeType":"VariableDeclaration","scope":26055,"src":"56650:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26049,"name":"uint256","nodeType":"ElementaryTypeName","src":"56650:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26052,"mutability":"mutable","name":"error","nameLocation":"56684:5:50","nodeType":"VariableDeclaration","scope":26055,"src":"56668:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26051,"name":"string","nodeType":"ElementaryTypeName","src":"56668:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56622:68:50"},"returnParameters":{"id":26054,"nodeType":"ParameterList","parameters":[],"src":"56704:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26063,"nodeType":"FunctionDefinition","src":"56797:61:50","nodes":[],"documentation":{"id":26056,"nodeType":"StructuredDocumentation","src":"56711:81:50","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"56806:8:50","parameters":{"id":26061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26058,"mutability":"mutable","name":"left","nameLocation":"56823:4:50","nodeType":"VariableDeclaration","scope":26063,"src":"56815:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26057,"name":"uint256","nodeType":"ElementaryTypeName","src":"56815:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26060,"mutability":"mutable","name":"right","nameLocation":"56837:5:50","nodeType":"VariableDeclaration","scope":26063,"src":"56829:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26059,"name":"uint256","nodeType":"ElementaryTypeName","src":"56829:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56814:29:50"},"returnParameters":{"id":26062,"nodeType":"ParameterList","parameters":[],"src":"56857:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26073,"nodeType":"FunctionDefinition","src":"57012:84:50","nodes":[],"documentation":{"id":26064,"nodeType":"StructuredDocumentation","src":"56864:143:50","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57021:8:50","parameters":{"id":26071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26066,"mutability":"mutable","name":"left","nameLocation":"57038:4:50","nodeType":"VariableDeclaration","scope":26073,"src":"57030:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26065,"name":"uint256","nodeType":"ElementaryTypeName","src":"57030:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26068,"mutability":"mutable","name":"right","nameLocation":"57052:5:50","nodeType":"VariableDeclaration","scope":26073,"src":"57044:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26067,"name":"uint256","nodeType":"ElementaryTypeName","src":"57044:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26070,"mutability":"mutable","name":"error","nameLocation":"57075:5:50","nodeType":"VariableDeclaration","scope":26073,"src":"57059:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26069,"name":"string","nodeType":"ElementaryTypeName","src":"57059:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57029:52:50"},"returnParameters":{"id":26072,"nodeType":"ParameterList","parameters":[],"src":"57095:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26081,"nodeType":"FunctionDefinition","src":"57187:59:50","nodes":[],"documentation":{"id":26074,"nodeType":"StructuredDocumentation","src":"57102:80:50","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57196:8:50","parameters":{"id":26079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26076,"mutability":"mutable","name":"left","nameLocation":"57212:4:50","nodeType":"VariableDeclaration","scope":26081,"src":"57205:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26075,"name":"int256","nodeType":"ElementaryTypeName","src":"57205:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26078,"mutability":"mutable","name":"right","nameLocation":"57225:5:50","nodeType":"VariableDeclaration","scope":26081,"src":"57218:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26077,"name":"int256","nodeType":"ElementaryTypeName","src":"57218:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57204:27:50"},"returnParameters":{"id":26080,"nodeType":"ParameterList","parameters":[],"src":"57245:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26091,"nodeType":"FunctionDefinition","src":"57399:82:50","nodes":[],"documentation":{"id":26082,"nodeType":"StructuredDocumentation","src":"57252:142:50","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57408:8:50","parameters":{"id":26089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26084,"mutability":"mutable","name":"left","nameLocation":"57424:4:50","nodeType":"VariableDeclaration","scope":26091,"src":"57417:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26083,"name":"int256","nodeType":"ElementaryTypeName","src":"57417:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26086,"mutability":"mutable","name":"right","nameLocation":"57437:5:50","nodeType":"VariableDeclaration","scope":26091,"src":"57430:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26085,"name":"int256","nodeType":"ElementaryTypeName","src":"57430:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26088,"mutability":"mutable","name":"error","nameLocation":"57460:5:50","nodeType":"VariableDeclaration","scope":26091,"src":"57444:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26087,"name":"string","nodeType":"ElementaryTypeName","src":"57444:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57416:50:50"},"returnParameters":{"id":26090,"nodeType":"ParameterList","parameters":[],"src":"57480:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26101,"nodeType":"FunctionDefinition","src":"57639:86:50","nodes":[],"documentation":{"id":26092,"nodeType":"StructuredDocumentation","src":"57487:147:50","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57648:15:50","parameters":{"id":26099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26094,"mutability":"mutable","name":"left","nameLocation":"57672:4:50","nodeType":"VariableDeclaration","scope":26101,"src":"57664:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26093,"name":"uint256","nodeType":"ElementaryTypeName","src":"57664:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26096,"mutability":"mutable","name":"right","nameLocation":"57686:5:50","nodeType":"VariableDeclaration","scope":26101,"src":"57678:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26095,"name":"uint256","nodeType":"ElementaryTypeName","src":"57678:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26098,"mutability":"mutable","name":"decimals","nameLocation":"57701:8:50","nodeType":"VariableDeclaration","scope":26101,"src":"57693:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26097,"name":"uint256","nodeType":"ElementaryTypeName","src":"57693:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57663:47:50"},"returnParameters":{"id":26100,"nodeType":"ParameterList","parameters":[],"src":"57724:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26113,"nodeType":"FunctionDefinition","src":"57937:109:50","nodes":[],"documentation":{"id":26102,"nodeType":"StructuredDocumentation","src":"57731:201:50","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57946:15:50","parameters":{"id":26111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26104,"mutability":"mutable","name":"left","nameLocation":"57970:4:50","nodeType":"VariableDeclaration","scope":26113,"src":"57962:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26103,"name":"uint256","nodeType":"ElementaryTypeName","src":"57962:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26106,"mutability":"mutable","name":"right","nameLocation":"57984:5:50","nodeType":"VariableDeclaration","scope":26113,"src":"57976:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26105,"name":"uint256","nodeType":"ElementaryTypeName","src":"57976:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26108,"mutability":"mutable","name":"decimals","nameLocation":"57999:8:50","nodeType":"VariableDeclaration","scope":26113,"src":"57991:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26107,"name":"uint256","nodeType":"ElementaryTypeName","src":"57991:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26110,"mutability":"mutable","name":"error","nameLocation":"58025:5:50","nodeType":"VariableDeclaration","scope":26113,"src":"58009:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26109,"name":"string","nodeType":"ElementaryTypeName","src":"58009:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57961:70:50"},"returnParameters":{"id":26112,"nodeType":"ParameterList","parameters":[],"src":"58045:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26123,"nodeType":"FunctionDefinition","src":"58203:84:50","nodes":[],"documentation":{"id":26114,"nodeType":"StructuredDocumentation","src":"58052:146:50","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58212:15:50","parameters":{"id":26121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26116,"mutability":"mutable","name":"left","nameLocation":"58235:4:50","nodeType":"VariableDeclaration","scope":26123,"src":"58228:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26115,"name":"int256","nodeType":"ElementaryTypeName","src":"58228:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26118,"mutability":"mutable","name":"right","nameLocation":"58248:5:50","nodeType":"VariableDeclaration","scope":26123,"src":"58241:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26117,"name":"int256","nodeType":"ElementaryTypeName","src":"58241:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26120,"mutability":"mutable","name":"decimals","nameLocation":"58263:8:50","nodeType":"VariableDeclaration","scope":26123,"src":"58255:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26119,"name":"uint256","nodeType":"ElementaryTypeName","src":"58255:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58227:45:50"},"returnParameters":{"id":26122,"nodeType":"ParameterList","parameters":[],"src":"58286:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26135,"nodeType":"FunctionDefinition","src":"58498:107:50","nodes":[],"documentation":{"id":26124,"nodeType":"StructuredDocumentation","src":"58293:200:50","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58507:15:50","parameters":{"id":26133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26126,"mutability":"mutable","name":"left","nameLocation":"58530:4:50","nodeType":"VariableDeclaration","scope":26135,"src":"58523:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26125,"name":"int256","nodeType":"ElementaryTypeName","src":"58523:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26128,"mutability":"mutable","name":"right","nameLocation":"58543:5:50","nodeType":"VariableDeclaration","scope":26135,"src":"58536:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26127,"name":"int256","nodeType":"ElementaryTypeName","src":"58536:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26130,"mutability":"mutable","name":"decimals","nameLocation":"58558:8:50","nodeType":"VariableDeclaration","scope":26135,"src":"58550:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26129,"name":"uint256","nodeType":"ElementaryTypeName","src":"58550:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26132,"mutability":"mutable","name":"error","nameLocation":"58584:5:50","nodeType":"VariableDeclaration","scope":26135,"src":"58568:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26131,"name":"string","nodeType":"ElementaryTypeName","src":"58568:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58522:68:50"},"returnParameters":{"id":26134,"nodeType":"ParameterList","parameters":[],"src":"58604:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26143,"nodeType":"FunctionDefinition","src":"58706:61:50","nodes":[],"documentation":{"id":26136,"nodeType":"StructuredDocumentation","src":"58611:90:50","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58715:8:50","parameters":{"id":26141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26138,"mutability":"mutable","name":"left","nameLocation":"58732:4:50","nodeType":"VariableDeclaration","scope":26143,"src":"58724:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26137,"name":"uint256","nodeType":"ElementaryTypeName","src":"58724:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26140,"mutability":"mutable","name":"right","nameLocation":"58746:5:50","nodeType":"VariableDeclaration","scope":26143,"src":"58738:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26139,"name":"uint256","nodeType":"ElementaryTypeName","src":"58738:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58723:29:50"},"returnParameters":{"id":26142,"nodeType":"ParameterList","parameters":[],"src":"58766:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26153,"nodeType":"FunctionDefinition","src":"58930:84:50","nodes":[],"documentation":{"id":26144,"nodeType":"StructuredDocumentation","src":"58773:152:50","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58939:8:50","parameters":{"id":26151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26146,"mutability":"mutable","name":"left","nameLocation":"58956:4:50","nodeType":"VariableDeclaration","scope":26153,"src":"58948:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26145,"name":"uint256","nodeType":"ElementaryTypeName","src":"58948:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26148,"mutability":"mutable","name":"right","nameLocation":"58970:5:50","nodeType":"VariableDeclaration","scope":26153,"src":"58962:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26147,"name":"uint256","nodeType":"ElementaryTypeName","src":"58962:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26150,"mutability":"mutable","name":"error","nameLocation":"58993:5:50","nodeType":"VariableDeclaration","scope":26153,"src":"58977:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26149,"name":"string","nodeType":"ElementaryTypeName","src":"58977:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58947:52:50"},"returnParameters":{"id":26152,"nodeType":"ParameterList","parameters":[],"src":"59013:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26161,"nodeType":"FunctionDefinition","src":"59114:59:50","nodes":[],"documentation":{"id":26154,"nodeType":"StructuredDocumentation","src":"59020:89:50","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59123:8:50","parameters":{"id":26159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26156,"mutability":"mutable","name":"left","nameLocation":"59139:4:50","nodeType":"VariableDeclaration","scope":26161,"src":"59132:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26155,"name":"int256","nodeType":"ElementaryTypeName","src":"59132:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26158,"mutability":"mutable","name":"right","nameLocation":"59152:5:50","nodeType":"VariableDeclaration","scope":26161,"src":"59145:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26157,"name":"int256","nodeType":"ElementaryTypeName","src":"59145:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59131:27:50"},"returnParameters":{"id":26160,"nodeType":"ParameterList","parameters":[],"src":"59172:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26171,"nodeType":"FunctionDefinition","src":"59335:82:50","nodes":[],"documentation":{"id":26162,"nodeType":"StructuredDocumentation","src":"59179:151:50","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59344:8:50","parameters":{"id":26169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26164,"mutability":"mutable","name":"left","nameLocation":"59360:4:50","nodeType":"VariableDeclaration","scope":26171,"src":"59353:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26163,"name":"int256","nodeType":"ElementaryTypeName","src":"59353:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26166,"mutability":"mutable","name":"right","nameLocation":"59373:5:50","nodeType":"VariableDeclaration","scope":26171,"src":"59366:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26165,"name":"int256","nodeType":"ElementaryTypeName","src":"59366:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26168,"mutability":"mutable","name":"error","nameLocation":"59396:5:50","nodeType":"VariableDeclaration","scope":26171,"src":"59380:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26167,"name":"string","nodeType":"ElementaryTypeName","src":"59380:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59352:50:50"},"returnParameters":{"id":26170,"nodeType":"ParameterList","parameters":[],"src":"59416:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26181,"nodeType":"FunctionDefinition","src":"59563:86:50","nodes":[],"documentation":{"id":26172,"nodeType":"StructuredDocumentation","src":"59423:135:50","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59572:15:50","parameters":{"id":26179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26174,"mutability":"mutable","name":"left","nameLocation":"59596:4:50","nodeType":"VariableDeclaration","scope":26181,"src":"59588:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26173,"name":"uint256","nodeType":"ElementaryTypeName","src":"59588:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26176,"mutability":"mutable","name":"right","nameLocation":"59610:5:50","nodeType":"VariableDeclaration","scope":26181,"src":"59602:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26175,"name":"uint256","nodeType":"ElementaryTypeName","src":"59602:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26178,"mutability":"mutable","name":"decimals","nameLocation":"59625:8:50","nodeType":"VariableDeclaration","scope":26181,"src":"59617:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26177,"name":"uint256","nodeType":"ElementaryTypeName","src":"59617:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59587:47:50"},"returnParameters":{"id":26180,"nodeType":"ParameterList","parameters":[],"src":"59648:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26193,"nodeType":"FunctionDefinition","src":"59849:109:50","nodes":[],"documentation":{"id":26182,"nodeType":"StructuredDocumentation","src":"59655:189:50","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59858:15:50","parameters":{"id":26191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26184,"mutability":"mutable","name":"left","nameLocation":"59882:4:50","nodeType":"VariableDeclaration","scope":26193,"src":"59874:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26183,"name":"uint256","nodeType":"ElementaryTypeName","src":"59874:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26186,"mutability":"mutable","name":"right","nameLocation":"59896:5:50","nodeType":"VariableDeclaration","scope":26193,"src":"59888:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26185,"name":"uint256","nodeType":"ElementaryTypeName","src":"59888:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26188,"mutability":"mutable","name":"decimals","nameLocation":"59911:8:50","nodeType":"VariableDeclaration","scope":26193,"src":"59903:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26187,"name":"uint256","nodeType":"ElementaryTypeName","src":"59903:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26190,"mutability":"mutable","name":"error","nameLocation":"59937:5:50","nodeType":"VariableDeclaration","scope":26193,"src":"59921:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26189,"name":"string","nodeType":"ElementaryTypeName","src":"59921:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59873:70:50"},"returnParameters":{"id":26192,"nodeType":"ParameterList","parameters":[],"src":"59957:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26203,"nodeType":"FunctionDefinition","src":"60103:84:50","nodes":[],"documentation":{"id":26194,"nodeType":"StructuredDocumentation","src":"59964:134:50","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60112:15:50","parameters":{"id":26201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26196,"mutability":"mutable","name":"left","nameLocation":"60135:4:50","nodeType":"VariableDeclaration","scope":26203,"src":"60128:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26195,"name":"int256","nodeType":"ElementaryTypeName","src":"60128:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26198,"mutability":"mutable","name":"right","nameLocation":"60148:5:50","nodeType":"VariableDeclaration","scope":26203,"src":"60141:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26197,"name":"int256","nodeType":"ElementaryTypeName","src":"60141:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26200,"mutability":"mutable","name":"decimals","nameLocation":"60163:8:50","nodeType":"VariableDeclaration","scope":26203,"src":"60155:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26199,"name":"uint256","nodeType":"ElementaryTypeName","src":"60155:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60127:45:50"},"returnParameters":{"id":26202,"nodeType":"ParameterList","parameters":[],"src":"60186:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26215,"nodeType":"FunctionDefinition","src":"60386:107:50","nodes":[],"documentation":{"id":26204,"nodeType":"StructuredDocumentation","src":"60193:188:50","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60395:15:50","parameters":{"id":26213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26206,"mutability":"mutable","name":"left","nameLocation":"60418:4:50","nodeType":"VariableDeclaration","scope":26215,"src":"60411:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26205,"name":"int256","nodeType":"ElementaryTypeName","src":"60411:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26208,"mutability":"mutable","name":"right","nameLocation":"60431:5:50","nodeType":"VariableDeclaration","scope":26215,"src":"60424:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26207,"name":"int256","nodeType":"ElementaryTypeName","src":"60424:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26210,"mutability":"mutable","name":"decimals","nameLocation":"60446:8:50","nodeType":"VariableDeclaration","scope":26215,"src":"60438:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26209,"name":"uint256","nodeType":"ElementaryTypeName","src":"60438:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26212,"mutability":"mutable","name":"error","nameLocation":"60472:5:50","nodeType":"VariableDeclaration","scope":26215,"src":"60456:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26211,"name":"string","nodeType":"ElementaryTypeName","src":"60456:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60410:68:50"},"returnParameters":{"id":26214,"nodeType":"ParameterList","parameters":[],"src":"60492:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26223,"nodeType":"FunctionDefinition","src":"60582:61:50","nodes":[],"documentation":{"id":26216,"nodeType":"StructuredDocumentation","src":"60499:78:50","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60591:8:50","parameters":{"id":26221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26218,"mutability":"mutable","name":"left","nameLocation":"60608:4:50","nodeType":"VariableDeclaration","scope":26223,"src":"60600:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26217,"name":"uint256","nodeType":"ElementaryTypeName","src":"60600:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26220,"mutability":"mutable","name":"right","nameLocation":"60622:5:50","nodeType":"VariableDeclaration","scope":26223,"src":"60614:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26219,"name":"uint256","nodeType":"ElementaryTypeName","src":"60614:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60599:29:50"},"returnParameters":{"id":26222,"nodeType":"ParameterList","parameters":[],"src":"60642:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26233,"nodeType":"FunctionDefinition","src":"60794:84:50","nodes":[],"documentation":{"id":26224,"nodeType":"StructuredDocumentation","src":"60649:140:50","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60803:8:50","parameters":{"id":26231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26226,"mutability":"mutable","name":"left","nameLocation":"60820:4:50","nodeType":"VariableDeclaration","scope":26233,"src":"60812:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26225,"name":"uint256","nodeType":"ElementaryTypeName","src":"60812:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26228,"mutability":"mutable","name":"right","nameLocation":"60834:5:50","nodeType":"VariableDeclaration","scope":26233,"src":"60826:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26227,"name":"uint256","nodeType":"ElementaryTypeName","src":"60826:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26230,"mutability":"mutable","name":"error","nameLocation":"60857:5:50","nodeType":"VariableDeclaration","scope":26233,"src":"60841:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26229,"name":"string","nodeType":"ElementaryTypeName","src":"60841:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60811:52:50"},"returnParameters":{"id":26232,"nodeType":"ParameterList","parameters":[],"src":"60877:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26241,"nodeType":"FunctionDefinition","src":"60966:59:50","nodes":[],"documentation":{"id":26234,"nodeType":"StructuredDocumentation","src":"60884:77:50","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60975:8:50","parameters":{"id":26239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26236,"mutability":"mutable","name":"left","nameLocation":"60991:4:50","nodeType":"VariableDeclaration","scope":26241,"src":"60984:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26235,"name":"int256","nodeType":"ElementaryTypeName","src":"60984:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26238,"mutability":"mutable","name":"right","nameLocation":"61004:5:50","nodeType":"VariableDeclaration","scope":26241,"src":"60997:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26237,"name":"int256","nodeType":"ElementaryTypeName","src":"60997:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60983:27:50"},"returnParameters":{"id":26240,"nodeType":"ParameterList","parameters":[],"src":"61024:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26251,"nodeType":"FunctionDefinition","src":"61175:82:50","nodes":[],"documentation":{"id":26242,"nodeType":"StructuredDocumentation","src":"61031:139:50","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61184:8:50","parameters":{"id":26249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26244,"mutability":"mutable","name":"left","nameLocation":"61200:4:50","nodeType":"VariableDeclaration","scope":26251,"src":"61193:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26243,"name":"int256","nodeType":"ElementaryTypeName","src":"61193:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26246,"mutability":"mutable","name":"right","nameLocation":"61213:5:50","nodeType":"VariableDeclaration","scope":26251,"src":"61206:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26245,"name":"int256","nodeType":"ElementaryTypeName","src":"61206:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26248,"mutability":"mutable","name":"error","nameLocation":"61236:5:50","nodeType":"VariableDeclaration","scope":26251,"src":"61220:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26247,"name":"string","nodeType":"ElementaryTypeName","src":"61220:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61192:50:50"},"returnParameters":{"id":26250,"nodeType":"ParameterList","parameters":[],"src":"61256:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26261,"nodeType":"FunctionDefinition","src":"61370:89:50","nodes":[],"documentation":{"id":26252,"nodeType":"StructuredDocumentation","src":"61263:102:50","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61379:18:50","parameters":{"id":26259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26254,"mutability":"mutable","name":"left","nameLocation":"61406:4:50","nodeType":"VariableDeclaration","scope":26261,"src":"61398:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26253,"name":"uint256","nodeType":"ElementaryTypeName","src":"61398:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26256,"mutability":"mutable","name":"right","nameLocation":"61420:5:50","nodeType":"VariableDeclaration","scope":26261,"src":"61412:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26255,"name":"uint256","nodeType":"ElementaryTypeName","src":"61412:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26258,"mutability":"mutable","name":"decimals","nameLocation":"61435:8:50","nodeType":"VariableDeclaration","scope":26261,"src":"61427:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26257,"name":"uint256","nodeType":"ElementaryTypeName","src":"61427:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61397:47:50"},"returnParameters":{"id":26260,"nodeType":"ParameterList","parameters":[],"src":"61458:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26273,"nodeType":"FunctionDefinition","src":"61634:112:50","nodes":[],"documentation":{"id":26262,"nodeType":"StructuredDocumentation","src":"61465:164:50","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61643:18:50","parameters":{"id":26271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26264,"mutability":"mutable","name":"left","nameLocation":"61670:4:50","nodeType":"VariableDeclaration","scope":26273,"src":"61662:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26263,"name":"uint256","nodeType":"ElementaryTypeName","src":"61662:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26266,"mutability":"mutable","name":"right","nameLocation":"61684:5:50","nodeType":"VariableDeclaration","scope":26273,"src":"61676:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26265,"name":"uint256","nodeType":"ElementaryTypeName","src":"61676:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26268,"mutability":"mutable","name":"decimals","nameLocation":"61699:8:50","nodeType":"VariableDeclaration","scope":26273,"src":"61691:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26267,"name":"uint256","nodeType":"ElementaryTypeName","src":"61691:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26270,"mutability":"mutable","name":"error","nameLocation":"61725:5:50","nodeType":"VariableDeclaration","scope":26273,"src":"61709:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26269,"name":"string","nodeType":"ElementaryTypeName","src":"61709:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61661:70:50"},"returnParameters":{"id":26272,"nodeType":"ParameterList","parameters":[],"src":"61745:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26283,"nodeType":"FunctionDefinition","src":"61858:87:50","nodes":[],"documentation":{"id":26274,"nodeType":"StructuredDocumentation","src":"61752:101:50","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61867:18:50","parameters":{"id":26281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26276,"mutability":"mutable","name":"left","nameLocation":"61893:4:50","nodeType":"VariableDeclaration","scope":26283,"src":"61886:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26275,"name":"int256","nodeType":"ElementaryTypeName","src":"61886:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26278,"mutability":"mutable","name":"right","nameLocation":"61906:5:50","nodeType":"VariableDeclaration","scope":26283,"src":"61899:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26277,"name":"int256","nodeType":"ElementaryTypeName","src":"61899:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26280,"mutability":"mutable","name":"decimals","nameLocation":"61921:8:50","nodeType":"VariableDeclaration","scope":26283,"src":"61913:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26279,"name":"uint256","nodeType":"ElementaryTypeName","src":"61913:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61885:45:50"},"returnParameters":{"id":26282,"nodeType":"ParameterList","parameters":[],"src":"61944:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26295,"nodeType":"FunctionDefinition","src":"62119:110:50","nodes":[],"documentation":{"id":26284,"nodeType":"StructuredDocumentation","src":"61951:163:50","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"62128:18:50","parameters":{"id":26293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26286,"mutability":"mutable","name":"left","nameLocation":"62154:4:50","nodeType":"VariableDeclaration","scope":26295,"src":"62147:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26285,"name":"int256","nodeType":"ElementaryTypeName","src":"62147:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26288,"mutability":"mutable","name":"right","nameLocation":"62167:5:50","nodeType":"VariableDeclaration","scope":26295,"src":"62160:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26287,"name":"int256","nodeType":"ElementaryTypeName","src":"62160:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26290,"mutability":"mutable","name":"decimals","nameLocation":"62182:8:50","nodeType":"VariableDeclaration","scope":26295,"src":"62174:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26289,"name":"uint256","nodeType":"ElementaryTypeName","src":"62174:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26292,"mutability":"mutable","name":"error","nameLocation":"62208:5:50","nodeType":"VariableDeclaration","scope":26295,"src":"62192:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26291,"name":"string","nodeType":"ElementaryTypeName","src":"62192:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62146:68:50"},"returnParameters":{"id":26294,"nodeType":"ParameterList","parameters":[],"src":"62228:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26303,"nodeType":"FunctionDefinition","src":"62289:58:50","nodes":[],"documentation":{"id":26296,"nodeType":"StructuredDocumentation","src":"62235:49:50","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62298:11:50","parameters":{"id":26301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26298,"mutability":"mutable","name":"left","nameLocation":"62315:4:50","nodeType":"VariableDeclaration","scope":26303,"src":"62310:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26297,"name":"bool","nodeType":"ElementaryTypeName","src":"62310:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":26300,"mutability":"mutable","name":"right","nameLocation":"62326:5:50","nodeType":"VariableDeclaration","scope":26303,"src":"62321:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26299,"name":"bool","nodeType":"ElementaryTypeName","src":"62321:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62309:23:50"},"returnParameters":{"id":26302,"nodeType":"ParameterList","parameters":[],"src":"62346:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26313,"nodeType":"FunctionDefinition","src":"62464:81:50","nodes":[],"documentation":{"id":26304,"nodeType":"StructuredDocumentation","src":"62353:106:50","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62473:11:50","parameters":{"id":26311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26306,"mutability":"mutable","name":"left","nameLocation":"62490:4:50","nodeType":"VariableDeclaration","scope":26313,"src":"62485:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26305,"name":"bool","nodeType":"ElementaryTypeName","src":"62485:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":26308,"mutability":"mutable","name":"right","nameLocation":"62501:5:50","nodeType":"VariableDeclaration","scope":26313,"src":"62496:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26307,"name":"bool","nodeType":"ElementaryTypeName","src":"62496:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":26310,"mutability":"mutable","name":"error","nameLocation":"62524:5:50","nodeType":"VariableDeclaration","scope":26313,"src":"62508:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26309,"name":"string","nodeType":"ElementaryTypeName","src":"62508:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62484:46:50"},"returnParameters":{"id":26312,"nodeType":"ParameterList","parameters":[],"src":"62544:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26321,"nodeType":"FunctionDefinition","src":"62607:80:50","nodes":[],"documentation":{"id":26314,"nodeType":"StructuredDocumentation","src":"62551:51:50","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62616:11:50","parameters":{"id":26319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26316,"mutability":"mutable","name":"left","nameLocation":"62644:4:50","nodeType":"VariableDeclaration","scope":26321,"src":"62628:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26315,"name":"string","nodeType":"ElementaryTypeName","src":"62628:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26318,"mutability":"mutable","name":"right","nameLocation":"62666:5:50","nodeType":"VariableDeclaration","scope":26321,"src":"62650:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26317,"name":"string","nodeType":"ElementaryTypeName","src":"62650:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62627:45:50"},"returnParameters":{"id":26320,"nodeType":"ParameterList","parameters":[],"src":"62686:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26331,"nodeType":"FunctionDefinition","src":"62806:103:50","nodes":[],"documentation":{"id":26322,"nodeType":"StructuredDocumentation","src":"62693:108:50","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62815:11:50","parameters":{"id":26329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26324,"mutability":"mutable","name":"left","nameLocation":"62843:4:50","nodeType":"VariableDeclaration","scope":26331,"src":"62827:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26323,"name":"string","nodeType":"ElementaryTypeName","src":"62827:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26326,"mutability":"mutable","name":"right","nameLocation":"62865:5:50","nodeType":"VariableDeclaration","scope":26331,"src":"62849:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26325,"name":"string","nodeType":"ElementaryTypeName","src":"62849:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26328,"mutability":"mutable","name":"error","nameLocation":"62888:5:50","nodeType":"VariableDeclaration","scope":26331,"src":"62872:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26327,"name":"string","nodeType":"ElementaryTypeName","src":"62872:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62826:68:50"},"returnParameters":{"id":26330,"nodeType":"ParameterList","parameters":[],"src":"62908:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26339,"nodeType":"FunctionDefinition","src":"62970:78:50","nodes":[],"documentation":{"id":26332,"nodeType":"StructuredDocumentation","src":"62915:50:50","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62979:11:50","parameters":{"id":26337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26334,"mutability":"mutable","name":"left","nameLocation":"63006:4:50","nodeType":"VariableDeclaration","scope":26339,"src":"62991:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26333,"name":"bytes","nodeType":"ElementaryTypeName","src":"62991:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":26336,"mutability":"mutable","name":"right","nameLocation":"63027:5:50","nodeType":"VariableDeclaration","scope":26339,"src":"63012:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26335,"name":"bytes","nodeType":"ElementaryTypeName","src":"63012:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"62990:43:50"},"returnParameters":{"id":26338,"nodeType":"ParameterList","parameters":[],"src":"63047:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26349,"nodeType":"FunctionDefinition","src":"63166:101:50","nodes":[],"documentation":{"id":26340,"nodeType":"StructuredDocumentation","src":"63054:107:50","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63175:11:50","parameters":{"id":26347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26342,"mutability":"mutable","name":"left","nameLocation":"63202:4:50","nodeType":"VariableDeclaration","scope":26349,"src":"63187:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26341,"name":"bytes","nodeType":"ElementaryTypeName","src":"63187:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":26344,"mutability":"mutable","name":"right","nameLocation":"63223:5:50","nodeType":"VariableDeclaration","scope":26349,"src":"63208:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26343,"name":"bytes","nodeType":"ElementaryTypeName","src":"63208:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":26346,"mutability":"mutable","name":"error","nameLocation":"63246:5:50","nodeType":"VariableDeclaration","scope":26349,"src":"63230:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26345,"name":"string","nodeType":"ElementaryTypeName","src":"63230:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63186:66:50"},"returnParameters":{"id":26348,"nodeType":"ParameterList","parameters":[],"src":"63266:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26359,"nodeType":"FunctionDefinition","src":"63337:80:50","nodes":[],"documentation":{"id":26350,"nodeType":"StructuredDocumentation","src":"63273:59:50","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63346:11:50","parameters":{"id":26357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26353,"mutability":"mutable","name":"left","nameLocation":"63374:4:50","nodeType":"VariableDeclaration","scope":26359,"src":"63358:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":26351,"name":"bool","nodeType":"ElementaryTypeName","src":"63358:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26352,"nodeType":"ArrayTypeName","src":"63358:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":26356,"mutability":"mutable","name":"right","nameLocation":"63396:5:50","nodeType":"VariableDeclaration","scope":26359,"src":"63380:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":26354,"name":"bool","nodeType":"ElementaryTypeName","src":"63380:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26355,"nodeType":"ArrayTypeName","src":"63380:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"63357:45:50"},"returnParameters":{"id":26358,"nodeType":"ParameterList","parameters":[],"src":"63416:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26371,"nodeType":"FunctionDefinition","src":"63544:103:50","nodes":[],"documentation":{"id":26360,"nodeType":"StructuredDocumentation","src":"63423:116:50","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63553:11:50","parameters":{"id":26369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26363,"mutability":"mutable","name":"left","nameLocation":"63581:4:50","nodeType":"VariableDeclaration","scope":26371,"src":"63565:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":26361,"name":"bool","nodeType":"ElementaryTypeName","src":"63565:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26362,"nodeType":"ArrayTypeName","src":"63565:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":26366,"mutability":"mutable","name":"right","nameLocation":"63603:5:50","nodeType":"VariableDeclaration","scope":26371,"src":"63587:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":26364,"name":"bool","nodeType":"ElementaryTypeName","src":"63587:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26365,"nodeType":"ArrayTypeName","src":"63587:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":26368,"mutability":"mutable","name":"error","nameLocation":"63626:5:50","nodeType":"VariableDeclaration","scope":26371,"src":"63610:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26367,"name":"string","nodeType":"ElementaryTypeName","src":"63610:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63564:68:50"},"returnParameters":{"id":26370,"nodeType":"ParameterList","parameters":[],"src":"63646:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26381,"nodeType":"FunctionDefinition","src":"63720:86:50","nodes":[],"documentation":{"id":26372,"nodeType":"StructuredDocumentation","src":"63653:62:50","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63729:11:50","parameters":{"id":26379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26375,"mutability":"mutable","name":"left","nameLocation":"63760:4:50","nodeType":"VariableDeclaration","scope":26381,"src":"63741:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":26373,"name":"uint256","nodeType":"ElementaryTypeName","src":"63741:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26374,"nodeType":"ArrayTypeName","src":"63741:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":26378,"mutability":"mutable","name":"right","nameLocation":"63785:5:50","nodeType":"VariableDeclaration","scope":26381,"src":"63766:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":26376,"name":"uint256","nodeType":"ElementaryTypeName","src":"63766:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26377,"nodeType":"ArrayTypeName","src":"63766:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63740:51:50"},"returnParameters":{"id":26380,"nodeType":"ParameterList","parameters":[],"src":"63805:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26393,"nodeType":"FunctionDefinition","src":"63936:109:50","nodes":[],"documentation":{"id":26382,"nodeType":"StructuredDocumentation","src":"63812:119:50","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63945:11:50","parameters":{"id":26391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26385,"mutability":"mutable","name":"left","nameLocation":"63976:4:50","nodeType":"VariableDeclaration","scope":26393,"src":"63957:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":26383,"name":"uint256","nodeType":"ElementaryTypeName","src":"63957:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26384,"nodeType":"ArrayTypeName","src":"63957:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":26388,"mutability":"mutable","name":"right","nameLocation":"64001:5:50","nodeType":"VariableDeclaration","scope":26393,"src":"63982:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":26386,"name":"uint256","nodeType":"ElementaryTypeName","src":"63982:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26387,"nodeType":"ArrayTypeName","src":"63982:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":26390,"mutability":"mutable","name":"error","nameLocation":"64024:5:50","nodeType":"VariableDeclaration","scope":26393,"src":"64008:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26389,"name":"string","nodeType":"ElementaryTypeName","src":"64008:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63956:74:50"},"returnParameters":{"id":26392,"nodeType":"ParameterList","parameters":[],"src":"64044:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26403,"nodeType":"FunctionDefinition","src":"64117:84:50","nodes":[],"documentation":{"id":26394,"nodeType":"StructuredDocumentation","src":"64051:61:50","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64126:11:50","parameters":{"id":26401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26397,"mutability":"mutable","name":"left","nameLocation":"64156:4:50","nodeType":"VariableDeclaration","scope":26403,"src":"64138:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":26395,"name":"int256","nodeType":"ElementaryTypeName","src":"64138:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":26396,"nodeType":"ArrayTypeName","src":"64138:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":26400,"mutability":"mutable","name":"right","nameLocation":"64180:5:50","nodeType":"VariableDeclaration","scope":26403,"src":"64162:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":26398,"name":"int256","nodeType":"ElementaryTypeName","src":"64162:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":26399,"nodeType":"ArrayTypeName","src":"64162:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"64137:49:50"},"returnParameters":{"id":26402,"nodeType":"ParameterList","parameters":[],"src":"64200:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26415,"nodeType":"FunctionDefinition","src":"64330:107:50","nodes":[],"documentation":{"id":26404,"nodeType":"StructuredDocumentation","src":"64207:118:50","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64339:11:50","parameters":{"id":26413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26407,"mutability":"mutable","name":"left","nameLocation":"64369:4:50","nodeType":"VariableDeclaration","scope":26415,"src":"64351:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":26405,"name":"int256","nodeType":"ElementaryTypeName","src":"64351:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":26406,"nodeType":"ArrayTypeName","src":"64351:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":26410,"mutability":"mutable","name":"right","nameLocation":"64393:5:50","nodeType":"VariableDeclaration","scope":26415,"src":"64375:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":26408,"name":"int256","nodeType":"ElementaryTypeName","src":"64375:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":26409,"nodeType":"ArrayTypeName","src":"64375:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":26412,"mutability":"mutable","name":"error","nameLocation":"64416:5:50","nodeType":"VariableDeclaration","scope":26415,"src":"64400:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26411,"name":"string","nodeType":"ElementaryTypeName","src":"64400:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64350:72:50"},"returnParameters":{"id":26414,"nodeType":"ParameterList","parameters":[],"src":"64436:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26423,"nodeType":"FunctionDefinition","src":"64500:64:50","nodes":[],"documentation":{"id":26416,"nodeType":"StructuredDocumentation","src":"64443:52:50","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64509:11:50","parameters":{"id":26421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26418,"mutability":"mutable","name":"left","nameLocation":"64529:4:50","nodeType":"VariableDeclaration","scope":26423,"src":"64521:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26417,"name":"uint256","nodeType":"ElementaryTypeName","src":"64521:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26420,"mutability":"mutable","name":"right","nameLocation":"64543:5:50","nodeType":"VariableDeclaration","scope":26423,"src":"64535:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26419,"name":"uint256","nodeType":"ElementaryTypeName","src":"64535:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64520:29:50"},"returnParameters":{"id":26422,"nodeType":"ParameterList","parameters":[],"src":"64563:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26433,"nodeType":"FunctionDefinition","src":"64637:86:50","nodes":[],"documentation":{"id":26424,"nodeType":"StructuredDocumentation","src":"64570:62:50","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64646:11:50","parameters":{"id":26431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26427,"mutability":"mutable","name":"left","nameLocation":"64677:4:50","nodeType":"VariableDeclaration","scope":26433,"src":"64658:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":26425,"name":"address","nodeType":"ElementaryTypeName","src":"64658:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":26426,"nodeType":"ArrayTypeName","src":"64658:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":26430,"mutability":"mutable","name":"right","nameLocation":"64702:5:50","nodeType":"VariableDeclaration","scope":26433,"src":"64683:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":26428,"name":"address","nodeType":"ElementaryTypeName","src":"64683:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":26429,"nodeType":"ArrayTypeName","src":"64683:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64657:51:50"},"returnParameters":{"id":26432,"nodeType":"ParameterList","parameters":[],"src":"64722:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26445,"nodeType":"FunctionDefinition","src":"64853:109:50","nodes":[],"documentation":{"id":26434,"nodeType":"StructuredDocumentation","src":"64729:119:50","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64862:11:50","parameters":{"id":26443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26437,"mutability":"mutable","name":"left","nameLocation":"64893:4:50","nodeType":"VariableDeclaration","scope":26445,"src":"64874:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":26435,"name":"address","nodeType":"ElementaryTypeName","src":"64874:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":26436,"nodeType":"ArrayTypeName","src":"64874:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":26440,"mutability":"mutable","name":"right","nameLocation":"64918:5:50","nodeType":"VariableDeclaration","scope":26445,"src":"64899:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":26438,"name":"address","nodeType":"ElementaryTypeName","src":"64899:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":26439,"nodeType":"ArrayTypeName","src":"64899:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":26442,"mutability":"mutable","name":"error","nameLocation":"64941:5:50","nodeType":"VariableDeclaration","scope":26445,"src":"64925:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26441,"name":"string","nodeType":"ElementaryTypeName","src":"64925:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64873:74:50"},"returnParameters":{"id":26444,"nodeType":"ParameterList","parameters":[],"src":"64961:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26455,"nodeType":"FunctionDefinition","src":"65035:86:50","nodes":[],"documentation":{"id":26446,"nodeType":"StructuredDocumentation","src":"64968:62:50","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65044:11:50","parameters":{"id":26453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26449,"mutability":"mutable","name":"left","nameLocation":"65075:4:50","nodeType":"VariableDeclaration","scope":26455,"src":"65056:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":26447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65056:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26448,"nodeType":"ArrayTypeName","src":"65056:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":26452,"mutability":"mutable","name":"right","nameLocation":"65100:5:50","nodeType":"VariableDeclaration","scope":26455,"src":"65081:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":26450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65081:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26451,"nodeType":"ArrayTypeName","src":"65081:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65055:51:50"},"returnParameters":{"id":26454,"nodeType":"ParameterList","parameters":[],"src":"65120:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26467,"nodeType":"FunctionDefinition","src":"65251:109:50","nodes":[],"documentation":{"id":26456,"nodeType":"StructuredDocumentation","src":"65127:119:50","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65260:11:50","parameters":{"id":26465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26459,"mutability":"mutable","name":"left","nameLocation":"65291:4:50","nodeType":"VariableDeclaration","scope":26467,"src":"65272:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":26457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65272:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26458,"nodeType":"ArrayTypeName","src":"65272:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":26462,"mutability":"mutable","name":"right","nameLocation":"65316:5:50","nodeType":"VariableDeclaration","scope":26467,"src":"65297:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":26460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65297:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26461,"nodeType":"ArrayTypeName","src":"65297:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":26464,"mutability":"mutable","name":"error","nameLocation":"65339:5:50","nodeType":"VariableDeclaration","scope":26467,"src":"65323:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26463,"name":"string","nodeType":"ElementaryTypeName","src":"65323:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65271:74:50"},"returnParameters":{"id":26466,"nodeType":"ParameterList","parameters":[],"src":"65359:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26477,"nodeType":"FunctionDefinition","src":"65432:84:50","nodes":[],"documentation":{"id":26468,"nodeType":"StructuredDocumentation","src":"65366:61:50","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65441:11:50","parameters":{"id":26475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26471,"mutability":"mutable","name":"left","nameLocation":"65471:4:50","nodeType":"VariableDeclaration","scope":26477,"src":"65453:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":26469,"name":"string","nodeType":"ElementaryTypeName","src":"65453:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26470,"nodeType":"ArrayTypeName","src":"65453:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":26474,"mutability":"mutable","name":"right","nameLocation":"65495:5:50","nodeType":"VariableDeclaration","scope":26477,"src":"65477:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":26472,"name":"string","nodeType":"ElementaryTypeName","src":"65477:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26473,"nodeType":"ArrayTypeName","src":"65477:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"65452:49:50"},"returnParameters":{"id":26476,"nodeType":"ParameterList","parameters":[],"src":"65515:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26489,"nodeType":"FunctionDefinition","src":"65645:107:50","nodes":[],"documentation":{"id":26478,"nodeType":"StructuredDocumentation","src":"65522:118:50","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65654:11:50","parameters":{"id":26487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26481,"mutability":"mutable","name":"left","nameLocation":"65684:4:50","nodeType":"VariableDeclaration","scope":26489,"src":"65666:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":26479,"name":"string","nodeType":"ElementaryTypeName","src":"65666:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26480,"nodeType":"ArrayTypeName","src":"65666:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":26484,"mutability":"mutable","name":"right","nameLocation":"65708:5:50","nodeType":"VariableDeclaration","scope":26489,"src":"65690:23:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":26482,"name":"string","nodeType":"ElementaryTypeName","src":"65690:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26483,"nodeType":"ArrayTypeName","src":"65690:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":26486,"mutability":"mutable","name":"error","nameLocation":"65731:5:50","nodeType":"VariableDeclaration","scope":26489,"src":"65715:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26485,"name":"string","nodeType":"ElementaryTypeName","src":"65715:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65665:72:50"},"returnParameters":{"id":26488,"nodeType":"ParameterList","parameters":[],"src":"65751:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26499,"nodeType":"FunctionDefinition","src":"65823:82:50","nodes":[],"documentation":{"id":26490,"nodeType":"StructuredDocumentation","src":"65758:60:50","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65832:11:50","parameters":{"id":26497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26493,"mutability":"mutable","name":"left","nameLocation":"65861:4:50","nodeType":"VariableDeclaration","scope":26499,"src":"65844:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":26491,"name":"bytes","nodeType":"ElementaryTypeName","src":"65844:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":26492,"nodeType":"ArrayTypeName","src":"65844:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":26496,"mutability":"mutable","name":"right","nameLocation":"65884:5:50","nodeType":"VariableDeclaration","scope":26499,"src":"65867:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":26494,"name":"bytes","nodeType":"ElementaryTypeName","src":"65867:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":26495,"nodeType":"ArrayTypeName","src":"65867:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65843:47:50"},"returnParameters":{"id":26498,"nodeType":"ParameterList","parameters":[],"src":"65904:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26511,"nodeType":"FunctionDefinition","src":"66033:105:50","nodes":[],"documentation":{"id":26500,"nodeType":"StructuredDocumentation","src":"65911:117:50","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66042:11:50","parameters":{"id":26509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26503,"mutability":"mutable","name":"left","nameLocation":"66071:4:50","nodeType":"VariableDeclaration","scope":26511,"src":"66054:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":26501,"name":"bytes","nodeType":"ElementaryTypeName","src":"66054:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":26502,"nodeType":"ArrayTypeName","src":"66054:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":26506,"mutability":"mutable","name":"right","nameLocation":"66094:5:50","nodeType":"VariableDeclaration","scope":26511,"src":"66077:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":26504,"name":"bytes","nodeType":"ElementaryTypeName","src":"66077:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":26505,"nodeType":"ArrayTypeName","src":"66077:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":26508,"mutability":"mutable","name":"error","nameLocation":"66117:5:50","nodeType":"VariableDeclaration","scope":26511,"src":"66101:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26507,"name":"string","nodeType":"ElementaryTypeName","src":"66101:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66053:70:50"},"returnParameters":{"id":26510,"nodeType":"ParameterList","parameters":[],"src":"66137:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26521,"nodeType":"FunctionDefinition","src":"66258:87:50","nodes":[],"documentation":{"id":26512,"nodeType":"StructuredDocumentation","src":"66144:109:50","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66267:11:50","parameters":{"id":26519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26514,"mutability":"mutable","name":"left","nameLocation":"66287:4:50","nodeType":"VariableDeclaration","scope":26521,"src":"66279:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26513,"name":"uint256","nodeType":"ElementaryTypeName","src":"66279:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26516,"mutability":"mutable","name":"right","nameLocation":"66301:5:50","nodeType":"VariableDeclaration","scope":26521,"src":"66293:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26515,"name":"uint256","nodeType":"ElementaryTypeName","src":"66293:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26518,"mutability":"mutable","name":"error","nameLocation":"66324:5:50","nodeType":"VariableDeclaration","scope":26521,"src":"66308:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26517,"name":"string","nodeType":"ElementaryTypeName","src":"66308:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66278:52:50"},"returnParameters":{"id":26520,"nodeType":"ParameterList","parameters":[],"src":"66344:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26529,"nodeType":"FunctionDefinition","src":"66407:62:50","nodes":[],"documentation":{"id":26522,"nodeType":"StructuredDocumentation","src":"66351:51:50","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66416:11:50","parameters":{"id":26527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26524,"mutability":"mutable","name":"left","nameLocation":"66435:4:50","nodeType":"VariableDeclaration","scope":26529,"src":"66428:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26523,"name":"int256","nodeType":"ElementaryTypeName","src":"66428:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26526,"mutability":"mutable","name":"right","nameLocation":"66448:5:50","nodeType":"VariableDeclaration","scope":26529,"src":"66441:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26525,"name":"int256","nodeType":"ElementaryTypeName","src":"66441:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66427:27:50"},"returnParameters":{"id":26528,"nodeType":"ParameterList","parameters":[],"src":"66468:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26539,"nodeType":"FunctionDefinition","src":"66588:85:50","nodes":[],"documentation":{"id":26530,"nodeType":"StructuredDocumentation","src":"66475:108:50","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66597:11:50","parameters":{"id":26537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26532,"mutability":"mutable","name":"left","nameLocation":"66616:4:50","nodeType":"VariableDeclaration","scope":26539,"src":"66609:11:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26531,"name":"int256","nodeType":"ElementaryTypeName","src":"66609:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26534,"mutability":"mutable","name":"right","nameLocation":"66629:5:50","nodeType":"VariableDeclaration","scope":26539,"src":"66622:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26533,"name":"int256","nodeType":"ElementaryTypeName","src":"66622:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":26536,"mutability":"mutable","name":"error","nameLocation":"66652:5:50","nodeType":"VariableDeclaration","scope":26539,"src":"66636:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26535,"name":"string","nodeType":"ElementaryTypeName","src":"66636:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66608:50:50"},"returnParameters":{"id":26538,"nodeType":"ParameterList","parameters":[],"src":"66672:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26547,"nodeType":"FunctionDefinition","src":"66736:64:50","nodes":[],"documentation":{"id":26540,"nodeType":"StructuredDocumentation","src":"66679:52:50","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66745:11:50","parameters":{"id":26545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26542,"mutability":"mutable","name":"left","nameLocation":"66765:4:50","nodeType":"VariableDeclaration","scope":26547,"src":"66757:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26541,"name":"address","nodeType":"ElementaryTypeName","src":"66757:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26544,"mutability":"mutable","name":"right","nameLocation":"66779:5:50","nodeType":"VariableDeclaration","scope":26547,"src":"66771:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26543,"name":"address","nodeType":"ElementaryTypeName","src":"66771:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"66756:29:50"},"returnParameters":{"id":26546,"nodeType":"ParameterList","parameters":[],"src":"66799:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26557,"nodeType":"FunctionDefinition","src":"66920:87:50","nodes":[],"documentation":{"id":26548,"nodeType":"StructuredDocumentation","src":"66806:109:50","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66929:11:50","parameters":{"id":26555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26550,"mutability":"mutable","name":"left","nameLocation":"66949:4:50","nodeType":"VariableDeclaration","scope":26557,"src":"66941:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26549,"name":"address","nodeType":"ElementaryTypeName","src":"66941:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26552,"mutability":"mutable","name":"right","nameLocation":"66963:5:50","nodeType":"VariableDeclaration","scope":26557,"src":"66955:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26551,"name":"address","nodeType":"ElementaryTypeName","src":"66955:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26554,"mutability":"mutable","name":"error","nameLocation":"66986:5:50","nodeType":"VariableDeclaration","scope":26557,"src":"66970:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26553,"name":"string","nodeType":"ElementaryTypeName","src":"66970:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66940:52:50"},"returnParameters":{"id":26556,"nodeType":"ParameterList","parameters":[],"src":"67006:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26565,"nodeType":"FunctionDefinition","src":"67070:64:50","nodes":[],"documentation":{"id":26558,"nodeType":"StructuredDocumentation","src":"67013:52:50","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67079:11:50","parameters":{"id":26563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26560,"mutability":"mutable","name":"left","nameLocation":"67099:4:50","nodeType":"VariableDeclaration","scope":26565,"src":"67091:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67091:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26562,"mutability":"mutable","name":"right","nameLocation":"67113:5:50","nodeType":"VariableDeclaration","scope":26565,"src":"67105:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67105:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"67090:29:50"},"returnParameters":{"id":26564,"nodeType":"ParameterList","parameters":[],"src":"67133:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26575,"nodeType":"FunctionDefinition","src":"67254:87:50","nodes":[],"documentation":{"id":26566,"nodeType":"StructuredDocumentation","src":"67140:109:50","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67263:11:50","parameters":{"id":26573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26568,"mutability":"mutable","name":"left","nameLocation":"67283:4:50","nodeType":"VariableDeclaration","scope":26575,"src":"67275:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67275:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26570,"mutability":"mutable","name":"right","nameLocation":"67297:5:50","nodeType":"VariableDeclaration","scope":26575,"src":"67289:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67289:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26572,"mutability":"mutable","name":"error","nameLocation":"67320:5:50","nodeType":"VariableDeclaration","scope":26575,"src":"67304:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26571,"name":"string","nodeType":"ElementaryTypeName","src":"67304:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67274:52:50"},"returnParameters":{"id":26574,"nodeType":"ParameterList","parameters":[],"src":"67340:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26581,"nodeType":"FunctionDefinition","src":"67397:50:50","nodes":[],"documentation":{"id":26576,"nodeType":"StructuredDocumentation","src":"67347:45:50","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67406:10:50","parameters":{"id":26579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26578,"mutability":"mutable","name":"condition","nameLocation":"67422:9:50","nodeType":"VariableDeclaration","scope":26581,"src":"67417:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26577,"name":"bool","nodeType":"ElementaryTypeName","src":"67417:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67416:16:50"},"returnParameters":{"id":26580,"nodeType":"ParameterList","parameters":[],"src":"67446:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26589,"nodeType":"FunctionDefinition","src":"67560:73:50","nodes":[],"documentation":{"id":26582,"nodeType":"StructuredDocumentation","src":"67453:102:50","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67569:10:50","parameters":{"id":26587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26584,"mutability":"mutable","name":"condition","nameLocation":"67585:9:50","nodeType":"VariableDeclaration","scope":26589,"src":"67580:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26583,"name":"bool","nodeType":"ElementaryTypeName","src":"67580:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":26586,"mutability":"mutable","name":"error","nameLocation":"67612:5:50","nodeType":"VariableDeclaration","scope":26589,"src":"67596:21:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26585,"name":"string","nodeType":"ElementaryTypeName","src":"67596:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67579:39:50"},"returnParameters":{"id":26588,"nodeType":"ParameterList","parameters":[],"src":"67632:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26595,"nodeType":"FunctionDefinition","src":"67728:46:50","nodes":[],"documentation":{"id":26590,"nodeType":"StructuredDocumentation","src":"67639:84:50","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"67737:6:50","parameters":{"id":26593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26592,"mutability":"mutable","name":"condition","nameLocation":"67749:9:50","nodeType":"VariableDeclaration","scope":26595,"src":"67744:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26591,"name":"bool","nodeType":"ElementaryTypeName","src":"67744:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67743:16:50"},"returnParameters":{"id":26594,"nodeType":"ParameterList","parameters":[],"src":"67773:0:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26601,"nodeType":"FunctionDefinition","src":"67836:51:50","nodes":[],"documentation":{"id":26596,"nodeType":"StructuredDocumentation","src":"67780:51:50","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67845:10:50","parameters":{"id":26599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26598,"mutability":"mutable","name":"char","nameLocation":"67872:4:50","nodeType":"VariableDeclaration","scope":26601,"src":"67856:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26597,"name":"string","nodeType":"ElementaryTypeName","src":"67856:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67855:22:50"},"returnParameters":{"id":26600,"nodeType":"ParameterList","parameters":[],"src":"67886:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26609,"nodeType":"FunctionDefinition","src":"67961:63:50","nodes":[],"documentation":{"id":26602,"nodeType":"StructuredDocumentation","src":"67893:63:50","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67970:10:50","parameters":{"id":26607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26604,"mutability":"mutable","name":"char","nameLocation":"67997:4:50","nodeType":"VariableDeclaration","scope":26609,"src":"67981:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26603,"name":"string","nodeType":"ElementaryTypeName","src":"67981:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26606,"mutability":"mutable","name":"value","nameLocation":"68008:5:50","nodeType":"VariableDeclaration","scope":26609,"src":"68003:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26605,"name":"bool","nodeType":"ElementaryTypeName","src":"68003:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67980:34:50"},"returnParameters":{"id":26608,"nodeType":"ParameterList","parameters":[],"src":"68023:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26617,"nodeType":"FunctionDefinition","src":"68079:85:50","nodes":[],"documentation":{"id":26610,"nodeType":"StructuredDocumentation","src":"68030:44:50","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"68088:6:50","parameters":{"id":26613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26612,"mutability":"mutable","name":"rpcAlias","nameLocation":"68111:8:50","nodeType":"VariableDeclaration","scope":26617,"src":"68095:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26611,"name":"string","nodeType":"ElementaryTypeName","src":"68095:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68094:26:50"},"returnParameters":{"id":26616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26615,"mutability":"mutable","name":"json","nameLocation":"68158:4:50","nodeType":"VariableDeclaration","scope":26617,"src":"68144:18:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26614,"name":"string","nodeType":"ElementaryTypeName","src":"68144:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68143:20:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":26625,"nodeType":"FunctionDefinition","src":"68229:67:50","nodes":[],"documentation":{"id":26618,"nodeType":"StructuredDocumentation","src":"68170:54:50","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"68238:13:50","parameters":{"id":26619,"nodeType":"ParameterList","parameters":[],"src":"68251:2:50"},"returnParameters":{"id":26624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26623,"mutability":"mutable","name":"urls","nameLocation":"68290:4:50","nodeType":"VariableDeclaration","scope":26625,"src":"68277:17:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$23880_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":26621,"nodeType":"UserDefinedTypeName","pathNode":{"id":26620,"name":"Rpc","nameLocations":["68277:3:50"],"nodeType":"IdentifierPath","referencedDeclaration":23880,"src":"68277:3:50"},"referencedDeclaration":23880,"src":"68277:3:50","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$23880_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":26622,"nodeType":"ArrayTypeName","src":"68277:5:50","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$23880_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"68276:19:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":26634,"nodeType":"FunctionDefinition","src":"68367:67:50","nodes":[],"documentation":{"id":26626,"nodeType":"StructuredDocumentation","src":"68302:60:50","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"68376:7:50","parameters":{"id":26627,"nodeType":"ParameterList","parameters":[],"src":"68383:2:50"},"returnParameters":{"id":26633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26632,"mutability":"mutable","name":"urls","nameLocation":"68428:4:50","nodeType":"VariableDeclaration","scope":26634,"src":"68409:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":26628,"name":"string","nodeType":"ElementaryTypeName","src":"68409:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26630,"length":{"hexValue":"32","id":26629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68416:1:50","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"68409:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":26631,"nodeType":"ArrayTypeName","src":"68409:11:50","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"68408:25:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":26640,"nodeType":"FunctionDefinition","src":"68515:42:50","nodes":[],"documentation":{"id":26635,"nodeType":"StructuredDocumentation","src":"68440:70:50","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"68524:5:50","parameters":{"id":26638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26637,"mutability":"mutable","name":"duration","nameLocation":"68538:8:50","nodeType":"VariableDeclaration","scope":26640,"src":"68530:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26636,"name":"uint256","nodeType":"ElementaryTypeName","src":"68530:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68529:18:50"},"returnParameters":{"id":26639,"nodeType":"ParameterList","parameters":[],"src":"68556:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26650,"nodeType":"FunctionDefinition","src":"68642:95:50","nodes":[],"documentation":{"id":26641,"nodeType":"StructuredDocumentation","src":"68594:43:50","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"68651:13:50","parameters":{"id":26646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26643,"mutability":"mutable","name":"toml","nameLocation":"68681:4:50","nodeType":"VariableDeclaration","scope":26650,"src":"68665:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26642,"name":"string","nodeType":"ElementaryTypeName","src":"68665:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26645,"mutability":"mutable","name":"key","nameLocation":"68703:3:50","nodeType":"VariableDeclaration","scope":26650,"src":"68687:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26644,"name":"string","nodeType":"ElementaryTypeName","src":"68687:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68664:43:50"},"returnParameters":{"id":26649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26650,"src":"68731:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26647,"name":"bool","nodeType":"ElementaryTypeName","src":"68731:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68730:6:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":26660,"nodeType":"FunctionDefinition","src":"68818:101:50","nodes":[],"documentation":{"id":26651,"nodeType":"StructuredDocumentation","src":"68743:70:50","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"68827:16:50","parameters":{"id":26656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26653,"mutability":"mutable","name":"toml","nameLocation":"68860:4:50","nodeType":"VariableDeclaration","scope":26660,"src":"68844:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26652,"name":"string","nodeType":"ElementaryTypeName","src":"68844:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26655,"mutability":"mutable","name":"key","nameLocation":"68882:3:50","nodeType":"VariableDeclaration","scope":26660,"src":"68866:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26654,"name":"string","nodeType":"ElementaryTypeName","src":"68866:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68843:43:50"},"returnParameters":{"id":26659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26660,"src":"68910:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26657,"name":"address","nodeType":"ElementaryTypeName","src":"68910:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68909:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26671,"nodeType":"FunctionDefinition","src":"69002:139:50","nodes":[],"documentation":{"id":26661,"nodeType":"StructuredDocumentation","src":"68925:72:50","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"69011:21:50","parameters":{"id":26666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26663,"mutability":"mutable","name":"toml","nameLocation":"69049:4:50","nodeType":"VariableDeclaration","scope":26671,"src":"69033:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26662,"name":"string","nodeType":"ElementaryTypeName","src":"69033:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26665,"mutability":"mutable","name":"key","nameLocation":"69071:3:50","nodeType":"VariableDeclaration","scope":26671,"src":"69055:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26664,"name":"string","nodeType":"ElementaryTypeName","src":"69055:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69032:43:50"},"returnParameters":{"id":26670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26671,"src":"69123:16:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":26667,"name":"address","nodeType":"ElementaryTypeName","src":"69123:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":26668,"nodeType":"ArrayTypeName","src":"69123:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69122:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26681,"nodeType":"FunctionDefinition","src":"69219:95:50","nodes":[],"documentation":{"id":26672,"nodeType":"StructuredDocumentation","src":"69147:67:50","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"69228:13:50","parameters":{"id":26677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26674,"mutability":"mutable","name":"toml","nameLocation":"69258:4:50","nodeType":"VariableDeclaration","scope":26681,"src":"69242:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26673,"name":"string","nodeType":"ElementaryTypeName","src":"69242:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26676,"mutability":"mutable","name":"key","nameLocation":"69280:3:50","nodeType":"VariableDeclaration","scope":26681,"src":"69264:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26675,"name":"string","nodeType":"ElementaryTypeName","src":"69264:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69241:43:50"},"returnParameters":{"id":26680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26681,"src":"69308:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26678,"name":"bool","nodeType":"ElementaryTypeName","src":"69308:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69307:6:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26692,"nodeType":"FunctionDefinition","src":"69394:109:50","nodes":[],"documentation":{"id":26682,"nodeType":"StructuredDocumentation","src":"69320:69:50","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"69403:18:50","parameters":{"id":26687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26684,"mutability":"mutable","name":"toml","nameLocation":"69438:4:50","nodeType":"VariableDeclaration","scope":26692,"src":"69422:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26683,"name":"string","nodeType":"ElementaryTypeName","src":"69422:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26686,"mutability":"mutable","name":"key","nameLocation":"69460:3:50","nodeType":"VariableDeclaration","scope":26692,"src":"69444:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26685,"name":"string","nodeType":"ElementaryTypeName","src":"69444:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69421:43:50"},"returnParameters":{"id":26691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26692,"src":"69488:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":26688,"name":"bool","nodeType":"ElementaryTypeName","src":"69488:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26689,"nodeType":"ArrayTypeName","src":"69488:6:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69487:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26702,"nodeType":"FunctionDefinition","src":"69582:104:50","nodes":[],"documentation":{"id":26693,"nodeType":"StructuredDocumentation","src":"69509:68:50","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"69591:14:50","parameters":{"id":26698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26695,"mutability":"mutable","name":"toml","nameLocation":"69622:4:50","nodeType":"VariableDeclaration","scope":26702,"src":"69606:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26694,"name":"string","nodeType":"ElementaryTypeName","src":"69606:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26697,"mutability":"mutable","name":"key","nameLocation":"69644:3:50","nodeType":"VariableDeclaration","scope":26702,"src":"69628:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26696,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69605:43:50"},"returnParameters":{"id":26701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26702,"src":"69672:12:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":26699,"name":"bytes","nodeType":"ElementaryTypeName","src":"69672:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69671:14:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26712,"nodeType":"FunctionDefinition","src":"69767:101:50","nodes":[],"documentation":{"id":26703,"nodeType":"StructuredDocumentation","src":"69692:70:50","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"69776:16:50","parameters":{"id":26708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26705,"mutability":"mutable","name":"toml","nameLocation":"69809:4:50","nodeType":"VariableDeclaration","scope":26712,"src":"69793:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26704,"name":"string","nodeType":"ElementaryTypeName","src":"69793:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26707,"mutability":"mutable","name":"key","nameLocation":"69831:3:50","nodeType":"VariableDeclaration","scope":26712,"src":"69815:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26706,"name":"string","nodeType":"ElementaryTypeName","src":"69815:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69792:43:50"},"returnParameters":{"id":26711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26712,"src":"69859:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69859:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69858:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26723,"nodeType":"FunctionDefinition","src":"69951:139:50","nodes":[],"documentation":{"id":26713,"nodeType":"StructuredDocumentation","src":"69874:72:50","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"69960:21:50","parameters":{"id":26718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26715,"mutability":"mutable","name":"toml","nameLocation":"69998:4:50","nodeType":"VariableDeclaration","scope":26723,"src":"69982:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26714,"name":"string","nodeType":"ElementaryTypeName","src":"69982:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26717,"mutability":"mutable","name":"key","nameLocation":"70020:3:50","nodeType":"VariableDeclaration","scope":26723,"src":"70004:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26716,"name":"string","nodeType":"ElementaryTypeName","src":"70004:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69981:43:50"},"returnParameters":{"id":26722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26723,"src":"70072:16:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":26719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70072:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26720,"nodeType":"ArrayTypeName","src":"70072:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70071:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26734,"nodeType":"FunctionDefinition","src":"70171:111:50","nodes":[],"documentation":{"id":26724,"nodeType":"StructuredDocumentation","src":"70096:70:50","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"70180:19:50","parameters":{"id":26729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26726,"mutability":"mutable","name":"toml","nameLocation":"70216:4:50","nodeType":"VariableDeclaration","scope":26734,"src":"70200:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26725,"name":"string","nodeType":"ElementaryTypeName","src":"70200:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26728,"mutability":"mutable","name":"key","nameLocation":"70238:3:50","nodeType":"VariableDeclaration","scope":26734,"src":"70222:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26727,"name":"string","nodeType":"ElementaryTypeName","src":"70222:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70199:43:50"},"returnParameters":{"id":26733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26734,"src":"70266:14:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":26730,"name":"bytes","nodeType":"ElementaryTypeName","src":"70266:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":26731,"nodeType":"ArrayTypeName","src":"70266:7:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70265:16:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26744,"nodeType":"FunctionDefinition","src":"70362:96:50","nodes":[],"documentation":{"id":26735,"nodeType":"StructuredDocumentation","src":"70288:69:50","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"70371:12:50","parameters":{"id":26740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26737,"mutability":"mutable","name":"toml","nameLocation":"70400:4:50","nodeType":"VariableDeclaration","scope":26744,"src":"70384:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26736,"name":"string","nodeType":"ElementaryTypeName","src":"70384:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26739,"mutability":"mutable","name":"key","nameLocation":"70422:3:50","nodeType":"VariableDeclaration","scope":26744,"src":"70406:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26738,"name":"string","nodeType":"ElementaryTypeName","src":"70406:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70383:43:50"},"returnParameters":{"id":26743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26744,"src":"70450:6:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":26741,"name":"int256","nodeType":"ElementaryTypeName","src":"70450:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70449:8:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26755,"nodeType":"FunctionDefinition","src":"70540:110:50","nodes":[],"documentation":{"id":26745,"nodeType":"StructuredDocumentation","src":"70464:71:50","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"70549:17:50","parameters":{"id":26750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26747,"mutability":"mutable","name":"toml","nameLocation":"70583:4:50","nodeType":"VariableDeclaration","scope":26755,"src":"70567:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26746,"name":"string","nodeType":"ElementaryTypeName","src":"70567:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26749,"mutability":"mutable","name":"key","nameLocation":"70605:3:50","nodeType":"VariableDeclaration","scope":26755,"src":"70589:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26748,"name":"string","nodeType":"ElementaryTypeName","src":"70589:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70566:43:50"},"returnParameters":{"id":26754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26755,"src":"70633:15:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":26751,"name":"int256","nodeType":"ElementaryTypeName","src":"70633:6:50","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":26752,"nodeType":"ArrayTypeName","src":"70633:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70632:17:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26766,"nodeType":"FunctionDefinition","src":"70714:111:50","nodes":[],"documentation":{"id":26756,"nodeType":"StructuredDocumentation","src":"70656:53:50","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"70723:13:50","parameters":{"id":26761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26758,"mutability":"mutable","name":"toml","nameLocation":"70753:4:50","nodeType":"VariableDeclaration","scope":26766,"src":"70737:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26757,"name":"string","nodeType":"ElementaryTypeName","src":"70737:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26760,"mutability":"mutable","name":"key","nameLocation":"70775:3:50","nodeType":"VariableDeclaration","scope":26766,"src":"70759:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26759,"name":"string","nodeType":"ElementaryTypeName","src":"70759:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70736:43:50"},"returnParameters":{"id":26765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26764,"mutability":"mutable","name":"keys","nameLocation":"70819:4:50","nodeType":"VariableDeclaration","scope":26766,"src":"70803:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":26762,"name":"string","nodeType":"ElementaryTypeName","src":"70803:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26763,"nodeType":"ArrayTypeName","src":"70803:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"70802:22:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26776,"nodeType":"FunctionDefinition","src":"70905:106:50","nodes":[],"documentation":{"id":26767,"nodeType":"StructuredDocumentation","src":"70831:69:50","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"70914:15:50","parameters":{"id":26772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26769,"mutability":"mutable","name":"toml","nameLocation":"70946:4:50","nodeType":"VariableDeclaration","scope":26776,"src":"70930:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26768,"name":"string","nodeType":"ElementaryTypeName","src":"70930:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26771,"mutability":"mutable","name":"key","nameLocation":"70968:3:50","nodeType":"VariableDeclaration","scope":26776,"src":"70952:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26770,"name":"string","nodeType":"ElementaryTypeName","src":"70952:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70929:43:50"},"returnParameters":{"id":26775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26776,"src":"70996:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26773,"name":"string","nodeType":"ElementaryTypeName","src":"70996:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70995:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26787,"nodeType":"FunctionDefinition","src":"71093:113:50","nodes":[],"documentation":{"id":26777,"nodeType":"StructuredDocumentation","src":"71017:71:50","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"71102:20:50","parameters":{"id":26782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26779,"mutability":"mutable","name":"toml","nameLocation":"71139:4:50","nodeType":"VariableDeclaration","scope":26787,"src":"71123:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26778,"name":"string","nodeType":"ElementaryTypeName","src":"71123:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26781,"mutability":"mutable","name":"key","nameLocation":"71161:3:50","nodeType":"VariableDeclaration","scope":26787,"src":"71145:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26780,"name":"string","nodeType":"ElementaryTypeName","src":"71145:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71122:43:50"},"returnParameters":{"id":26786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26787,"src":"71189:15:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":26783,"name":"string","nodeType":"ElementaryTypeName","src":"71189:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":26784,"nodeType":"ArrayTypeName","src":"71189:8:50","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71188:17:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26797,"nodeType":"FunctionDefinition","src":"71287:98:50","nodes":[],"documentation":{"id":26788,"nodeType":"StructuredDocumentation","src":"71212:70:50","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"71296:13:50","parameters":{"id":26793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26790,"mutability":"mutable","name":"toml","nameLocation":"71326:4:50","nodeType":"VariableDeclaration","scope":26797,"src":"71310:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26789,"name":"string","nodeType":"ElementaryTypeName","src":"71310:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26792,"mutability":"mutable","name":"key","nameLocation":"71348:3:50","nodeType":"VariableDeclaration","scope":26797,"src":"71332:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26791,"name":"string","nodeType":"ElementaryTypeName","src":"71332:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71309:43:50"},"returnParameters":{"id":26796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26797,"src":"71376:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26794,"name":"uint256","nodeType":"ElementaryTypeName","src":"71376:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71375:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26808,"nodeType":"FunctionDefinition","src":"71468:112:50","nodes":[],"documentation":{"id":26798,"nodeType":"StructuredDocumentation","src":"71391:72:50","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"71477:18:50","parameters":{"id":26803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26800,"mutability":"mutable","name":"toml","nameLocation":"71512:4:50","nodeType":"VariableDeclaration","scope":26808,"src":"71496:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26799,"name":"string","nodeType":"ElementaryTypeName","src":"71496:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26802,"mutability":"mutable","name":"key","nameLocation":"71534:3:50","nodeType":"VariableDeclaration","scope":26808,"src":"71518:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26801,"name":"string","nodeType":"ElementaryTypeName","src":"71518:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71495:43:50"},"returnParameters":{"id":26807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26808,"src":"71562:16:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":26804,"name":"uint256","nodeType":"ElementaryTypeName","src":"71562:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26805,"nodeType":"ArrayTypeName","src":"71562:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71561:18:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26816,"nodeType":"FunctionDefinition","src":"71620:93:50","nodes":[],"documentation":{"id":26809,"nodeType":"StructuredDocumentation","src":"71586:29:50","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71629:9:50","parameters":{"id":26812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26811,"mutability":"mutable","name":"toml","nameLocation":"71655:4:50","nodeType":"VariableDeclaration","scope":26816,"src":"71639:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26810,"name":"string","nodeType":"ElementaryTypeName","src":"71639:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71638:22:50"},"returnParameters":{"id":26815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26814,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71697:14:50","nodeType":"VariableDeclaration","scope":26816,"src":"71684:27:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":26813,"name":"bytes","nodeType":"ElementaryTypeName","src":"71684:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71683:29:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26826,"nodeType":"FunctionDefinition","src":"71762:114:50","nodes":[],"documentation":{"id":26817,"nodeType":"StructuredDocumentation","src":"71719:38:50","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71771:9:50","parameters":{"id":26822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26819,"mutability":"mutable","name":"toml","nameLocation":"71797:4:50","nodeType":"VariableDeclaration","scope":26826,"src":"71781:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26818,"name":"string","nodeType":"ElementaryTypeName","src":"71781:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26821,"mutability":"mutable","name":"key","nameLocation":"71819:3:50","nodeType":"VariableDeclaration","scope":26826,"src":"71803:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26820,"name":"string","nodeType":"ElementaryTypeName","src":"71803:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71780:43:50"},"returnParameters":{"id":26825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26824,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71860:14:50","nodeType":"VariableDeclaration","scope":26826,"src":"71847:27:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":26823,"name":"bytes","nodeType":"ElementaryTypeName","src":"71847:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71846:29:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26834,"nodeType":"FunctionDefinition","src":"71969:72:50","nodes":[],"documentation":{"id":26827,"nodeType":"StructuredDocumentation","src":"71882:82:50","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"71978:9:50","parameters":{"id":26832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26829,"mutability":"mutable","name":"json","nameLocation":"72004:4:50","nodeType":"VariableDeclaration","scope":26834,"src":"71988:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26828,"name":"string","nodeType":"ElementaryTypeName","src":"71988:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26831,"mutability":"mutable","name":"path","nameLocation":"72026:4:50","nodeType":"VariableDeclaration","scope":26834,"src":"72010:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26830,"name":"string","nodeType":"ElementaryTypeName","src":"72010:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71987:44:50"},"returnParameters":{"id":26833,"nodeType":"ParameterList","parameters":[],"src":"72040:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26844,"nodeType":"FunctionDefinition","src":"72310:98:50","nodes":[],"documentation":{"id":26835,"nodeType":"StructuredDocumentation","src":"72047:258:50","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"72319:9:50","parameters":{"id":26842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26837,"mutability":"mutable","name":"json","nameLocation":"72345:4:50","nodeType":"VariableDeclaration","scope":26844,"src":"72329:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26836,"name":"string","nodeType":"ElementaryTypeName","src":"72329:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26839,"mutability":"mutable","name":"path","nameLocation":"72367:4:50","nodeType":"VariableDeclaration","scope":26844,"src":"72351:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26838,"name":"string","nodeType":"ElementaryTypeName","src":"72351:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26841,"mutability":"mutable","name":"valueKey","nameLocation":"72389:8:50","nodeType":"VariableDeclaration","scope":26844,"src":"72373:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26840,"name":"string","nodeType":"ElementaryTypeName","src":"72373:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72328:70:50"},"returnParameters":{"id":26843,"nodeType":"ParameterList","parameters":[],"src":"72407:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26856,"nodeType":"FunctionDefinition","src":"72547:141:50","nodes":[],"documentation":{"id":26845,"nodeType":"StructuredDocumentation","src":"72450:92:50","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72556:21:50","parameters":{"id":26852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26847,"mutability":"mutable","name":"salt","nameLocation":"72586:4:50","nodeType":"VariableDeclaration","scope":26856,"src":"72578:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72578:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26849,"mutability":"mutable","name":"initCodeHash","nameLocation":"72600:12:50","nodeType":"VariableDeclaration","scope":26856,"src":"72592:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72592:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26851,"mutability":"mutable","name":"deployer","nameLocation":"72622:8:50","nodeType":"VariableDeclaration","scope":26856,"src":"72614:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26850,"name":"address","nodeType":"ElementaryTypeName","src":"72614:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72577:54:50"},"returnParameters":{"id":26855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26856,"src":"72679:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26853,"name":"address","nodeType":"ElementaryTypeName","src":"72679:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72678:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26866,"nodeType":"FunctionDefinition","src":"72793:99:50","nodes":[],"documentation":{"id":26857,"nodeType":"StructuredDocumentation","src":"72694:94:50","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72802:21:50","parameters":{"id":26862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26859,"mutability":"mutable","name":"salt","nameLocation":"72832:4:50","nodeType":"VariableDeclaration","scope":26866,"src":"72824:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72824:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26861,"mutability":"mutable","name":"initCodeHash","nameLocation":"72846:12:50","nodeType":"VariableDeclaration","scope":26866,"src":"72838:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72838:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72823:36:50"},"returnParameters":{"id":26865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26866,"src":"72883:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26863,"name":"address","nodeType":"ElementaryTypeName","src":"72883:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72882:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26876,"nodeType":"FunctionDefinition","src":"72997:95:50","nodes":[],"documentation":{"id":26867,"nodeType":"StructuredDocumentation","src":"72898:94:50","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"73006:20:50","parameters":{"id":26872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26869,"mutability":"mutable","name":"deployer","nameLocation":"73035:8:50","nodeType":"VariableDeclaration","scope":26876,"src":"73027:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26868,"name":"address","nodeType":"ElementaryTypeName","src":"73027:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26871,"mutability":"mutable","name":"nonce","nameLocation":"73053:5:50","nodeType":"VariableDeclaration","scope":26876,"src":"73045:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26870,"name":"uint256","nodeType":"ElementaryTypeName","src":"73045:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73026:33:50"},"returnParameters":{"id":26875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26876,"src":"73083:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26873,"name":"address","nodeType":"ElementaryTypeName","src":"73083:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73082:9:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26885,"nodeType":"FunctionDefinition","src":"73202:91:50","nodes":[],"documentation":{"id":26877,"nodeType":"StructuredDocumentation","src":"73098:99:50","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73211:12:50","parameters":{"id":26880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26879,"mutability":"mutable","name":"walletLabel","nameLocation":"73240:11:50","nodeType":"VariableDeclaration","scope":26885,"src":"73224:27:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26878,"name":"string","nodeType":"ElementaryTypeName","src":"73224:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73223:29:50"},"returnParameters":{"id":26884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26883,"mutability":"mutable","name":"wallet","nameLocation":"73285:6:50","nodeType":"VariableDeclaration","scope":26885,"src":"73271:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":26882,"nodeType":"UserDefinedTypeName","pathNode":{"id":26881,"name":"Wallet","nameLocations":["73271:6:50"],"nodeType":"IdentifierPath","referencedDeclaration":23939,"src":"73271:6:50"},"referencedDeclaration":23939,"src":"73271:6:50","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73270:22:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26894,"nodeType":"FunctionDefinition","src":"73371:82:50","nodes":[],"documentation":{"id":26886,"nodeType":"StructuredDocumentation","src":"73299:67:50","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73380:12:50","parameters":{"id":26889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26888,"mutability":"mutable","name":"privateKey","nameLocation":"73401:10:50","nodeType":"VariableDeclaration","scope":26894,"src":"73393:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26887,"name":"uint256","nodeType":"ElementaryTypeName","src":"73393:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73392:20:50"},"returnParameters":{"id":26893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26892,"mutability":"mutable","name":"wallet","nameLocation":"73445:6:50","nodeType":"VariableDeclaration","scope":26894,"src":"73431:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":26891,"nodeType":"UserDefinedTypeName","pathNode":{"id":26890,"name":"Wallet","nameLocations":["73431:6:50"],"nodeType":"IdentifierPath","referencedDeclaration":23939,"src":"73431:6:50"},"referencedDeclaration":23939,"src":"73431:6:50","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73430:22:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26905,"nodeType":"FunctionDefinition","src":"73567:111:50","nodes":[],"documentation":{"id":26895,"nodeType":"StructuredDocumentation","src":"73459:103:50","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73576:12:50","parameters":{"id":26900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26897,"mutability":"mutable","name":"privateKey","nameLocation":"73597:10:50","nodeType":"VariableDeclaration","scope":26905,"src":"73589:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26896,"name":"uint256","nodeType":"ElementaryTypeName","src":"73589:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":26899,"mutability":"mutable","name":"walletLabel","nameLocation":"73625:11:50","nodeType":"VariableDeclaration","scope":26905,"src":"73609:27:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26898,"name":"string","nodeType":"ElementaryTypeName","src":"73609:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73588:49:50"},"returnParameters":{"id":26904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26903,"mutability":"mutable","name":"wallet","nameLocation":"73670:6:50","nodeType":"VariableDeclaration","scope":26905,"src":"73656:20:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":26902,"nodeType":"UserDefinedTypeName","pathNode":{"id":26901,"name":"Wallet","nameLocations":["73656:6:50"],"nodeType":"IdentifierPath","referencedDeclaration":23939,"src":"73656:6:50"},"referencedDeclaration":23939,"src":"73656:6:50","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73655:22:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26915,"nodeType":"FunctionDefinition","src":"73826:102:50","nodes":[],"documentation":{"id":26906,"nodeType":"StructuredDocumentation","src":"73684:137:50","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"73835:9:50","parameters":{"id":26911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26908,"mutability":"mutable","name":"mnemonic","nameLocation":"73861:8:50","nodeType":"VariableDeclaration","scope":26915,"src":"73845:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26907,"name":"string","nodeType":"ElementaryTypeName","src":"73845:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26910,"mutability":"mutable","name":"index","nameLocation":"73878:5:50","nodeType":"VariableDeclaration","scope":26915,"src":"73871:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":26909,"name":"uint32","nodeType":"ElementaryTypeName","src":"73871:6:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"73844:40:50"},"returnParameters":{"id":26914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26913,"mutability":"mutable","name":"privateKey","nameLocation":"73916:10:50","nodeType":"VariableDeclaration","scope":26915,"src":"73908:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26912,"name":"uint256","nodeType":"ElementaryTypeName","src":"73908:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73907:20:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26927,"nodeType":"FunctionDefinition","src":"74057:158:50","nodes":[],"documentation":{"id":26916,"nodeType":"StructuredDocumentation","src":"73934:118:50","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74066:9:50","parameters":{"id":26923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26918,"mutability":"mutable","name":"mnemonic","nameLocation":"74092:8:50","nodeType":"VariableDeclaration","scope":26927,"src":"74076:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26917,"name":"string","nodeType":"ElementaryTypeName","src":"74076:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26920,"mutability":"mutable","name":"derivationPath","nameLocation":"74118:14:50","nodeType":"VariableDeclaration","scope":26927,"src":"74102:30:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26919,"name":"string","nodeType":"ElementaryTypeName","src":"74102:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26922,"mutability":"mutable","name":"index","nameLocation":"74141:5:50","nodeType":"VariableDeclaration","scope":26927,"src":"74134:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":26921,"name":"uint32","nodeType":"ElementaryTypeName","src":"74134:6:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74075:72:50"},"returnParameters":{"id":26926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26925,"mutability":"mutable","name":"privateKey","nameLocation":"74203:10:50","nodeType":"VariableDeclaration","scope":26927,"src":"74195:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26924,"name":"uint256","nodeType":"ElementaryTypeName","src":"74195:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74194:20:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26939,"nodeType":"FunctionDefinition","src":"74389:152:50","nodes":[],"documentation":{"id":26928,"nodeType":"StructuredDocumentation","src":"74221:163:50","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74398:9:50","parameters":{"id":26935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26930,"mutability":"mutable","name":"mnemonic","nameLocation":"74424:8:50","nodeType":"VariableDeclaration","scope":26939,"src":"74408:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26929,"name":"string","nodeType":"ElementaryTypeName","src":"74408:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26932,"mutability":"mutable","name":"index","nameLocation":"74441:5:50","nodeType":"VariableDeclaration","scope":26939,"src":"74434:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":26931,"name":"uint32","nodeType":"ElementaryTypeName","src":"74434:6:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":26934,"mutability":"mutable","name":"language","nameLocation":"74464:8:50","nodeType":"VariableDeclaration","scope":26939,"src":"74448:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26933,"name":"string","nodeType":"ElementaryTypeName","src":"74448:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74407:66:50"},"returnParameters":{"id":26938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26937,"mutability":"mutable","name":"privateKey","nameLocation":"74529:10:50","nodeType":"VariableDeclaration","scope":26939,"src":"74521:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26936,"name":"uint256","nodeType":"ElementaryTypeName","src":"74521:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74520:20:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26953,"nodeType":"FunctionDefinition","src":"74696:184:50","nodes":[],"documentation":{"id":26940,"nodeType":"StructuredDocumentation","src":"74547:144:50","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74705:9:50","parameters":{"id":26949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26942,"mutability":"mutable","name":"mnemonic","nameLocation":"74731:8:50","nodeType":"VariableDeclaration","scope":26953,"src":"74715:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26941,"name":"string","nodeType":"ElementaryTypeName","src":"74715:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26944,"mutability":"mutable","name":"derivationPath","nameLocation":"74757:14:50","nodeType":"VariableDeclaration","scope":26953,"src":"74741:30:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26943,"name":"string","nodeType":"ElementaryTypeName","src":"74741:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":26946,"mutability":"mutable","name":"index","nameLocation":"74780:5:50","nodeType":"VariableDeclaration","scope":26953,"src":"74773:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":26945,"name":"uint32","nodeType":"ElementaryTypeName","src":"74773:6:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":26948,"mutability":"mutable","name":"language","nameLocation":"74803:8:50","nodeType":"VariableDeclaration","scope":26953,"src":"74787:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26947,"name":"string","nodeType":"ElementaryTypeName","src":"74787:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74714:98:50"},"returnParameters":{"id":26952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26951,"mutability":"mutable","name":"privateKey","nameLocation":"74868:10:50","nodeType":"VariableDeclaration","scope":26953,"src":"74860:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26950,"name":"uint256","nodeType":"ElementaryTypeName","src":"74860:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74859:20:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":26961,"nodeType":"FunctionDefinition","src":"74936:86:50","nodes":[],"documentation":{"id":26954,"nodeType":"StructuredDocumentation","src":"74886:45:50","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"74945:8:50","parameters":{"id":26957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26956,"mutability":"mutable","name":"account","nameLocation":"74962:7:50","nodeType":"VariableDeclaration","scope":26961,"src":"74954:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26955,"name":"address","nodeType":"ElementaryTypeName","src":"74954:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"74953:17:50"},"returnParameters":{"id":26960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26959,"mutability":"mutable","name":"currentLabel","nameLocation":"75008:12:50","nodeType":"VariableDeclaration","scope":26961,"src":"74994:26:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26958,"name":"string","nodeType":"ElementaryTypeName","src":"74994:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74993:28:50"},"scope":27034,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":26970,"nodeType":"FunctionDefinition","src":"75060:74:50","nodes":[],"documentation":{"id":26962,"nodeType":"StructuredDocumentation","src":"75028:27:50","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"75069:8:50","parameters":{"id":26966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26965,"mutability":"mutable","name":"wallet","nameLocation":"75094:6:50","nodeType":"VariableDeclaration","scope":26970,"src":"75078:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":26964,"nodeType":"UserDefinedTypeName","pathNode":{"id":26963,"name":"Wallet","nameLocations":["75078:6:50"],"nodeType":"IdentifierPath","referencedDeclaration":23939,"src":"75078:6:50"},"referencedDeclaration":23939,"src":"75078:6:50","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75077:24:50"},"returnParameters":{"id":26969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26968,"mutability":"mutable","name":"nonce","nameLocation":"75127:5:50","nodeType":"VariableDeclaration","scope":26970,"src":"75120:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":26967,"name":"uint64","nodeType":"ElementaryTypeName","src":"75120:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"75119:14:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26978,"nodeType":"FunctionDefinition","src":"75182:67:50","nodes":[],"documentation":{"id":26971,"nodeType":"StructuredDocumentation","src":"75140:37:50","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"75191:5:50","parameters":{"id":26976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26973,"mutability":"mutable","name":"account","nameLocation":"75205:7:50","nodeType":"VariableDeclaration","scope":26978,"src":"75197:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26972,"name":"address","nodeType":"ElementaryTypeName","src":"75197:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26975,"mutability":"mutable","name":"newLabel","nameLocation":"75230:8:50","nodeType":"VariableDeclaration","scope":26978,"src":"75214:24:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":26974,"name":"string","nodeType":"ElementaryTypeName","src":"75214:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75196:43:50"},"returnParameters":{"id":26977,"nodeType":"ParameterList","parameters":[],"src":"75248:0:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":26986,"nodeType":"FunctionDefinition","src":"75333:76:50","nodes":[],"documentation":{"id":26979,"nodeType":"StructuredDocumentation","src":"75255:73:50","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"75342:11:50","parameters":{"id":26982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26981,"mutability":"mutable","name":"privateKey","nameLocation":"75362:10:50","nodeType":"VariableDeclaration","scope":26986,"src":"75354:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26980,"name":"uint256","nodeType":"ElementaryTypeName","src":"75354:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75353:20:50"},"returnParameters":{"id":26985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26984,"mutability":"mutable","name":"keyAddr","nameLocation":"75400:7:50","nodeType":"VariableDeclaration","scope":26986,"src":"75392:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26983,"name":"address","nodeType":"ElementaryTypeName","src":"75392:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75391:17:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27001,"nodeType":"FunctionDefinition","src":"75451:103:50","nodes":[],"documentation":{"id":26987,"nodeType":"StructuredDocumentation","src":"75415:31:50","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"75460:4:50","parameters":{"id":26993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26990,"mutability":"mutable","name":"wallet","nameLocation":"75481:6:50","nodeType":"VariableDeclaration","scope":27001,"src":"75465:22:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":26989,"nodeType":"UserDefinedTypeName","pathNode":{"id":26988,"name":"Wallet","nameLocations":["75465:6:50"],"nodeType":"IdentifierPath","referencedDeclaration":23939,"src":"75465:6:50"},"referencedDeclaration":23939,"src":"75465:6:50","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$23939_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":26992,"mutability":"mutable","name":"digest","nameLocation":"75497:6:50","nodeType":"VariableDeclaration","scope":27001,"src":"75489:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75489:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75464:40:50"},"returnParameters":{"id":27000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26995,"mutability":"mutable","name":"v","nameLocation":"75529:1:50","nodeType":"VariableDeclaration","scope":27001,"src":"75523:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":26994,"name":"uint8","nodeType":"ElementaryTypeName","src":"75523:5:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":26997,"mutability":"mutable","name":"r","nameLocation":"75540:1:50","nodeType":"VariableDeclaration","scope":27001,"src":"75532:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75532:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26999,"mutability":"mutable","name":"s","nameLocation":"75551:1:50","nodeType":"VariableDeclaration","scope":27001,"src":"75543:9:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75543:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75522:31:50"},"scope":27034,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27009,"nodeType":"FunctionDefinition","src":"75615:80:50","nodes":[],"documentation":{"id":27002,"nodeType":"StructuredDocumentation","src":"75560:50:50","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75624:11:50","parameters":{"id":27005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27004,"mutability":"mutable","name":"data","nameLocation":"75651:4:50","nodeType":"VariableDeclaration","scope":27009,"src":"75636:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27003,"name":"bytes","nodeType":"ElementaryTypeName","src":"75636:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75635:21:50"},"returnParameters":{"id":27008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27009,"src":"75680:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27006,"name":"string","nodeType":"ElementaryTypeName","src":"75680:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75679:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":27017,"nodeType":"FunctionDefinition","src":"75757:81:50","nodes":[],"documentation":{"id":27010,"nodeType":"StructuredDocumentation","src":"75701:51:50","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75766:11:50","parameters":{"id":27013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27012,"mutability":"mutable","name":"data","nameLocation":"75794:4:50","nodeType":"VariableDeclaration","scope":27017,"src":"75778:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27011,"name":"string","nodeType":"ElementaryTypeName","src":"75778:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75777:22:50"},"returnParameters":{"id":27016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27017,"src":"75823:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27014,"name":"string","nodeType":"ElementaryTypeName","src":"75823:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75822:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":27025,"nodeType":"FunctionDefinition","src":"75896:77:50","nodes":[],"documentation":{"id":27018,"nodeType":"StructuredDocumentation","src":"75844:47:50","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"75905:8:50","parameters":{"id":27021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27020,"mutability":"mutable","name":"data","nameLocation":"75929:4:50","nodeType":"VariableDeclaration","scope":27025,"src":"75914:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27019,"name":"bytes","nodeType":"ElementaryTypeName","src":"75914:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75913:21:50"},"returnParameters":{"id":27024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27025,"src":"75958:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27022,"name":"string","nodeType":"ElementaryTypeName","src":"75958:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75957:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":27033,"nodeType":"FunctionDefinition","src":"76032:78:50","nodes":[],"documentation":{"id":27026,"nodeType":"StructuredDocumentation","src":"75979:48:50","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76041:8:50","parameters":{"id":27029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27028,"mutability":"mutable","name":"data","nameLocation":"76066:4:50","nodeType":"VariableDeclaration","scope":27033,"src":"76050:20:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27027,"name":"string","nodeType":"ElementaryTypeName","src":"76050:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76049:22:50"},"returnParameters":{"id":27032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27033,"src":"76095:13:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27030,"name":"string","nodeType":"ElementaryTypeName","src":"76095:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76094:15:50"},"scope":27034,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":23834,"nodeType":"StructuredDocumentation","src":"184:225:50","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[27034],"name":"VmSafe","nameLocation":"419:6:50","scope":27636,"usedErrors":[],"usedEvents":[]},{"id":27635,"nodeType":"ContractDefinition","src":"76285:14386:50","nodes":[{"id":27043,"nodeType":"FunctionDefinition","src":"76445:61:50","nodes":[],"documentation":{"id":27038,"nodeType":"StructuredDocumentation","src":"76344:96:50","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"76454:10:50","parameters":{"id":27039,"nodeType":"ParameterList","parameters":[],"src":"76464:2:50"},"returnParameters":{"id":27042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27041,"mutability":"mutable","name":"forkId","nameLocation":"76498:6:50","nodeType":"VariableDeclaration","scope":27043,"src":"76490:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27040,"name":"uint256","nodeType":"ElementaryTypeName","src":"76490:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76489:16:50"},"scope":27635,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":27049,"nodeType":"FunctionDefinition","src":"76590:51:50","nodes":[],"documentation":{"id":27044,"nodeType":"StructuredDocumentation","src":"76512:73:50","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"76599:15:50","parameters":{"id":27047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27046,"mutability":"mutable","name":"account","nameLocation":"76623:7:50","nodeType":"VariableDeclaration","scope":27049,"src":"76615:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27045,"name":"address","nodeType":"ElementaryTypeName","src":"76615:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76614:17:50"},"returnParameters":{"id":27048,"nodeType":"ParameterList","parameters":[],"src":"76640:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27055,"nodeType":"FunctionDefinition","src":"76680:54:50","nodes":[],"documentation":{"id":27050,"nodeType":"StructuredDocumentation","src":"76647:28:50","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"76689:11:50","parameters":{"id":27053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27052,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"76709:14:50","nodeType":"VariableDeclaration","scope":27055,"src":"76701:22:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27051,"name":"uint256","nodeType":"ElementaryTypeName","src":"76701:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76700:24:50"},"returnParameters":{"id":27054,"nodeType":"ParameterList","parameters":[],"src":"76733:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27061,"nodeType":"FunctionDefinition","src":"76770:46:50","nodes":[],"documentation":{"id":27056,"nodeType":"StructuredDocumentation","src":"76740:25:50","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"76779:7:50","parameters":{"id":27059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27058,"mutability":"mutable","name":"newChainId","nameLocation":"76795:10:50","nodeType":"VariableDeclaration","scope":27061,"src":"76787:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27057,"name":"uint256","nodeType":"ElementaryTypeName","src":"76787:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76786:20:50"},"returnParameters":{"id":27060,"nodeType":"ParameterList","parameters":[],"src":"76815:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27065,"nodeType":"FunctionDefinition","src":"76855:37:50","nodes":[],"documentation":{"id":27062,"nodeType":"StructuredDocumentation","src":"76822:28:50","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"76864:16:50","parameters":{"id":27063,"nodeType":"ParameterList","parameters":[],"src":"76880:2:50"},"returnParameters":{"id":27064,"nodeType":"ParameterList","parameters":[],"src":"76891:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27071,"nodeType":"FunctionDefinition","src":"76929:48:50","nodes":[],"documentation":{"id":27066,"nodeType":"StructuredDocumentation","src":"76898:26:50","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"76938:8:50","parameters":{"id":27069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27068,"mutability":"mutable","name":"newCoinbase","nameLocation":"76955:11:50","nodeType":"VariableDeclaration","scope":27071,"src":"76947:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27067,"name":"address","nodeType":"ElementaryTypeName","src":"76947:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76946:21:50"},"returnParameters":{"id":27070,"nodeType":"ParameterList","parameters":[],"src":"76976:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27079,"nodeType":"FunctionDefinition","src":"77097:82:50","nodes":[],"documentation":{"id":27072,"nodeType":"StructuredDocumentation","src":"76983:109:50","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77106:10:50","parameters":{"id":27075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27074,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77133:10:50","nodeType":"VariableDeclaration","scope":27079,"src":"77117:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27073,"name":"string","nodeType":"ElementaryTypeName","src":"77117:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77116:28:50"},"returnParameters":{"id":27078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27077,"mutability":"mutable","name":"forkId","nameLocation":"77171:6:50","nodeType":"VariableDeclaration","scope":27079,"src":"77163:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27076,"name":"uint256","nodeType":"ElementaryTypeName","src":"77163:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77162:16:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27089,"nodeType":"FunctionDefinition","src":"77286:103:50","nodes":[],"documentation":{"id":27080,"nodeType":"StructuredDocumentation","src":"77185:96:50","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77295:10:50","parameters":{"id":27085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27082,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77322:10:50","nodeType":"VariableDeclaration","scope":27089,"src":"77306:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27081,"name":"string","nodeType":"ElementaryTypeName","src":"77306:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":27084,"mutability":"mutable","name":"blockNumber","nameLocation":"77342:11:50","nodeType":"VariableDeclaration","scope":27089,"src":"77334:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27083,"name":"uint256","nodeType":"ElementaryTypeName","src":"77334:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77305:49:50"},"returnParameters":{"id":27088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27087,"mutability":"mutable","name":"forkId","nameLocation":"77381:6:50","nodeType":"VariableDeclaration","scope":27089,"src":"77373:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27086,"name":"uint256","nodeType":"ElementaryTypeName","src":"77373:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77372:16:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27099,"nodeType":"FunctionDefinition","src":"77614:98:50","nodes":[],"documentation":{"id":27090,"nodeType":"StructuredDocumentation","src":"77395:214:50","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77623:10:50","parameters":{"id":27095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27092,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77650:10:50","nodeType":"VariableDeclaration","scope":27099,"src":"77634:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27091,"name":"string","nodeType":"ElementaryTypeName","src":"77634:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":27094,"mutability":"mutable","name":"txHash","nameLocation":"77670:6:50","nodeType":"VariableDeclaration","scope":27099,"src":"77662:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77662:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77633:44:50"},"returnParameters":{"id":27098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27097,"mutability":"mutable","name":"forkId","nameLocation":"77704:6:50","nodeType":"VariableDeclaration","scope":27099,"src":"77696:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27096,"name":"uint256","nodeType":"ElementaryTypeName","src":"77696:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77695:16:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27107,"nodeType":"FunctionDefinition","src":"77847:88:50","nodes":[],"documentation":{"id":27100,"nodeType":"StructuredDocumentation","src":"77718:124:50","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"77856:16:50","parameters":{"id":27103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27102,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77889:10:50","nodeType":"VariableDeclaration","scope":27107,"src":"77873:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27101,"name":"string","nodeType":"ElementaryTypeName","src":"77873:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77872:28:50"},"returnParameters":{"id":27106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27105,"mutability":"mutable","name":"forkId","nameLocation":"77927:6:50","nodeType":"VariableDeclaration","scope":27107,"src":"77919:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27104,"name":"uint256","nodeType":"ElementaryTypeName","src":"77919:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77918:16:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27117,"nodeType":"FunctionDefinition","src":"78059:109:50","nodes":[],"documentation":{"id":27108,"nodeType":"StructuredDocumentation","src":"77941:113:50","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78068:16:50","parameters":{"id":27113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27110,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78101:10:50","nodeType":"VariableDeclaration","scope":27117,"src":"78085:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27109,"name":"string","nodeType":"ElementaryTypeName","src":"78085:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":27112,"mutability":"mutable","name":"blockNumber","nameLocation":"78121:11:50","nodeType":"VariableDeclaration","scope":27117,"src":"78113:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27111,"name":"uint256","nodeType":"ElementaryTypeName","src":"78113:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78084:49:50"},"returnParameters":{"id":27116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27115,"mutability":"mutable","name":"forkId","nameLocation":"78160:6:50","nodeType":"VariableDeclaration","scope":27117,"src":"78152:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27114,"name":"uint256","nodeType":"ElementaryTypeName","src":"78152:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78151:16:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27127,"nodeType":"FunctionDefinition","src":"78404:104:50","nodes":[],"documentation":{"id":27118,"nodeType":"StructuredDocumentation","src":"78174:225:50","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78413:16:50","parameters":{"id":27123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27120,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78446:10:50","nodeType":"VariableDeclaration","scope":27127,"src":"78430:26:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27119,"name":"string","nodeType":"ElementaryTypeName","src":"78430:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":27122,"mutability":"mutable","name":"txHash","nameLocation":"78466:6:50","nodeType":"VariableDeclaration","scope":27127,"src":"78458:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78458:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78429:44:50"},"returnParameters":{"id":27126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27125,"mutability":"mutable","name":"forkId","nameLocation":"78500:6:50","nodeType":"VariableDeclaration","scope":27127,"src":"78492:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27124,"name":"uint256","nodeType":"ElementaryTypeName","src":"78492:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78491:16:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27135,"nodeType":"FunctionDefinition","src":"78548:60:50","nodes":[],"documentation":{"id":27128,"nodeType":"StructuredDocumentation","src":"78514:29:50","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"78557:4:50","parameters":{"id":27133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27130,"mutability":"mutable","name":"account","nameLocation":"78570:7:50","nodeType":"VariableDeclaration","scope":27135,"src":"78562:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27129,"name":"address","nodeType":"ElementaryTypeName","src":"78562:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27132,"mutability":"mutable","name":"newBalance","nameLocation":"78587:10:50","nodeType":"VariableDeclaration","scope":27135,"src":"78579:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27131,"name":"uint256","nodeType":"ElementaryTypeName","src":"78579:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78561:37:50"},"returnParameters":{"id":27134,"nodeType":"ParameterList","parameters":[],"src":"78607:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27143,"nodeType":"FunctionDefinition","src":"78846:76:50","nodes":[],"documentation":{"id":27136,"nodeType":"StructuredDocumentation","src":"78614:227:50","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"78855:14:50","parameters":{"id":27139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27138,"mutability":"mutable","name":"snapshotId","nameLocation":"78878:10:50","nodeType":"VariableDeclaration","scope":27143,"src":"78870:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27137,"name":"uint256","nodeType":"ElementaryTypeName","src":"78870:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78869:20:50"},"returnParameters":{"id":27142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27141,"mutability":"mutable","name":"success","nameLocation":"78913:7:50","nodeType":"VariableDeclaration","scope":27143,"src":"78908:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27140,"name":"bool","nodeType":"ElementaryTypeName","src":"78908:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"78907:14:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27147,"nodeType":"FunctionDefinition","src":"78994:36:50","nodes":[],"documentation":{"id":27144,"nodeType":"StructuredDocumentation","src":"78928:61:50","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"79003:15:50","parameters":{"id":27145,"nodeType":"ParameterList","parameters":[],"src":"79018:2:50"},"returnParameters":{"id":27146,"nodeType":"ParameterList","parameters":[],"src":"79029:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27153,"nodeType":"FunctionDefinition","src":"79206:52:50","nodes":[],"documentation":{"id":27148,"nodeType":"StructuredDocumentation","src":"79036:165:50","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"79215:10:50","parameters":{"id":27151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27150,"mutability":"mutable","name":"newDifficulty","nameLocation":"79234:13:50","nodeType":"VariableDeclaration","scope":27153,"src":"79226:21:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27149,"name":"uint256","nodeType":"ElementaryTypeName","src":"79226:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79225:23:50"},"returnParameters":{"id":27152,"nodeType":"ParameterList","parameters":[],"src":"79257:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27159,"nodeType":"FunctionDefinition","src":"79317:61:50","nodes":[],"documentation":{"id":27154,"nodeType":"StructuredDocumentation","src":"79264:48:50","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"79326:9:50","parameters":{"id":27157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27156,"mutability":"mutable","name":"pathToStateJson","nameLocation":"79352:15:50","nodeType":"VariableDeclaration","scope":27159,"src":"79336:31:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27155,"name":"string","nodeType":"ElementaryTypeName","src":"79336:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79335:33:50"},"returnParameters":{"id":27158,"nodeType":"ParameterList","parameters":[],"src":"79377:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27167,"nodeType":"FunctionDefinition","src":"79415:74:50","nodes":[],"documentation":{"id":27160,"nodeType":"StructuredDocumentation","src":"79384:26:50","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"79424:4:50","parameters":{"id":27165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27162,"mutability":"mutable","name":"target","nameLocation":"79437:6:50","nodeType":"VariableDeclaration","scope":27167,"src":"79429:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27161,"name":"address","nodeType":"ElementaryTypeName","src":"79429:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27164,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"79460:18:50","nodeType":"VariableDeclaration","scope":27167,"src":"79445:33:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27163,"name":"bytes","nodeType":"ElementaryTypeName","src":"79445:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79428:51:50"},"returnParameters":{"id":27166,"nodeType":"ParameterList","parameters":[],"src":"79488:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27173,"nodeType":"FunctionDefinition","src":"79525:42:50","nodes":[],"documentation":{"id":27168,"nodeType":"StructuredDocumentation","src":"79495:25:50","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"79534:3:50","parameters":{"id":27171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27170,"mutability":"mutable","name":"newBasefee","nameLocation":"79546:10:50","nodeType":"VariableDeclaration","scope":27173,"src":"79538:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27169,"name":"uint256","nodeType":"ElementaryTypeName","src":"79538:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79537:20:50"},"returnParameters":{"id":27172,"nodeType":"ParameterList","parameters":[],"src":"79566:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27181,"nodeType":"FunctionDefinition","src":"79634:79:50","nodes":[],"documentation":{"id":27174,"nodeType":"StructuredDocumentation","src":"79573:56:50","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"79643:12:50","parameters":{"id":27177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27176,"mutability":"mutable","name":"account","nameLocation":"79664:7:50","nodeType":"VariableDeclaration","scope":27181,"src":"79656:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27175,"name":"address","nodeType":"ElementaryTypeName","src":"79656:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79655:17:50"},"returnParameters":{"id":27180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27179,"mutability":"mutable","name":"persistent","nameLocation":"79701:10:50","nodeType":"VariableDeclaration","scope":27181,"src":"79696:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27178,"name":"bool","nodeType":"ElementaryTypeName","src":"79696:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79695:17:50"},"scope":27635,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":27187,"nodeType":"FunctionDefinition","src":"79794:63:50","nodes":[],"documentation":{"id":27182,"nodeType":"StructuredDocumentation","src":"79719:70:50","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"79803:10:50","parameters":{"id":27185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27184,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"79830:16:50","nodeType":"VariableDeclaration","scope":27187,"src":"79814:32:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":27183,"name":"string","nodeType":"ElementaryTypeName","src":"79814:6:50","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79813:34:50"},"returnParameters":{"id":27186,"nodeType":"ParameterList","parameters":[],"src":"79856:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27193,"nodeType":"FunctionDefinition","src":"80060:50:50","nodes":[],"documentation":{"id":27188,"nodeType":"StructuredDocumentation","src":"79863:192:50","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80069:14:50","parameters":{"id":27191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27190,"mutability":"mutable","name":"account","nameLocation":"80092:7:50","nodeType":"VariableDeclaration","scope":27193,"src":"80084:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27189,"name":"address","nodeType":"ElementaryTypeName","src":"80084:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80083:17:50"},"returnParameters":{"id":27192,"nodeType":"ParameterList","parameters":[],"src":"80109:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27201,"nodeType":"FunctionDefinition","src":"80155:69:50","nodes":[],"documentation":{"id":27194,"nodeType":"StructuredDocumentation","src":"80116:34:50","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80164:14:50","parameters":{"id":27199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27196,"mutability":"mutable","name":"account0","nameLocation":"80187:8:50","nodeType":"VariableDeclaration","scope":27201,"src":"80179:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27195,"name":"address","nodeType":"ElementaryTypeName","src":"80179:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27198,"mutability":"mutable","name":"account1","nameLocation":"80205:8:50","nodeType":"VariableDeclaration","scope":27201,"src":"80197:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27197,"name":"address","nodeType":"ElementaryTypeName","src":"80197:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80178:36:50"},"returnParameters":{"id":27200,"nodeType":"ParameterList","parameters":[],"src":"80223:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27211,"nodeType":"FunctionDefinition","src":"80269:87:50","nodes":[],"documentation":{"id":27202,"nodeType":"StructuredDocumentation","src":"80230:34:50","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80278:14:50","parameters":{"id":27209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27204,"mutability":"mutable","name":"account0","nameLocation":"80301:8:50","nodeType":"VariableDeclaration","scope":27211,"src":"80293:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27203,"name":"address","nodeType":"ElementaryTypeName","src":"80293:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27206,"mutability":"mutable","name":"account1","nameLocation":"80319:8:50","nodeType":"VariableDeclaration","scope":27211,"src":"80311:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27205,"name":"address","nodeType":"ElementaryTypeName","src":"80311:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27208,"mutability":"mutable","name":"account2","nameLocation":"80337:8:50","nodeType":"VariableDeclaration","scope":27211,"src":"80329:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27207,"name":"address","nodeType":"ElementaryTypeName","src":"80329:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80292:54:50"},"returnParameters":{"id":27210,"nodeType":"ParameterList","parameters":[],"src":"80355:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27218,"nodeType":"FunctionDefinition","src":"80401:62:50","nodes":[],"documentation":{"id":27212,"nodeType":"StructuredDocumentation","src":"80362:34:50","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80410:14:50","parameters":{"id":27216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27215,"mutability":"mutable","name":"accounts","nameLocation":"80444:8:50","nodeType":"VariableDeclaration","scope":27218,"src":"80425:27:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":27213,"name":"address","nodeType":"ElementaryTypeName","src":"80425:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":27214,"nodeType":"ArrayTypeName","src":"80425:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"80424:29:50"},"returnParameters":{"id":27217,"nodeType":"ParameterList","parameters":[],"src":"80462:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27228,"nodeType":"FunctionDefinition","src":"80534:97:50","nodes":[],"documentation":{"id":27219,"nodeType":"StructuredDocumentation","src":"80469:60:50","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"80543:14:50","parameters":{"id":27226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27221,"mutability":"mutable","name":"callee","nameLocation":"80566:6:50","nodeType":"VariableDeclaration","scope":27228,"src":"80558:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27220,"name":"address","nodeType":"ElementaryTypeName","src":"80558:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27223,"mutability":"mutable","name":"data","nameLocation":"80589:4:50","nodeType":"VariableDeclaration","scope":27228,"src":"80574:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27222,"name":"bytes","nodeType":"ElementaryTypeName","src":"80574:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27225,"mutability":"mutable","name":"revertData","nameLocation":"80610:10:50","nodeType":"VariableDeclaration","scope":27228,"src":"80595:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27224,"name":"bytes","nodeType":"ElementaryTypeName","src":"80595:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80557:64:50"},"returnParameters":{"id":27227,"nodeType":"ParameterList","parameters":[],"src":"80630:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27240,"nodeType":"FunctionDefinition","src":"80731:123:50","nodes":[],"documentation":{"id":27229,"nodeType":"StructuredDocumentation","src":"80637:89:50","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"80740:14:50","parameters":{"id":27238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27231,"mutability":"mutable","name":"callee","nameLocation":"80763:6:50","nodeType":"VariableDeclaration","scope":27240,"src":"80755:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27230,"name":"address","nodeType":"ElementaryTypeName","src":"80755:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27233,"mutability":"mutable","name":"msgValue","nameLocation":"80779:8:50","nodeType":"VariableDeclaration","scope":27240,"src":"80771:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27232,"name":"uint256","nodeType":"ElementaryTypeName","src":"80771:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27235,"mutability":"mutable","name":"data","nameLocation":"80804:4:50","nodeType":"VariableDeclaration","scope":27240,"src":"80789:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27234,"name":"bytes","nodeType":"ElementaryTypeName","src":"80789:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27237,"mutability":"mutable","name":"revertData","nameLocation":"80825:10:50","nodeType":"VariableDeclaration","scope":27240,"src":"80810:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27236,"name":"bytes","nodeType":"ElementaryTypeName","src":"80810:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80754:82:50"},"returnParameters":{"id":27239,"nodeType":"ParameterList","parameters":[],"src":"80853:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27250,"nodeType":"FunctionDefinition","src":"81114:91:50","nodes":[],"documentation":{"id":27241,"nodeType":"StructuredDocumentation","src":"80860:249:50","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81123:8:50","parameters":{"id":27248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27243,"mutability":"mutable","name":"callee","nameLocation":"81140:6:50","nodeType":"VariableDeclaration","scope":27250,"src":"81132:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27242,"name":"address","nodeType":"ElementaryTypeName","src":"81132:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27245,"mutability":"mutable","name":"data","nameLocation":"81163:4:50","nodeType":"VariableDeclaration","scope":27250,"src":"81148:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27244,"name":"bytes","nodeType":"ElementaryTypeName","src":"81148:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27247,"mutability":"mutable","name":"returnData","nameLocation":"81184:10:50","nodeType":"VariableDeclaration","scope":27250,"src":"81169:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27246,"name":"bytes","nodeType":"ElementaryTypeName","src":"81169:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81131:64:50"},"returnParameters":{"id":27249,"nodeType":"ParameterList","parameters":[],"src":"81204:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27262,"nodeType":"FunctionDefinition","src":"81380:109:50","nodes":[],"documentation":{"id":27251,"nodeType":"StructuredDocumentation","src":"81211:164:50","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81389:8:50","parameters":{"id":27260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27253,"mutability":"mutable","name":"callee","nameLocation":"81406:6:50","nodeType":"VariableDeclaration","scope":27262,"src":"81398:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27252,"name":"address","nodeType":"ElementaryTypeName","src":"81398:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27255,"mutability":"mutable","name":"msgValue","nameLocation":"81422:8:50","nodeType":"VariableDeclaration","scope":27262,"src":"81414:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27254,"name":"uint256","nodeType":"ElementaryTypeName","src":"81414:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27257,"mutability":"mutable","name":"data","nameLocation":"81447:4:50","nodeType":"VariableDeclaration","scope":27262,"src":"81432:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27256,"name":"bytes","nodeType":"ElementaryTypeName","src":"81432:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27259,"mutability":"mutable","name":"returnData","nameLocation":"81468:10:50","nodeType":"VariableDeclaration","scope":27262,"src":"81453:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27258,"name":"bytes","nodeType":"ElementaryTypeName","src":"81453:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81397:82:50"},"returnParameters":{"id":27261,"nodeType":"ParameterList","parameters":[],"src":"81488:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27268,"nodeType":"FunctionDefinition","src":"81564:43:50","nodes":[],"documentation":{"id":27263,"nodeType":"StructuredDocumentation","src":"81495:64:50","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"81573:5:50","parameters":{"id":27266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27265,"mutability":"mutable","name":"msgSender","nameLocation":"81587:9:50","nodeType":"VariableDeclaration","scope":27268,"src":"81579:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27264,"name":"address","nodeType":"ElementaryTypeName","src":"81579:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81578:19:50"},"returnParameters":{"id":27267,"nodeType":"ParameterList","parameters":[],"src":"81606:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27276,"nodeType":"FunctionDefinition","src":"81726:61:50","nodes":[],"documentation":{"id":27269,"nodeType":"StructuredDocumentation","src":"81613:108:50","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"81735:5:50","parameters":{"id":27274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27271,"mutability":"mutable","name":"msgSender","nameLocation":"81749:9:50","nodeType":"VariableDeclaration","scope":27276,"src":"81741:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27270,"name":"address","nodeType":"ElementaryTypeName","src":"81741:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27273,"mutability":"mutable","name":"txOrigin","nameLocation":"81768:8:50","nodeType":"VariableDeclaration","scope":27276,"src":"81760:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27272,"name":"address","nodeType":"ElementaryTypeName","src":"81760:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81740:37:50"},"returnParameters":{"id":27275,"nodeType":"ParameterList","parameters":[],"src":"81786:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27282,"nodeType":"FunctionDefinition","src":"81964:52:50","nodes":[],"documentation":{"id":27277,"nodeType":"StructuredDocumentation","src":"81793:166:50","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"81973:10:50","parameters":{"id":27280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27279,"mutability":"mutable","name":"newPrevrandao","nameLocation":"81992:13:50","nodeType":"VariableDeclaration","scope":27282,"src":"81984:21:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81984:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81983:23:50"},"returnParameters":{"id":27281,"nodeType":"ParameterList","parameters":[],"src":"82015:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27288,"nodeType":"FunctionDefinition","src":"82193:52:50","nodes":[],"documentation":{"id":27283,"nodeType":"StructuredDocumentation","src":"82022:166:50","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"82202:10:50","parameters":{"id":27286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27285,"mutability":"mutable","name":"newPrevrandao","nameLocation":"82221:13:50","nodeType":"VariableDeclaration","scope":27288,"src":"82213:21:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27284,"name":"uint256","nodeType":"ElementaryTypeName","src":"82213:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82212:23:50"},"returnParameters":{"id":27287,"nodeType":"ParameterList","parameters":[],"src":"82244:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27295,"nodeType":"FunctionDefinition","src":"82412:56:50","nodes":[],"documentation":{"id":27289,"nodeType":"StructuredDocumentation","src":"82251:156:50","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"82421:10:50","parameters":{"id":27293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27292,"mutability":"mutable","name":"hashes","nameLocation":"82451:6:50","nodeType":"VariableDeclaration","scope":27295,"src":"82432:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":27290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82432:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":27291,"nodeType":"ArrayTypeName","src":"82432:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82431:27:50"},"returnParameters":{"id":27294,"nodeType":"ParameterList","parameters":[],"src":"82467:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27302,"nodeType":"FunctionDefinition","src":"82646:73:50","nodes":[],"documentation":{"id":27296,"nodeType":"StructuredDocumentation","src":"82474:167:50","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"82655:13:50","parameters":{"id":27297,"nodeType":"ParameterList","parameters":[],"src":"82668:2:50"},"returnParameters":{"id":27301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27300,"mutability":"mutable","name":"hashes","nameLocation":"82711:6:50","nodeType":"VariableDeclaration","scope":27302,"src":"82694:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":27298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82694:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":27299,"nodeType":"ArrayTypeName","src":"82694:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82693:25:50"},"scope":27635,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":27313,"nodeType":"FunctionDefinition","src":"82847:101:50","nodes":[],"documentation":{"id":27303,"nodeType":"StructuredDocumentation","src":"82725:117:50","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"82856:11:50","parameters":{"id":27304,"nodeType":"ParameterList","parameters":[],"src":"82867:2:50"},"returnParameters":{"id":27312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27307,"mutability":"mutable","name":"callerMode","nameLocation":"82899:10:50","nodeType":"VariableDeclaration","scope":27313,"src":"82888:21:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$23841","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":27306,"nodeType":"UserDefinedTypeName","pathNode":{"id":27305,"name":"CallerMode","nameLocations":["82888:10:50"],"nodeType":"IdentifierPath","referencedDeclaration":23841,"src":"82888:10:50"},"referencedDeclaration":23841,"src":"82888:10:50","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$23841","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":27309,"mutability":"mutable","name":"msgSender","nameLocation":"82919:9:50","nodeType":"VariableDeclaration","scope":27313,"src":"82911:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27308,"name":"address","nodeType":"ElementaryTypeName","src":"82911:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27311,"mutability":"mutable","name":"txOrigin","nameLocation":"82938:8:50","nodeType":"VariableDeclaration","scope":27313,"src":"82930:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27310,"name":"address","nodeType":"ElementaryTypeName","src":"82930:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82887:60:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27319,"nodeType":"FunctionDefinition","src":"83036:46:50","nodes":[],"documentation":{"id":27314,"nodeType":"StructuredDocumentation","src":"82954:77:50","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"83045:10:50","parameters":{"id":27317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27316,"mutability":"mutable","name":"account","nameLocation":"83064:7:50","nodeType":"VariableDeclaration","scope":27319,"src":"83056:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27315,"name":"address","nodeType":"ElementaryTypeName","src":"83056:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83055:17:50"},"returnParameters":{"id":27318,"nodeType":"ParameterList","parameters":[],"src":"83081:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27327,"nodeType":"FunctionDefinition","src":"83425:70:50","nodes":[],"documentation":{"id":27320,"nodeType":"StructuredDocumentation","src":"83088:332:50","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"83434:8:50","parameters":{"id":27323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27322,"mutability":"mutable","name":"snapshotId","nameLocation":"83451:10:50","nodeType":"VariableDeclaration","scope":27327,"src":"83443:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27321,"name":"uint256","nodeType":"ElementaryTypeName","src":"83443:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83442:20:50"},"returnParameters":{"id":27326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27325,"mutability":"mutable","name":"success","nameLocation":"83486:7:50","nodeType":"VariableDeclaration","scope":27327,"src":"83481:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27324,"name":"bool","nodeType":"ElementaryTypeName","src":"83481:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83480:14:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27335,"nodeType":"FunctionDefinition","src":"83778:79:50","nodes":[],"documentation":{"id":27328,"nodeType":"StructuredDocumentation","src":"83501:272:50","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"83787:17:50","parameters":{"id":27331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27330,"mutability":"mutable","name":"snapshotId","nameLocation":"83813:10:50","nodeType":"VariableDeclaration","scope":27335,"src":"83805:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27329,"name":"uint256","nodeType":"ElementaryTypeName","src":"83805:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83804:20:50"},"returnParameters":{"id":27334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27333,"mutability":"mutable","name":"success","nameLocation":"83848:7:50","nodeType":"VariableDeclaration","scope":27335,"src":"83843:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27332,"name":"bool","nodeType":"ElementaryTypeName","src":"83843:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83842:14:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27341,"nodeType":"FunctionDefinition","src":"83954:52:50","nodes":[],"documentation":{"id":27336,"nodeType":"StructuredDocumentation","src":"83863:86:50","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"83963:16:50","parameters":{"id":27339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27338,"mutability":"mutable","name":"account","nameLocation":"83988:7:50","nodeType":"VariableDeclaration","scope":27341,"src":"83980:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27337,"name":"address","nodeType":"ElementaryTypeName","src":"83980:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83979:17:50"},"returnParameters":{"id":27340,"nodeType":"ParameterList","parameters":[],"src":"84005:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27348,"nodeType":"FunctionDefinition","src":"84053:64:50","nodes":[],"documentation":{"id":27342,"nodeType":"StructuredDocumentation","src":"84012:36:50","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84062:16:50","parameters":{"id":27346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27345,"mutability":"mutable","name":"accounts","nameLocation":"84098:8:50","nodeType":"VariableDeclaration","scope":27348,"src":"84079:27:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":27343,"name":"address","nodeType":"ElementaryTypeName","src":"84079:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":27344,"nodeType":"ArrayTypeName","src":"84079:9:50","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84078:29:50"},"returnParameters":{"id":27347,"nodeType":"ParameterList","parameters":[],"src":"84116:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27354,"nodeType":"FunctionDefinition","src":"84152:42:50","nodes":[],"documentation":{"id":27349,"nodeType":"StructuredDocumentation","src":"84123:24:50","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"84161:4:50","parameters":{"id":27352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27351,"mutability":"mutable","name":"newHeight","nameLocation":"84174:9:50","nodeType":"VariableDeclaration","scope":27354,"src":"84166:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27350,"name":"uint256","nodeType":"ElementaryTypeName","src":"84166:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84165:19:50"},"returnParameters":{"id":27353,"nodeType":"ParameterList","parameters":[],"src":"84193:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27360,"nodeType":"FunctionDefinition","src":"84333:48:50","nodes":[],"documentation":{"id":27355,"nodeType":"StructuredDocumentation","src":"84200:128:50","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84342:8:50","parameters":{"id":27358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27357,"mutability":"mutable","name":"blockNumber","nameLocation":"84359:11:50","nodeType":"VariableDeclaration","scope":27360,"src":"84351:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27356,"name":"uint256","nodeType":"ElementaryTypeName","src":"84351:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84350:21:50"},"returnParameters":{"id":27359,"nodeType":"ParameterList","parameters":[],"src":"84380:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27366,"nodeType":"FunctionDefinition","src":"84596:43:50","nodes":[],"documentation":{"id":27361,"nodeType":"StructuredDocumentation","src":"84387:204:50","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84605:8:50","parameters":{"id":27364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27363,"mutability":"mutable","name":"txHash","nameLocation":"84622:6:50","nodeType":"VariableDeclaration","scope":27366,"src":"84614:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84614:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84613:16:50"},"returnParameters":{"id":27365,"nodeType":"ParameterList","parameters":[],"src":"84638:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27374,"nodeType":"FunctionDefinition","src":"84699:64:50","nodes":[],"documentation":{"id":27367,"nodeType":"StructuredDocumentation","src":"84645:49:50","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84708:8:50","parameters":{"id":27372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27369,"mutability":"mutable","name":"forkId","nameLocation":"84725:6:50","nodeType":"VariableDeclaration","scope":27374,"src":"84717:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27368,"name":"uint256","nodeType":"ElementaryTypeName","src":"84717:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27371,"mutability":"mutable","name":"blockNumber","nameLocation":"84741:11:50","nodeType":"VariableDeclaration","scope":27374,"src":"84733:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27370,"name":"uint256","nodeType":"ElementaryTypeName","src":"84733:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84716:37:50"},"returnParameters":{"id":27373,"nodeType":"ParameterList","parameters":[],"src":"84762:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27382,"nodeType":"FunctionDefinition","src":"84899:59:50","nodes":[],"documentation":{"id":27375,"nodeType":"StructuredDocumentation","src":"84769:125:50","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84908:8:50","parameters":{"id":27380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27377,"mutability":"mutable","name":"forkId","nameLocation":"84925:6:50","nodeType":"VariableDeclaration","scope":27382,"src":"84917:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27376,"name":"uint256","nodeType":"ElementaryTypeName","src":"84917:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27379,"mutability":"mutable","name":"txHash","nameLocation":"84941:6:50","nodeType":"VariableDeclaration","scope":27382,"src":"84933:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84933:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84916:32:50"},"returnParameters":{"id":27381,"nodeType":"ParameterList","parameters":[],"src":"84957:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27388,"nodeType":"FunctionDefinition","src":"85071:45:50","nodes":[],"documentation":{"id":27383,"nodeType":"StructuredDocumentation","src":"84964:102:50","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"85080:10:50","parameters":{"id":27386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27385,"mutability":"mutable","name":"forkId","nameLocation":"85099:6:50","nodeType":"VariableDeclaration","scope":27388,"src":"85091:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27384,"name":"uint256","nodeType":"ElementaryTypeName","src":"85091:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85090:16:50"},"returnParameters":{"id":27387,"nodeType":"ParameterList","parameters":[],"src":"85115:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27396,"nodeType":"FunctionDefinition","src":"85214:61:50","nodes":[],"documentation":{"id":27389,"nodeType":"StructuredDocumentation","src":"85122:87:50","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"85223:8:50","parameters":{"id":27394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27391,"mutability":"mutable","name":"account","nameLocation":"85240:7:50","nodeType":"VariableDeclaration","scope":27396,"src":"85232:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27390,"name":"address","nodeType":"ElementaryTypeName","src":"85232:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27393,"mutability":"mutable","name":"newNonce","nameLocation":"85256:8:50","nodeType":"VariableDeclaration","scope":27396,"src":"85249:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27392,"name":"uint64","nodeType":"ElementaryTypeName","src":"85249:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85231:34:50"},"returnParameters":{"id":27395,"nodeType":"ParameterList","parameters":[],"src":"85274:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27404,"nodeType":"FunctionDefinition","src":"85341:67:50","nodes":[],"documentation":{"id":27397,"nodeType":"StructuredDocumentation","src":"85281:55:50","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"85350:14:50","parameters":{"id":27402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27399,"mutability":"mutable","name":"account","nameLocation":"85373:7:50","nodeType":"VariableDeclaration","scope":27404,"src":"85365:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27398,"name":"address","nodeType":"ElementaryTypeName","src":"85365:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27401,"mutability":"mutable","name":"newNonce","nameLocation":"85389:8:50","nodeType":"VariableDeclaration","scope":27404,"src":"85382:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27400,"name":"uint64","nodeType":"ElementaryTypeName","src":"85382:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85364:34:50"},"returnParameters":{"id":27403,"nodeType":"ParameterList","parameters":[],"src":"85407:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27410,"nodeType":"FunctionDefinition","src":"85563:58:50","nodes":[],"documentation":{"id":27405,"nodeType":"StructuredDocumentation","src":"85414:144:50","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"85572:8:50","parameters":{"id":27406,"nodeType":"ParameterList","parameters":[],"src":"85580:2:50"},"returnParameters":{"id":27409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27408,"mutability":"mutable","name":"snapshotId","nameLocation":"85609:10:50","nodeType":"VariableDeclaration","scope":27410,"src":"85601:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27407,"name":"uint256","nodeType":"ElementaryTypeName","src":"85601:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85600:20:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27416,"nodeType":"FunctionDefinition","src":"85728:48:50","nodes":[],"documentation":{"id":27411,"nodeType":"StructuredDocumentation","src":"85627:96:50","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"85737:10:50","parameters":{"id":27414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27413,"mutability":"mutable","name":"msgSender","nameLocation":"85756:9:50","nodeType":"VariableDeclaration","scope":27416,"src":"85748:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27412,"name":"address","nodeType":"ElementaryTypeName","src":"85748:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85747:19:50"},"returnParameters":{"id":27415,"nodeType":"ParameterList","parameters":[],"src":"85775:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27424,"nodeType":"FunctionDefinition","src":"85927:66:50","nodes":[],"documentation":{"id":27417,"nodeType":"StructuredDocumentation","src":"85782:140:50","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"85936:10:50","parameters":{"id":27422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27419,"mutability":"mutable","name":"msgSender","nameLocation":"85955:9:50","nodeType":"VariableDeclaration","scope":27424,"src":"85947:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27418,"name":"address","nodeType":"ElementaryTypeName","src":"85947:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27421,"mutability":"mutable","name":"txOrigin","nameLocation":"85974:8:50","nodeType":"VariableDeclaration","scope":27424,"src":"85966:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27420,"name":"address","nodeType":"ElementaryTypeName","src":"85966:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85946:37:50"},"returnParameters":{"id":27423,"nodeType":"ParameterList","parameters":[],"src":"85992:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27428,"nodeType":"FunctionDefinition","src":"86068:30:50","nodes":[],"documentation":{"id":27425,"nodeType":"StructuredDocumentation","src":"85999:64:50","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"86077:9:50","parameters":{"id":27426,"nodeType":"ParameterList","parameters":[],"src":"86086:2:50"},"returnParameters":{"id":27427,"nodeType":"ParameterList","parameters":[],"src":"86097:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27438,"nodeType":"FunctionDefinition","src":"86156:69:50","nodes":[],"documentation":{"id":27429,"nodeType":"StructuredDocumentation","src":"86104:47:50","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"86165:5:50","parameters":{"id":27436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27431,"mutability":"mutable","name":"target","nameLocation":"86179:6:50","nodeType":"VariableDeclaration","scope":27438,"src":"86171:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27430,"name":"address","nodeType":"ElementaryTypeName","src":"86171:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27433,"mutability":"mutable","name":"slot","nameLocation":"86195:4:50","nodeType":"VariableDeclaration","scope":27438,"src":"86187:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86187:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":27435,"mutability":"mutable","name":"value","nameLocation":"86209:5:50","nodeType":"VariableDeclaration","scope":27438,"src":"86201:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86201:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86170:45:50"},"returnParameters":{"id":27437,"nodeType":"ParameterList","parameters":[],"src":"86224:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27444,"nodeType":"FunctionDefinition","src":"86328:43:50","nodes":[],"documentation":{"id":27439,"nodeType":"StructuredDocumentation","src":"86231:92:50","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86337:8:50","parameters":{"id":27442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27441,"mutability":"mutable","name":"txHash","nameLocation":"86354:6:50","nodeType":"VariableDeclaration","scope":27444,"src":"86346:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86346:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86345:16:50"},"returnParameters":{"id":27443,"nodeType":"ParameterList","parameters":[],"src":"86370:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27452,"nodeType":"FunctionDefinition","src":"86473:59:50","nodes":[],"documentation":{"id":27445,"nodeType":"StructuredDocumentation","src":"86377:91:50","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86482:8:50","parameters":{"id":27450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27447,"mutability":"mutable","name":"forkId","nameLocation":"86499:6:50","nodeType":"VariableDeclaration","scope":27452,"src":"86491:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27446,"name":"uint256","nodeType":"ElementaryTypeName","src":"86491:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27449,"mutability":"mutable","name":"txHash","nameLocation":"86515:6:50","nodeType":"VariableDeclaration","scope":27452,"src":"86507:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86507:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86490:32:50"},"returnParameters":{"id":27451,"nodeType":"ParameterList","parameters":[],"src":"86531:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27458,"nodeType":"FunctionDefinition","src":"86566:50:50","nodes":[],"documentation":{"id":27453,"nodeType":"StructuredDocumentation","src":"86538:23:50","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"86575:10:50","parameters":{"id":27456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27455,"mutability":"mutable","name":"newGasPrice","nameLocation":"86594:11:50","nodeType":"VariableDeclaration","scope":27458,"src":"86586:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27454,"name":"uint256","nodeType":"ElementaryTypeName","src":"86586:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86585:21:50"},"returnParameters":{"id":27457,"nodeType":"ParameterList","parameters":[],"src":"86615:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27464,"nodeType":"FunctionDefinition","src":"86654:45:50","nodes":[],"documentation":{"id":27459,"nodeType":"StructuredDocumentation","src":"86622:27:50","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"86663:4:50","parameters":{"id":27462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27461,"mutability":"mutable","name":"newTimestamp","nameLocation":"86676:12:50","nodeType":"VariableDeclaration","scope":27464,"src":"86668:20:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27460,"name":"uint256","nodeType":"ElementaryTypeName","src":"86668:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86667:22:50"},"returnParameters":{"id":27463,"nodeType":"ParameterList","parameters":[],"src":"86698:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27476,"nodeType":"FunctionDefinition","src":"86851:105:50","nodes":[],"documentation":{"id":27465,"nodeType":"StructuredDocumentation","src":"86739:107:50","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"86860:16:50","parameters":{"id":27474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27467,"mutability":"mutable","name":"callee","nameLocation":"86885:6:50","nodeType":"VariableDeclaration","scope":27476,"src":"86877:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27466,"name":"address","nodeType":"ElementaryTypeName","src":"86877:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27469,"mutability":"mutable","name":"msgValue","nameLocation":"86901:8:50","nodeType":"VariableDeclaration","scope":27476,"src":"86893:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27468,"name":"uint256","nodeType":"ElementaryTypeName","src":"86893:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27471,"mutability":"mutable","name":"minGas","nameLocation":"86918:6:50","nodeType":"VariableDeclaration","scope":27476,"src":"86911:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27470,"name":"uint64","nodeType":"ElementaryTypeName","src":"86911:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27473,"mutability":"mutable","name":"data","nameLocation":"86941:4:50","nodeType":"VariableDeclaration","scope":27476,"src":"86926:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27472,"name":"bytes","nodeType":"ElementaryTypeName","src":"86926:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86876:70:50"},"returnParameters":{"id":27475,"nodeType":"ParameterList","parameters":[],"src":"86955:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27490,"nodeType":"FunctionDefinition","src":"87089:127:50","nodes":[],"documentation":{"id":27477,"nodeType":"StructuredDocumentation","src":"86962:122:50","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"87098:16:50","parameters":{"id":27488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27479,"mutability":"mutable","name":"callee","nameLocation":"87123:6:50","nodeType":"VariableDeclaration","scope":27490,"src":"87115:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27478,"name":"address","nodeType":"ElementaryTypeName","src":"87115:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27481,"mutability":"mutable","name":"msgValue","nameLocation":"87139:8:50","nodeType":"VariableDeclaration","scope":27490,"src":"87131:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27480,"name":"uint256","nodeType":"ElementaryTypeName","src":"87131:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27483,"mutability":"mutable","name":"minGas","nameLocation":"87156:6:50","nodeType":"VariableDeclaration","scope":27490,"src":"87149:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27482,"name":"uint64","nodeType":"ElementaryTypeName","src":"87149:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27485,"mutability":"mutable","name":"data","nameLocation":"87179:4:50","nodeType":"VariableDeclaration","scope":27490,"src":"87164:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27484,"name":"bytes","nodeType":"ElementaryTypeName","src":"87164:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27487,"mutability":"mutable","name":"count","nameLocation":"87192:5:50","nodeType":"VariableDeclaration","scope":27490,"src":"87185:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27486,"name":"uint64","nodeType":"ElementaryTypeName","src":"87185:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87114:84:50"},"returnParameters":{"id":27489,"nodeType":"ParameterList","parameters":[],"src":"87215:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27498,"nodeType":"FunctionDefinition","src":"87348:66:50","nodes":[],"documentation":{"id":27491,"nodeType":"StructuredDocumentation","src":"87222:121:50","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87357:10:50","parameters":{"id":27496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27493,"mutability":"mutable","name":"callee","nameLocation":"87376:6:50","nodeType":"VariableDeclaration","scope":27498,"src":"87368:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27492,"name":"address","nodeType":"ElementaryTypeName","src":"87368:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27495,"mutability":"mutable","name":"data","nameLocation":"87399:4:50","nodeType":"VariableDeclaration","scope":27498,"src":"87384:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27494,"name":"bytes","nodeType":"ElementaryTypeName","src":"87384:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87367:37:50"},"returnParameters":{"id":27497,"nodeType":"ParameterList","parameters":[],"src":"87413:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27508,"nodeType":"FunctionDefinition","src":"87501:80:50","nodes":[],"documentation":{"id":27499,"nodeType":"StructuredDocumentation","src":"87420:76:50","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87510:10:50","parameters":{"id":27506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27501,"mutability":"mutable","name":"callee","nameLocation":"87529:6:50","nodeType":"VariableDeclaration","scope":27508,"src":"87521:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27500,"name":"address","nodeType":"ElementaryTypeName","src":"87521:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27503,"mutability":"mutable","name":"data","nameLocation":"87552:4:50","nodeType":"VariableDeclaration","scope":27508,"src":"87537:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27502,"name":"bytes","nodeType":"ElementaryTypeName","src":"87537:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27505,"mutability":"mutable","name":"count","nameLocation":"87565:5:50","nodeType":"VariableDeclaration","scope":27508,"src":"87558:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27504,"name":"uint64","nodeType":"ElementaryTypeName","src":"87558:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87520:51:50"},"returnParameters":{"id":27507,"nodeType":"ParameterList","parameters":[],"src":"87580:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27518,"nodeType":"FunctionDefinition","src":"87669:84:50","nodes":[],"documentation":{"id":27509,"nodeType":"StructuredDocumentation","src":"87587:77:50","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87678:10:50","parameters":{"id":27516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27511,"mutability":"mutable","name":"callee","nameLocation":"87697:6:50","nodeType":"VariableDeclaration","scope":27518,"src":"87689:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27510,"name":"address","nodeType":"ElementaryTypeName","src":"87689:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27513,"mutability":"mutable","name":"msgValue","nameLocation":"87713:8:50","nodeType":"VariableDeclaration","scope":27518,"src":"87705:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27512,"name":"uint256","nodeType":"ElementaryTypeName","src":"87705:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27515,"mutability":"mutable","name":"data","nameLocation":"87738:4:50","nodeType":"VariableDeclaration","scope":27518,"src":"87723:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27514,"name":"bytes","nodeType":"ElementaryTypeName","src":"87723:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87688:55:50"},"returnParameters":{"id":27517,"nodeType":"ParameterList","parameters":[],"src":"87752:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27530,"nodeType":"FunctionDefinition","src":"87856:98:50","nodes":[],"documentation":{"id":27519,"nodeType":"StructuredDocumentation","src":"87759:92:50","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87865:10:50","parameters":{"id":27528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27521,"mutability":"mutable","name":"callee","nameLocation":"87884:6:50","nodeType":"VariableDeclaration","scope":27530,"src":"87876:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27520,"name":"address","nodeType":"ElementaryTypeName","src":"87876:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27523,"mutability":"mutable","name":"msgValue","nameLocation":"87900:8:50","nodeType":"VariableDeclaration","scope":27530,"src":"87892:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27522,"name":"uint256","nodeType":"ElementaryTypeName","src":"87892:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27525,"mutability":"mutable","name":"data","nameLocation":"87925:4:50","nodeType":"VariableDeclaration","scope":27530,"src":"87910:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27524,"name":"bytes","nodeType":"ElementaryTypeName","src":"87910:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27527,"mutability":"mutable","name":"count","nameLocation":"87938:5:50","nodeType":"VariableDeclaration","scope":27530,"src":"87931:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27526,"name":"uint64","nodeType":"ElementaryTypeName","src":"87931:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87875:69:50"},"returnParameters":{"id":27529,"nodeType":"ParameterList","parameters":[],"src":"87953:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27542,"nodeType":"FunctionDefinition","src":"88047:96:50","nodes":[],"documentation":{"id":27531,"nodeType":"StructuredDocumentation","src":"87960:82:50","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88056:10:50","parameters":{"id":27540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27533,"mutability":"mutable","name":"callee","nameLocation":"88075:6:50","nodeType":"VariableDeclaration","scope":27542,"src":"88067:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27532,"name":"address","nodeType":"ElementaryTypeName","src":"88067:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27535,"mutability":"mutable","name":"msgValue","nameLocation":"88091:8:50","nodeType":"VariableDeclaration","scope":27542,"src":"88083:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27534,"name":"uint256","nodeType":"ElementaryTypeName","src":"88083:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27537,"mutability":"mutable","name":"gas","nameLocation":"88108:3:50","nodeType":"VariableDeclaration","scope":27542,"src":"88101:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27536,"name":"uint64","nodeType":"ElementaryTypeName","src":"88101:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27539,"mutability":"mutable","name":"data","nameLocation":"88128:4:50","nodeType":"VariableDeclaration","scope":27542,"src":"88113:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27538,"name":"bytes","nodeType":"ElementaryTypeName","src":"88113:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88066:67:50"},"returnParameters":{"id":27541,"nodeType":"ParameterList","parameters":[],"src":"88142:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27556,"nodeType":"FunctionDefinition","src":"88252:110:50","nodes":[],"documentation":{"id":27543,"nodeType":"StructuredDocumentation","src":"88149:98:50","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88261:10:50","parameters":{"id":27554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27545,"mutability":"mutable","name":"callee","nameLocation":"88280:6:50","nodeType":"VariableDeclaration","scope":27556,"src":"88272:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27544,"name":"address","nodeType":"ElementaryTypeName","src":"88272:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27547,"mutability":"mutable","name":"msgValue","nameLocation":"88296:8:50","nodeType":"VariableDeclaration","scope":27556,"src":"88288:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27546,"name":"uint256","nodeType":"ElementaryTypeName","src":"88288:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27549,"mutability":"mutable","name":"gas","nameLocation":"88313:3:50","nodeType":"VariableDeclaration","scope":27556,"src":"88306:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27548,"name":"uint64","nodeType":"ElementaryTypeName","src":"88306:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27551,"mutability":"mutable","name":"data","nameLocation":"88333:4:50","nodeType":"VariableDeclaration","scope":27556,"src":"88318:19:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27550,"name":"bytes","nodeType":"ElementaryTypeName","src":"88318:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":27553,"mutability":"mutable","name":"count","nameLocation":"88346:5:50","nodeType":"VariableDeclaration","scope":27556,"src":"88339:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27552,"name":"uint64","nodeType":"ElementaryTypeName","src":"88339:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88271:81:50"},"returnParameters":{"id":27555,"nodeType":"ParameterList","parameters":[],"src":"88361:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27568,"nodeType":"FunctionDefinition","src":"88701:99:50","nodes":[],"documentation":{"id":27557,"nodeType":"StructuredDocumentation","src":"88368:328:50","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"88710:10:50","parameters":{"id":27566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27559,"mutability":"mutable","name":"checkTopic1","nameLocation":"88726:11:50","nodeType":"VariableDeclaration","scope":27568,"src":"88721:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27558,"name":"bool","nodeType":"ElementaryTypeName","src":"88721:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27561,"mutability":"mutable","name":"checkTopic2","nameLocation":"88744:11:50","nodeType":"VariableDeclaration","scope":27568,"src":"88739:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27560,"name":"bool","nodeType":"ElementaryTypeName","src":"88739:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27563,"mutability":"mutable","name":"checkTopic3","nameLocation":"88762:11:50","nodeType":"VariableDeclaration","scope":27568,"src":"88757:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27562,"name":"bool","nodeType":"ElementaryTypeName","src":"88757:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27565,"mutability":"mutable","name":"checkData","nameLocation":"88780:9:50","nodeType":"VariableDeclaration","scope":27568,"src":"88775:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27564,"name":"bool","nodeType":"ElementaryTypeName","src":"88775:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88720:70:50"},"returnParameters":{"id":27567,"nodeType":"ParameterList","parameters":[],"src":"88799:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27582,"nodeType":"FunctionDefinition","src":"88903:124:50","nodes":[],"documentation":{"id":27569,"nodeType":"StructuredDocumentation","src":"88806:92:50","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"88912:10:50","parameters":{"id":27580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27571,"mutability":"mutable","name":"checkTopic1","nameLocation":"88928:11:50","nodeType":"VariableDeclaration","scope":27582,"src":"88923:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27570,"name":"bool","nodeType":"ElementaryTypeName","src":"88923:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27573,"mutability":"mutable","name":"checkTopic2","nameLocation":"88946:11:50","nodeType":"VariableDeclaration","scope":27582,"src":"88941:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27572,"name":"bool","nodeType":"ElementaryTypeName","src":"88941:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27575,"mutability":"mutable","name":"checkTopic3","nameLocation":"88964:11:50","nodeType":"VariableDeclaration","scope":27582,"src":"88959:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27574,"name":"bool","nodeType":"ElementaryTypeName","src":"88959:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27577,"mutability":"mutable","name":"checkData","nameLocation":"88982:9:50","nodeType":"VariableDeclaration","scope":27582,"src":"88977:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27576,"name":"bool","nodeType":"ElementaryTypeName","src":"88977:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27579,"mutability":"mutable","name":"emitter","nameLocation":"89001:7:50","nodeType":"VariableDeclaration","scope":27582,"src":"88993:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27578,"name":"address","nodeType":"ElementaryTypeName","src":"88993:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88922:87:50"},"returnParameters":{"id":27581,"nodeType":"ParameterList","parameters":[],"src":"89026:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27586,"nodeType":"FunctionDefinition","src":"89297:31:50","nodes":[],"documentation":{"id":27583,"nodeType":"StructuredDocumentation","src":"89033:259:50","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89306:10:50","parameters":{"id":27584,"nodeType":"ParameterList","parameters":[],"src":"89316:2:50"},"returnParameters":{"id":27585,"nodeType":"ParameterList","parameters":[],"src":"89327:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27592,"nodeType":"FunctionDefinition","src":"89431:46:50","nodes":[],"documentation":{"id":27587,"nodeType":"StructuredDocumentation","src":"89334:92:50","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89440:10:50","parameters":{"id":27590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27589,"mutability":"mutable","name":"emitter","nameLocation":"89459:7:50","nodeType":"VariableDeclaration","scope":27592,"src":"89451:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27588,"name":"address","nodeType":"ElementaryTypeName","src":"89451:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89450:17:50"},"returnParameters":{"id":27591,"nodeType":"ParameterList","parameters":[],"src":"89476:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27596,"nodeType":"FunctionDefinition","src":"89543:33:50","nodes":[],"documentation":{"id":27593,"nodeType":"StructuredDocumentation","src":"89483:55:50","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89552:12:50","parameters":{"id":27594,"nodeType":"ParameterList","parameters":[],"src":"89564:2:50"},"returnParameters":{"id":27595,"nodeType":"ParameterList","parameters":[],"src":"89575:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27602,"nodeType":"FunctionDefinition","src":"89654:50:50","nodes":[],"documentation":{"id":27597,"nodeType":"StructuredDocumentation","src":"89582:67:50","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89663:12:50","parameters":{"id":27600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27599,"mutability":"mutable","name":"revertData","nameLocation":"89683:10:50","nodeType":"VariableDeclaration","scope":27602,"src":"89676:17:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":27598,"name":"bytes4","nodeType":"ElementaryTypeName","src":"89676:6:50","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"89675:19:50"},"returnParameters":{"id":27601,"nodeType":"ParameterList","parameters":[],"src":"89703:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27608,"nodeType":"FunctionDefinition","src":"89786:58:50","nodes":[],"documentation":{"id":27603,"nodeType":"StructuredDocumentation","src":"89710:71:50","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89795:12:50","parameters":{"id":27606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27605,"mutability":"mutable","name":"revertData","nameLocation":"89823:10:50","nodeType":"VariableDeclaration","scope":27608,"src":"89808:25:50","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":27604,"name":"bytes","nodeType":"ElementaryTypeName","src":"89808:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89807:27:50"},"returnParameters":{"id":27607,"nodeType":"ParameterList","parameters":[],"src":"89843:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27616,"nodeType":"FunctionDefinition","src":"90073:59:50","nodes":[],"documentation":{"id":27609,"nodeType":"StructuredDocumentation","src":"89850:218:50","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"90082:16:50","parameters":{"id":27614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27611,"mutability":"mutable","name":"min","nameLocation":"90106:3:50","nodeType":"VariableDeclaration","scope":27616,"src":"90099:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27610,"name":"uint64","nodeType":"ElementaryTypeName","src":"90099:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27613,"mutability":"mutable","name":"max","nameLocation":"90118:3:50","nodeType":"VariableDeclaration","scope":27616,"src":"90111:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27612,"name":"uint64","nodeType":"ElementaryTypeName","src":"90111:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90098:24:50"},"returnParameters":{"id":27615,"nodeType":"ParameterList","parameters":[],"src":"90131:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27624,"nodeType":"FunctionDefinition","src":"90374:63:50","nodes":[],"documentation":{"id":27617,"nodeType":"StructuredDocumentation","src":"90138:231:50","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"90383:20:50","parameters":{"id":27622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27619,"mutability":"mutable","name":"min","nameLocation":"90411:3:50","nodeType":"VariableDeclaration","scope":27624,"src":"90404:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27618,"name":"uint64","nodeType":"ElementaryTypeName","src":"90404:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27621,"mutability":"mutable","name":"max","nameLocation":"90423:3:50","nodeType":"VariableDeclaration","scope":27624,"src":"90416:10:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":27620,"name":"uint64","nodeType":"ElementaryTypeName","src":"90416:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90403:24:50"},"returnParameters":{"id":27623,"nodeType":"ParameterList","parameters":[],"src":"90436:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27630,"nodeType":"FunctionDefinition","src":"90515:38:50","nodes":[],"documentation":{"id":27625,"nodeType":"StructuredDocumentation","src":"90443:67:50","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"90524:4:50","parameters":{"id":27628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27627,"mutability":"mutable","name":"skipTest","nameLocation":"90534:8:50","nodeType":"VariableDeclaration","scope":27630,"src":"90529:13:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":27626,"name":"bool","nodeType":"ElementaryTypeName","src":"90529:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90528:15:50"},"returnParameters":{"id":27629,"nodeType":"ParameterList","parameters":[],"src":"90552:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":27634,"nodeType":"FunctionDefinition","src":"90628:41:50","nodes":[],"documentation":{"id":27631,"nodeType":"StructuredDocumentation","src":"90559:64:50","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"90637:20:50","parameters":{"id":27632,"nodeType":"ParameterList","parameters":[],"src":"90657:2:50"},"returnParameters":{"id":27633,"nodeType":"ParameterList","parameters":[],"src":"90668:0:50"},"scope":27635,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":27036,"name":"VmSafe","nameLocations":["76301:6:50"],"nodeType":"IdentifierPath","referencedDeclaration":27034,"src":"76301:6:50"},"id":27037,"nodeType":"InheritanceSpecifier","src":"76301:6:50"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":27035,"nodeType":"StructuredDocumentation","src":"76114:171:50","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[27635,27034],"name":"Vm","nameLocation":"76295:2:50","scope":27636,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":50}